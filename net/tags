!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
ACKCIADDR	lwip/netif/ppp/ipcp.c	/^#define ACKCIADDR(/;"	d	file:
ACKCICHAP	lwip/netif/ppp/lcp.c	/^#define ACKCICHAP(/;"	d	file:
ACKCICHAR	lwip/netif/ppp/lcp.c	/^#define ACKCICHAR(/;"	d	file:
ACKCIDNS	lwip/netif/ppp/ipcp.c	/^#define ACKCIDNS(/;"	d	file:
ACKCILONG	lwip/netif/ppp/lcp.c	/^#define ACKCILONG(/;"	d	file:
ACKCILQR	lwip/netif/ppp/lcp.c	/^#define ACKCILQR(/;"	d	file:
ACKCISHORT	lwip/netif/ppp/lcp.c	/^#define ACKCISHORT(/;"	d	file:
ACKCIVJ	lwip/netif/ppp/ipcp.c	/^#define ACKCIVJ(/;"	d	file:
ACKCIVOID	lwip/netif/ppp/lcp.c	/^#define ACKCIVOID(/;"	d	file:
ADDCIADDR	lwip/netif/ppp/ipcp.c	/^#define ADDCIADDR(/;"	d	file:
ADDCICHAP	lwip/netif/ppp/lcp.c	/^#define ADDCICHAP(/;"	d	file:
ADDCICHAR	lwip/netif/ppp/lcp.c	/^#define ADDCICHAR(/;"	d	file:
ADDCIDNS	lwip/netif/ppp/ipcp.c	/^#define ADDCIDNS(/;"	d	file:
ADDCILONG	lwip/netif/ppp/lcp.c	/^#define ADDCILONG(/;"	d	file:
ADDCILQR	lwip/netif/ppp/lcp.c	/^#define ADDCILQR(/;"	d	file:
ADDCISHORT	lwip/netif/ppp/lcp.c	/^#define ADDCISHORT(/;"	d	file:
ADDCIVJ	lwip/netif/ppp/ipcp.c	/^#define ADDCIVJ(/;"	d	file:
ADDCIVOID	lwip/netif/ppp/lcp.c	/^#define ADDCIVOID(/;"	d	file:
AF_INET	lwip/include/lwip/sockets.h	/^#define AF_INET /;"	d
AF_UNSPEC	lwip/include/lwip/sockets.h	/^#define AF_UNSPEC /;"	d
ANNOUNCE_INTERVAL	lwip/include/ipv4/lwip/autoip.h	/^#define ANNOUNCE_INTERVAL /;"	d
ANNOUNCE_NUM	lwip/include/ipv4/lwip/autoip.h	/^#define ANNOUNCE_NUM /;"	d
ANNOUNCE_WAIT	lwip/include/ipv4/lwip/autoip.h	/^#define ANNOUNCE_WAIT /;"	d
API_EVENT	lwip/include/lwip/api.h	/^#define API_EVENT(/;"	d
API_LIB_DEBUG	lwip/include/lwip/opt.h	/^#define API_LIB_DEBUG /;"	d
API_MSG_DEBUG	lwip/include/lwip/opt.h	/^#define API_MSG_DEBUG /;"	d
ARPH_HWLEN	lwip/netif/etharp.c	/^#define ARPH_HWLEN(/;"	d	file:
ARPH_HWLEN_SET	lwip/netif/etharp.c	/^#define ARPH_HWLEN_SET(/;"	d	file:
ARPH_PROTOLEN	lwip/netif/etharp.c	/^#define ARPH_PROTOLEN(/;"	d	file:
ARPH_PROTOLEN_SET	lwip/netif/etharp.c	/^#define ARPH_PROTOLEN_SET(/;"	d	file:
ARP_MAXAGE	lwip/netif/etharp.c	/^#define ARP_MAXAGE /;"	d	file:
ARP_MAXPENDING	lwip/netif/etharp.c	/^#define ARP_MAXPENDING /;"	d	file:
ARP_QUEUEING	lwip/include/lwip/opt.h	/^#define ARP_QUEUEING /;"	d
ARP_REPLY	lwip/include/netif/etharp.h	/^#define ARP_REPLY /;"	d
ARP_REQUEST	lwip/include/netif/etharp.h	/^#define ARP_REQUEST /;"	d
ARP_TABLE_SIZE	lwip/include/lwip/opt.h	/^#define ARP_TABLE_SIZE /;"	d
ARP_TMR_INTERVAL	lwip/include/netif/etharp.h	/^#define ARP_TMR_INTERVAL /;"	d
AUTHDEBUG	lwip/netif/ppp/pppdebug.h	/^#define AUTHDEBUG(/;"	d
AUTH_H	lwip/netif/ppp/auth.h	/^#define AUTH_H$/;"	d
AUTOIP_DEBUG	lwip/include/lwip/opt.h	/^#define AUTOIP_DEBUG /;"	d
AUTOIP_STATE_ANNOUNCING	lwip/include/ipv4/lwip/autoip.h	/^#define AUTOIP_STATE_ANNOUNCING /;"	d
AUTOIP_STATE_BOUND	lwip/include/ipv4/lwip/autoip.h	/^#define AUTOIP_STATE_BOUND /;"	d
AUTOIP_STATE_OFF	lwip/include/ipv4/lwip/autoip.h	/^#define AUTOIP_STATE_OFF /;"	d
AUTOIP_STATE_PROBING	lwip/include/ipv4/lwip/autoip.h	/^#define AUTOIP_STATE_PROBING /;"	d
AUTOIP_TICKS_PER_SECOND	lwip/include/ipv4/lwip/autoip.h	/^#define AUTOIP_TICKS_PER_SECOND /;"	d
AUTOIP_TMR_INTERVAL	lwip/include/ipv4/lwip/autoip.h	/^#define AUTOIP_TMR_INTERVAL /;"	d
BCMP	lwip/netif/ppp/ppp.h	/^#define BCMP(/;"	d
BCOPY	lwip/netif/ppp/ppp.h	/^#define BCOPY(/;"	d
BIG_ENDIAN	lwip/include/lwip/arch.h	/^#define BIG_ENDIAN /;"	d
BYTE_ORDER	lwip/jos/arch/cc.h	/^#define BYTE_ORDER /;"	d
BZERO	lwip/netif/ppp/ppp.h	/^#define BZERO(/;"	d
CBCP_OPT	lwip/netif/ppp/lcp.h	/^#define CBCP_OPT /;"	d
CBCP_SUPPORT	lwip/include/lwip/opt.h	/^#define CBCP_SUPPORT /;"	d
CCP_SUPPORT	lwip/include/lwip/opt.h	/^#define CCP_SUPPORT /;"	d
CHAPCS_CLOSED	lwip/netif/ppp/chap.h	/^#define CHAPCS_CLOSED /;"	d
CHAPCS_INITIAL	lwip/netif/ppp/chap.h	/^#define CHAPCS_INITIAL /;"	d
CHAPCS_LISTEN	lwip/netif/ppp/chap.h	/^#define CHAPCS_LISTEN /;"	d
CHAPCS_OPEN	lwip/netif/ppp/chap.h	/^#define CHAPCS_OPEN /;"	d
CHAPCS_PENDING	lwip/netif/ppp/chap.h	/^#define CHAPCS_PENDING /;"	d
CHAPCS_RESPONSE	lwip/netif/ppp/chap.h	/^#define CHAPCS_RESPONSE /;"	d
CHAPDEBUG	lwip/netif/ppp/pppdebug.h	/^#define CHAPDEBUG(/;"	d
CHAPSS_BADAUTH	lwip/netif/ppp/chap.h	/^#define CHAPSS_BADAUTH /;"	d
CHAPSS_CLOSED	lwip/netif/ppp/chap.h	/^#define CHAPSS_CLOSED /;"	d
CHAPSS_INITIAL	lwip/netif/ppp/chap.h	/^#define CHAPSS_INITIAL /;"	d
CHAPSS_INITIAL_CHAL	lwip/netif/ppp/chap.h	/^#define CHAPSS_INITIAL_CHAL /;"	d
CHAPSS_OPEN	lwip/netif/ppp/chap.h	/^#define CHAPSS_OPEN /;"	d
CHAPSS_PENDING	lwip/netif/ppp/chap.h	/^#define CHAPSS_PENDING /;"	d
CHAPSS_RECHALLENGE	lwip/netif/ppp/chap.h	/^#define CHAPSS_RECHALLENGE /;"	d
CHAP_CHALLENGE	lwip/netif/ppp/chap.h	/^#define CHAP_CHALLENGE /;"	d
CHAP_DEFTIMEOUT	lwip/include/lwip/opt.h	/^#define CHAP_DEFTIMEOUT /;"	d
CHAP_DEFTRANSMITS	lwip/include/lwip/opt.h	/^#define CHAP_DEFTRANSMITS /;"	d
CHAP_DIGEST_MD5	lwip/netif/ppp/chap.h	/^#define CHAP_DIGEST_MD5 /;"	d
CHAP_FAILURE	lwip/netif/ppp/chap.h	/^#define CHAP_FAILURE /;"	d
CHAP_H	lwip/netif/ppp/chap.h	/^#define CHAP_H$/;"	d
CHAP_HEADERLEN	lwip/netif/ppp/chap.h	/^#define CHAP_HEADERLEN /;"	d
CHAP_MICROSOFT	lwip/netif/ppp/chap.h	/^#define CHAP_MICROSOFT /;"	d
CHAP_PEER	lwip/netif/ppp/auth.c	/^#define CHAP_PEER /;"	d	file:
CHAP_RESPONSE	lwip/netif/ppp/chap.h	/^#define CHAP_RESPONSE /;"	d
CHAP_SUCCESS	lwip/netif/ppp/chap.h	/^#define CHAP_SUCCESS /;"	d
CHAP_SUPPORT	lwip/include/lwip/opt.h	/^#define CHAP_SUPPORT /;"	d
CHAP_WITHPEER	lwip/netif/ppp/auth.c	/^#define CHAP_WITHPEER /;"	d	file:
CHECKSUM_CHECK_IP	lwip/include/lwip/opt.h	/^#define CHECKSUM_CHECK_IP /;"	d
CHECKSUM_CHECK_TCP	lwip/include/lwip/opt.h	/^#define CHECKSUM_CHECK_TCP /;"	d
CHECKSUM_CHECK_UDP	lwip/include/lwip/opt.h	/^#define CHECKSUM_CHECK_UDP /;"	d
CHECKSUM_GEN_IP	lwip/include/lwip/opt.h	/^#define CHECKSUM_GEN_IP /;"	d
CHECKSUM_GEN_TCP	lwip/include/lwip/opt.h	/^#define CHECKSUM_GEN_TCP /;"	d
CHECKSUM_GEN_UDP	lwip/include/lwip/opt.h	/^#define CHECKSUM_GEN_UDP /;"	d
CHPMS_H	lwip/netif/ppp/chpms.h	/^#define CHPMS_H$/;"	d
CILEN_ADDR	lwip/netif/ppp/ipcp.c	/^#define CILEN_ADDR /;"	d	file:
CILEN_ADDRS	lwip/netif/ppp/ipcp.c	/^#define CILEN_ADDRS /;"	d	file:
CILEN_CBCP	lwip/netif/ppp/lcp.c	/^#define CILEN_CBCP /;"	d	file:
CILEN_CHAP	lwip/netif/ppp/lcp.c	/^#define CILEN_CHAP /;"	d	file:
CILEN_CHAR	lwip/netif/ppp/lcp.c	/^#define CILEN_CHAR /;"	d	file:
CILEN_COMPRESS	lwip/netif/ppp/ipcp.c	/^#define CILEN_COMPRESS /;"	d	file:
CILEN_LONG	lwip/netif/ppp/lcp.c	/^#define CILEN_LONG /;"	d	file:
CILEN_LQR	lwip/netif/ppp/lcp.c	/^#define CILEN_LQR /;"	d	file:
CILEN_SHORT	lwip/netif/ppp/lcp.c	/^#define CILEN_SHORT /;"	d	file:
CILEN_VJ	lwip/netif/ppp/ipcp.c	/^#define CILEN_VJ /;"	d	file:
CILEN_VOID	lwip/netif/ppp/ipcp.c	/^#define CILEN_VOID /;"	d	file:
CILEN_VOID	lwip/netif/ppp/lcp.c	/^#define CILEN_VOID /;"	d	file:
CI_ACCOMPRESSION	lwip/netif/ppp/lcp.h	/^#define CI_ACCOMPRESSION /;"	d
CI_ADDR	lwip/netif/ppp/ipcp.h	/^#define CI_ADDR /;"	d
CI_ADDRS	lwip/netif/ppp/ipcp.h	/^#define CI_ADDRS /;"	d
CI_ASYNCMAP	lwip/netif/ppp/lcp.h	/^#define CI_ASYNCMAP /;"	d
CI_AUTHTYPE	lwip/netif/ppp/lcp.h	/^#define CI_AUTHTYPE /;"	d
CI_CALLBACK	lwip/netif/ppp/lcp.h	/^#define CI_CALLBACK /;"	d
CI_COMPRESSTYPE	lwip/netif/ppp/ipcp.h	/^#define CI_COMPRESSTYPE /;"	d
CI_EPDISC	lwip/netif/ppp/lcp.h	/^#define CI_EPDISC /;"	d
CI_MAGICNUMBER	lwip/netif/ppp/lcp.h	/^#define CI_MAGICNUMBER /;"	d
CI_MRRU	lwip/netif/ppp/lcp.h	/^#define CI_MRRU /;"	d
CI_MRU	lwip/netif/ppp/lcp.h	/^#define CI_MRU /;"	d
CI_MS_DNS1	lwip/netif/ppp/ipcp.h	/^#define CI_MS_DNS1 /;"	d
CI_MS_DNS2	lwip/netif/ppp/ipcp.h	/^#define CI_MS_DNS2 /;"	d
CI_MS_WINS1	lwip/netif/ppp/ipcp.h	/^#define CI_MS_WINS1 /;"	d
CI_MS_WINS2	lwip/netif/ppp/ipcp.h	/^#define CI_MS_WINS2 /;"	d
CI_PCOMPRESSION	lwip/netif/ppp/lcp.h	/^#define CI_PCOMPRESSION /;"	d
CI_QUALITY	lwip/netif/ppp/lcp.h	/^#define CI_QUALITY /;"	d
CI_SSNHF	lwip/netif/ppp/lcp.h	/^#define CI_SSNHF /;"	d
CLOSED	lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CODENAME	lwip/netif/ppp/ipcp.c	/^#define CODENAME(/;"	d	file:
CODENAME	lwip/netif/ppp/lcp.c	/^#define CODENAME(/;"	d	file:
CODEREJ	lwip/netif/ppp/fsm.h	/^#define CODEREJ /;"	d
CONFACK	lwip/netif/ppp/fsm.h	/^#define CONFACK /;"	d
CONFNAK	lwip/netif/ppp/fsm.h	/^#define CONFNAK /;"	d
CONFREJ	lwip/netif/ppp/fsm.h	/^#define CONFREJ /;"	d
CONFREQ	lwip/netif/ppp/fsm.h	/^#define CONFREQ /;"	d
ChallengeResponse	lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	typeref:typename:void	file:
ChapAuthPeer	lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f	typeref:typename:void
ChapAuthWithPeer	lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f	typeref:typename:void
ChapChallengeTimeout	lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	typeref:typename:void	file:
ChapGenChallenge	lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	typeref:typename:void	file:
ChapInit	lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	typeref:typename:void	file:
ChapInput	lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	typeref:typename:void	file:
ChapLowerDown	lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	typeref:typename:void	file:
ChapLowerUp	lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	typeref:typename:void	file:
ChapMS	lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f	typeref:typename:void
ChapMS_LANMan	lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	typeref:typename:void	file:
ChapMS_NT	lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	typeref:typename:void	file:
ChapProtocolReject	lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	typeref:typename:void	file:
ChapReceiveChallenge	lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	typeref:typename:void	file:
ChapReceiveFailure	lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	typeref:typename:void	file:
ChapReceiveResponse	lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	typeref:typename:void	file:
ChapReceiveSuccess	lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	typeref:typename:void	file:
ChapRechallenge	lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	typeref:typename:void	file:
ChapResponseTimeout	lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	typeref:typename:void	file:
ChapSendChallenge	lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	typeref:typename:void	file:
ChapSendResponse	lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	typeref:typename:void	file:
ChapSendStatus	lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	typeref:typename:void	file:
Collapse	lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	typeref:typename:void	file:
DBG_MIN_LEVEL	lwip/jos/lwipopts.h	/^#define DBG_MIN_LEVEL	/;"	d
DECODEL	lwip/netif/ppp/vj.c	/^#define DECODEL(/;"	d	file:
DECODES	lwip/netif/ppp/vj.c	/^#define DECODES(/;"	d	file:
DECODEU	lwip/netif/ppp/vj.c	/^#define DECODEU(/;"	d	file:
DECPTR	lwip/netif/ppp/ppp.h	/^#define DECPTR(/;"	d
DEFAULT	ns.h	/^#define DEFAULT /;"	d
DEFAULT_ACCEPTMBOX_SIZE	lwip/include/lwip/opt.h	/^#define DEFAULT_ACCEPTMBOX_SIZE /;"	d
DEFAULT_RAW_RECVMBOX_SIZE	lwip/include/lwip/opt.h	/^#define DEFAULT_RAW_RECVMBOX_SIZE /;"	d
DEFAULT_TCP_RECVMBOX_SIZE	lwip/include/lwip/opt.h	/^#define DEFAULT_TCP_RECVMBOX_SIZE /;"	d
DEFAULT_THREAD_NAME	lwip/include/lwip/opt.h	/^#define DEFAULT_THREAD_NAME /;"	d
DEFAULT_THREAD_PRIO	lwip/include/lwip/opt.h	/^#define DEFAULT_THREAD_PRIO /;"	d
DEFAULT_THREAD_STACKSIZE	lwip/include/lwip/opt.h	/^#define DEFAULT_THREAD_STACKSIZE /;"	d
DEFAULT_UDP_RECVMBOX_SIZE	lwip/include/lwip/opt.h	/^#define DEFAULT_UDP_RECVMBOX_SIZE /;"	d
DEFEND_INTERVAL	lwip/include/ipv4/lwip/autoip.h	/^#define DEFEND_INTERVAL /;"	d
DEFLOOPBACKFAIL	lwip/netif/ppp/lcp.h	/^#define DEFLOOPBACKFAIL /;"	d
DHCP_ACK	lwip/include/lwip/dhcp.h	/^#define DHCP_ACK /;"	d
DHCP_AUTOIP_COOP_STATE_OFF	lwip/include/lwip/dhcp.h	/^#define DHCP_AUTOIP_COOP_STATE_OFF /;"	d
DHCP_AUTOIP_COOP_STATE_ON	lwip/include/lwip/dhcp.h	/^#define DHCP_AUTOIP_COOP_STATE_ON /;"	d
DHCP_BACKING_OFF	lwip/include/lwip/dhcp.h	/^#define DHCP_BACKING_OFF /;"	d
DHCP_BOOTREPLY	lwip/include/lwip/dhcp.h	/^#define DHCP_BOOTREPLY /;"	d
DHCP_BOOTREQUEST	lwip/include/lwip/dhcp.h	/^#define DHCP_BOOTREQUEST /;"	d
DHCP_BOUND	lwip/include/lwip/dhcp.h	/^#define DHCP_BOUND /;"	d
DHCP_BROADCAST_FLAG	lwip/include/lwip/dhcp.h	/^#define DHCP_BROADCAST_FLAG /;"	d
DHCP_BROADCAST_MASK	lwip/include/lwip/dhcp.h	/^#define DHCP_BROADCAST_MASK /;"	d
DHCP_CHADDR_LEN	lwip/include/lwip/dhcp.h	/^#define DHCP_CHADDR_LEN /;"	d
DHCP_CHADDR_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_CHADDR_OFS /;"	d
DHCP_CHECKING	lwip/include/lwip/dhcp.h	/^#define DHCP_CHECKING /;"	d
DHCP_CIADDR_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_CIADDR_OFS /;"	d
DHCP_CLIENT_PORT	lwip/include/lwip/dhcp.h	/^#define DHCP_CLIENT_PORT /;"	d
DHCP_COARSE_TIMER_MSECS	lwip/include/lwip/dhcp.h	/^#define DHCP_COARSE_TIMER_MSECS /;"	d
DHCP_COARSE_TIMER_SECS	lwip/include/lwip/dhcp.h	/^#define DHCP_COARSE_TIMER_SECS /;"	d
DHCP_COOKIE_OFS	lwip/include/lwip/dhcp.h	/^#define DHCP_COOKIE_OFS /;"	d
DHCP_DEBUG	lwip/include/lwip/opt.h	/^#define DHCP_DEBUG /;"	d
DHCP_DECLINE	lwip/include/lwip/dhcp.h	/^#define DHCP_DECLINE /;"	d
DHCP_DISCOVER	lwip/include/lwip/dhcp.h	/^#define DHCP_DISCOVER /;"	d
DHCP_DOES_ARP_CHECK	lwip/include/lwip/opt.h	/^#define DHCP_DOES_ARP_CHECK /;"	d
DHCP_FILE_LEN	lwip/include/lwip/dhcp.h	/^#define DHCP_FILE_LEN /;"	d
DHCP_FILE_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_FILE_OFS /;"	d
DHCP_FINE_TIMER_MSECS	lwip/include/lwip/dhcp.h	/^#define DHCP_FINE_TIMER_MSECS /;"	d
DHCP_FLAGS_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_FLAGS_OFS /;"	d
DHCP_GIADDR_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_GIADDR_OFS /;"	d
DHCP_HLEN_ETH	lwip/include/lwip/dhcp.h	/^#define DHCP_HLEN_ETH /;"	d
DHCP_HLEN_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_HLEN_OFS /;"	d
DHCP_HOPS_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_HOPS_OFS /;"	d
DHCP_HTYPE_ETH	lwip/include/lwip/dhcp.h	/^#define DHCP_HTYPE_ETH /;"	d
DHCP_HTYPE_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_HTYPE_OFS /;"	d
DHCP_INFORM	lwip/include/lwip/dhcp.h	/^#define DHCP_INFORM /;"	d
DHCP_INFORMING	lwip/include/lwip/dhcp.h	/^#define DHCP_INFORMING /;"	d
DHCP_INIT	lwip/include/lwip/dhcp.h	/^#define DHCP_INIT /;"	d
DHCP_MAX_DNS	lwip/include/lwip/dhcp.h	/^#define DHCP_MAX_DNS /;"	d
DHCP_MIN_OPTIONS_LEN	lwip/include/lwip/dhcp.h	/^#define DHCP_MIN_OPTIONS_LEN /;"	d
DHCP_MSG_LEN	lwip/include/lwip/dhcp.h	/^#define DHCP_MSG_LEN /;"	d
DHCP_MSG_OFS	lwip/include/lwip/dhcp.h	/^#define DHCP_MSG_OFS /;"	d
DHCP_NAK	lwip/include/lwip/dhcp.h	/^#define DHCP_NAK /;"	d
DHCP_OFF	lwip/include/lwip/dhcp.h	/^#define DHCP_OFF /;"	d
DHCP_OFFER	lwip/include/lwip/dhcp.h	/^#define DHCP_OFFER /;"	d
DHCP_OPTIONS_LEN	lwip/include/lwip/dhcp.h	/^#  define DHCP_OPTIONS_LEN /;"	d
DHCP_OPTIONS_OFS	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTIONS_OFS /;"	d
DHCP_OPTION_BOOTFILE	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_BOOTFILE /;"	d
DHCP_OPTION_BROADCAST	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_BROADCAST /;"	d
DHCP_OPTION_CLIENT_ID	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_CLIENT_ID /;"	d
DHCP_OPTION_DNS_SERVER	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_DNS_SERVER /;"	d
DHCP_OPTION_END	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_END /;"	d
DHCP_OPTION_HOSTNAME	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_HOSTNAME /;"	d
DHCP_OPTION_IP_TTL	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_IP_TTL /;"	d
DHCP_OPTION_LEASE_TIME	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_LEASE_TIME /;"	d
DHCP_OPTION_MAX_MSG_SIZE	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_MAX_MSG_SIZE /;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_MAX_MSG_SIZE_LEN /;"	d
DHCP_OPTION_MESSAGE_TYPE	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_MESSAGE_TYPE /;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_MESSAGE_TYPE_LEN /;"	d
DHCP_OPTION_MTU	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_MTU /;"	d
DHCP_OPTION_OVERLOAD	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_OVERLOAD /;"	d
DHCP_OPTION_PAD	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_PAD /;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_PARAMETER_REQUEST_LIST /;"	d
DHCP_OPTION_REQUESTED_IP	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_REQUESTED_IP /;"	d
DHCP_OPTION_ROUTER	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_ROUTER /;"	d
DHCP_OPTION_SERVER_ID	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_SERVER_ID /;"	d
DHCP_OPTION_SUBNET_MASK	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_SUBNET_MASK /;"	d
DHCP_OPTION_T1	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_T1 /;"	d
DHCP_OPTION_T2	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_T2 /;"	d
DHCP_OPTION_TCP_TTL	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_TCP_TTL /;"	d
DHCP_OPTION_TFTP_SERVERNAME	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_TFTP_SERVERNAME /;"	d
DHCP_OPTION_US	lwip/include/lwip/dhcp.h	/^#define DHCP_OPTION_US /;"	d
DHCP_OP_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_OP_OFS /;"	d
DHCP_OVERLOAD_FILE	lwip/include/lwip/dhcp.h	/^#define DHCP_OVERLOAD_FILE /;"	d
DHCP_OVERLOAD_NONE	lwip/include/lwip/dhcp.h	/^#define DHCP_OVERLOAD_NONE /;"	d
DHCP_OVERLOAD_SNAME	lwip/include/lwip/dhcp.h	/^#define DHCP_OVERLOAD_SNAME /;"	d
DHCP_OVERLOAD_SNAME_FILE	lwip/include/lwip/dhcp.h	/^#define DHCP_OVERLOAD_SNAME_FILE /;"	d
DHCP_PERMANENT	lwip/include/lwip/dhcp.h	/^#define DHCP_PERMANENT /;"	d
DHCP_REBINDING	lwip/include/lwip/dhcp.h	/^#define DHCP_REBINDING /;"	d
DHCP_REBOOTING	lwip/include/lwip/dhcp.h	/^#define DHCP_REBOOTING /;"	d
DHCP_RELEASE	lwip/include/lwip/dhcp.h	/^#define DHCP_RELEASE /;"	d
DHCP_RENEWING	lwip/include/lwip/dhcp.h	/^#define DHCP_RENEWING /;"	d
DHCP_REQUEST	lwip/include/lwip/dhcp.h	/^#define DHCP_REQUEST /;"	d
DHCP_REQUESTING	lwip/include/lwip/dhcp.h	/^#define DHCP_REQUESTING /;"	d
DHCP_SECS_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_SECS_OFS /;"	d
DHCP_SELECTING	lwip/include/lwip/dhcp.h	/^#define DHCP_SELECTING /;"	d
DHCP_SERVER_PORT	lwip/include/lwip/dhcp.h	/^#define DHCP_SERVER_PORT /;"	d
DHCP_SIADDR_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_SIADDR_OFS /;"	d
DHCP_SNAME_LEN	lwip/include/lwip/dhcp.h	/^#define DHCP_SNAME_LEN /;"	d
DHCP_SNAME_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_SNAME_OFS /;"	d
DHCP_XID_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_XID_OFS /;"	d
DHCP_YIADDR_OFS	lwip/include/lwip/dhcp.h	/^  #define DHCP_YIADDR_OFS /;"	d
DISCREQ	lwip/netif/ppp/lcp.h	/^#define DISCREQ /;"	d
DNS_DEBUG	lwip/include/lwip/opt.h	/^#define DNS_DEBUG /;"	d
DNS_DOES_NAME_CHECK	lwip/include/lwip/opt.h	/^#define DNS_DOES_NAME_CHECK /;"	d
DNS_FLAG1_AUTHORATIVE	lwip/core/dns.c	/^#define DNS_FLAG1_AUTHORATIVE /;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	lwip/core/dns.c	/^#define DNS_FLAG1_OPCODE_INVERSE /;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	lwip/core/dns.c	/^#define DNS_FLAG1_OPCODE_STANDARD /;"	d	file:
DNS_FLAG1_OPCODE_STATUS	lwip/core/dns.c	/^#define DNS_FLAG1_OPCODE_STATUS /;"	d	file:
DNS_FLAG1_RD	lwip/core/dns.c	/^#define DNS_FLAG1_RD /;"	d	file:
DNS_FLAG1_RESPONSE	lwip/core/dns.c	/^#define DNS_FLAG1_RESPONSE /;"	d	file:
DNS_FLAG1_TRUNC	lwip/core/dns.c	/^#define DNS_FLAG1_TRUNC /;"	d	file:
DNS_FLAG2_ERR_MASK	lwip/core/dns.c	/^#define DNS_FLAG2_ERR_MASK /;"	d	file:
DNS_FLAG2_ERR_NAME	lwip/core/dns.c	/^#define DNS_FLAG2_ERR_NAME /;"	d	file:
DNS_FLAG2_ERR_NONE	lwip/core/dns.c	/^#define DNS_FLAG2_ERR_NONE /;"	d	file:
DNS_FLAG2_RA	lwip/core/dns.c	/^#define DNS_FLAG2_RA /;"	d	file:
DNS_MAX_NAME_LENGTH	lwip/include/lwip/opt.h	/^#define DNS_MAX_NAME_LENGTH /;"	d
DNS_MAX_RETRIES	lwip/core/dns.c	/^#define DNS_MAX_RETRIES /;"	d	file:
DNS_MAX_SERVERS	lwip/include/lwip/opt.h	/^#define DNS_MAX_SERVERS /;"	d
DNS_MAX_TTL	lwip/core/dns.c	/^#define DNS_MAX_TTL /;"	d	file:
DNS_MSG_SIZE	lwip/include/lwip/opt.h	/^#define DNS_MSG_SIZE /;"	d
DNS_RRCLASS_CH	lwip/include/lwip/dns.h	/^#define DNS_RRCLASS_CH /;"	d
DNS_RRCLASS_CS	lwip/include/lwip/dns.h	/^#define DNS_RRCLASS_CS /;"	d
DNS_RRCLASS_FLUSH	lwip/include/lwip/dns.h	/^#define DNS_RRCLASS_FLUSH /;"	d
DNS_RRCLASS_HS	lwip/include/lwip/dns.h	/^#define DNS_RRCLASS_HS /;"	d
DNS_RRCLASS_IN	lwip/include/lwip/dns.h	/^#define DNS_RRCLASS_IN /;"	d
DNS_RRTYPE_A	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_A /;"	d
DNS_RRTYPE_CNAME	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_CNAME /;"	d
DNS_RRTYPE_HINFO	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_HINFO /;"	d
DNS_RRTYPE_MB	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_MB /;"	d
DNS_RRTYPE_MD	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_MD /;"	d
DNS_RRTYPE_MF	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_MF /;"	d
DNS_RRTYPE_MG	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_MG /;"	d
DNS_RRTYPE_MINFO	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_MINFO /;"	d
DNS_RRTYPE_MR	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_MR /;"	d
DNS_RRTYPE_MX	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_MX /;"	d
DNS_RRTYPE_NS	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_NS /;"	d
DNS_RRTYPE_NULL	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_NULL /;"	d
DNS_RRTYPE_PTR	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_PTR /;"	d
DNS_RRTYPE_SOA	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_SOA /;"	d
DNS_RRTYPE_TXT	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_TXT /;"	d
DNS_RRTYPE_WKS	lwip/include/lwip/dns.h	/^#define DNS_RRTYPE_WKS /;"	d
DNS_SERVER_ADDRESS	lwip/core/dns.c	/^#define DNS_SERVER_ADDRESS /;"	d	file:
DNS_SERVER_PORT	lwip/core/dns.c	/^#define DNS_SERVER_PORT /;"	d	file:
DNS_STATE_ASKING	lwip/core/dns.c	/^#define DNS_STATE_ASKING /;"	d	file:
DNS_STATE_DONE	lwip/core/dns.c	/^#define DNS_STATE_DONE /;"	d	file:
DNS_STATE_NEW	lwip/core/dns.c	/^#define DNS_STATE_NEW /;"	d	file:
DNS_STATE_UNUSED	lwip/core/dns.c	/^#define DNS_STATE_UNUSED /;"	d	file:
DNS_TABLE_SIZE	lwip/include/lwip/opt.h	/^#define DNS_TABLE_SIZE /;"	d
DNS_TMR_INTERVAL	lwip/include/lwip/dns.h	/^#define DNS_TMR_INTERVAL /;"	d
DNS_USES_STATIC_BUF	lwip/include/lwip/opt.h	/^#define DNS_USES_STATIC_BUF /;"	d
DesEncrypt	lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	typeref:typename:void	file:
E2BIG	lwip/include/lwip/arch.h	/^#define  E2BIG /;"	d
EACCES	lwip/include/lwip/arch.h	/^#define  EACCES /;"	d
EADDRINUSE	lwip/include/lwip/arch.h	/^#define  EADDRINUSE /;"	d
EADDRNOTAVAIL	lwip/include/lwip/arch.h	/^#define  EADDRNOTAVAIL /;"	d
EADV	lwip/include/lwip/arch.h	/^#define  EADV /;"	d
EAFNOSUPPORT	lwip/include/lwip/arch.h	/^#define  EAFNOSUPPORT /;"	d
EAGAIN	lwip/include/lwip/arch.h	/^#define  EAGAIN /;"	d
EAI_FAIL	lwip/include/lwip/netdb.h	/^#define EAI_FAIL /;"	d
EAI_MEMORY	lwip/include/lwip/netdb.h	/^#define EAI_MEMORY /;"	d
EAI_NONAME	lwip/include/lwip/netdb.h	/^#define EAI_NONAME /;"	d
EAI_SERVICE	lwip/include/lwip/netdb.h	/^#define EAI_SERVICE /;"	d
EALREADY	lwip/include/lwip/arch.h	/^#define  EALREADY /;"	d
EBADE	lwip/include/lwip/arch.h	/^#define  EBADE /;"	d
EBADF	lwip/include/lwip/arch.h	/^#define  EBADF /;"	d
EBADFD	lwip/include/lwip/arch.h	/^#define  EBADFD /;"	d
EBADMSG	lwip/include/lwip/arch.h	/^#define  EBADMSG /;"	d
EBADR	lwip/include/lwip/arch.h	/^#define  EBADR /;"	d
EBADRQC	lwip/include/lwip/arch.h	/^#define  EBADRQC /;"	d
EBADSLT	lwip/include/lwip/arch.h	/^#define  EBADSLT /;"	d
EBFONT	lwip/include/lwip/arch.h	/^#define  EBFONT /;"	d
EBUSY	lwip/include/lwip/arch.h	/^#define  EBUSY /;"	d
ECHILD	lwip/include/lwip/arch.h	/^#define  ECHILD /;"	d
ECHOREP	lwip/netif/ppp/lcp.h	/^#define ECHOREP /;"	d
ECHOREQ	lwip/netif/ppp/lcp.h	/^#define ECHOREQ /;"	d
ECHRNG	lwip/include/lwip/arch.h	/^#define  ECHRNG /;"	d
ECOMM	lwip/include/lwip/arch.h	/^#define  ECOMM /;"	d
ECONNABORTED	lwip/include/lwip/arch.h	/^#define  ECONNABORTED /;"	d
ECONNREFUSED	lwip/include/lwip/arch.h	/^#define  ECONNREFUSED /;"	d
ECONNRESET	lwip/include/lwip/arch.h	/^#define  ECONNRESET /;"	d
EDEADLK	lwip/include/lwip/arch.h	/^#define  EDEADLK /;"	d
EDEADLOCK	lwip/include/lwip/arch.h	/^#define  EDEADLOCK /;"	d
EDESTADDRREQ	lwip/include/lwip/arch.h	/^#define  EDESTADDRREQ /;"	d
EDOM	lwip/include/lwip/arch.h	/^#define  EDOM /;"	d
EDOTDOT	lwip/include/lwip/arch.h	/^#define  EDOTDOT /;"	d
EDQUOT	lwip/include/lwip/arch.h	/^#define  EDQUOT /;"	d
EEXIST	lwip/include/lwip/arch.h	/^#define  EEXIST /;"	d
EFAULT	lwip/include/lwip/arch.h	/^#define  EFAULT /;"	d
EFBIG	lwip/include/lwip/arch.h	/^#define  EFBIG /;"	d
EHOSTDOWN	lwip/include/lwip/arch.h	/^#define  EHOSTDOWN /;"	d
EHOSTUNREACH	lwip/include/lwip/arch.h	/^#define  EHOSTUNREACH /;"	d
EIDRM	lwip/include/lwip/arch.h	/^#define  EIDRM /;"	d
EILSEQ	lwip/include/lwip/arch.h	/^#define  EILSEQ /;"	d
EINPROGRESS	lwip/include/lwip/arch.h	/^#define  EINPROGRESS /;"	d
EINTR	lwip/include/lwip/arch.h	/^#define  EINTR /;"	d
EINVAL	lwip/include/lwip/arch.h	/^#define  EINVAL /;"	d
EIO	lwip/include/lwip/arch.h	/^#define  EIO /;"	d
EISCONN	lwip/include/lwip/arch.h	/^#define  EISCONN /;"	d
EISDIR	lwip/include/lwip/arch.h	/^#define  EISDIR /;"	d
EISNAM	lwip/include/lwip/arch.h	/^#define  EISNAM /;"	d
EL2HLT	lwip/include/lwip/arch.h	/^#define  EL2HLT /;"	d
EL2NSYNC	lwip/include/lwip/arch.h	/^#define  EL2NSYNC /;"	d
EL3HLT	lwip/include/lwip/arch.h	/^#define  EL3HLT /;"	d
EL3RST	lwip/include/lwip/arch.h	/^#define  EL3RST /;"	d
ELIBACC	lwip/include/lwip/arch.h	/^#define  ELIBACC /;"	d
ELIBBAD	lwip/include/lwip/arch.h	/^#define  ELIBBAD /;"	d
ELIBEXEC	lwip/include/lwip/arch.h	/^#define  ELIBEXEC /;"	d
ELIBMAX	lwip/include/lwip/arch.h	/^#define  ELIBMAX /;"	d
ELIBSCN	lwip/include/lwip/arch.h	/^#define  ELIBSCN /;"	d
ELNRNG	lwip/include/lwip/arch.h	/^#define  ELNRNG /;"	d
ELOOP	lwip/include/lwip/arch.h	/^#define  ELOOP /;"	d
EMEDIUMTYPE	lwip/include/lwip/arch.h	/^#define  EMEDIUMTYPE /;"	d
EMFILE	lwip/include/lwip/arch.h	/^#define  EMFILE /;"	d
EMLINK	lwip/include/lwip/arch.h	/^#define  EMLINK /;"	d
EMSGSIZE	lwip/include/lwip/arch.h	/^#define  EMSGSIZE /;"	d
EMULTIHOP	lwip/include/lwip/arch.h	/^#define  EMULTIHOP /;"	d
ENABLE_LOOPBACK	lwip/include/lwip/netif.h	/^#define ENABLE_LOOPBACK /;"	d
ENAMETOOLONG	lwip/include/lwip/arch.h	/^#define  ENAMETOOLONG /;"	d
ENAVAIL	lwip/include/lwip/arch.h	/^#define  ENAVAIL /;"	d
ENCODE	lwip/netif/ppp/vj.c	/^#define ENCODE(/;"	d	file:
ENCODEZ	lwip/netif/ppp/vj.c	/^#define ENCODEZ(/;"	d	file:
ENETDOWN	lwip/include/lwip/arch.h	/^#define  ENETDOWN /;"	d
ENETRESET	lwip/include/lwip/arch.h	/^#define  ENETRESET /;"	d
ENETUNREACH	lwip/include/lwip/arch.h	/^#define  ENETUNREACH /;"	d
ENFILE	lwip/include/lwip/arch.h	/^#define  ENFILE /;"	d
ENOANO	lwip/include/lwip/arch.h	/^#define  ENOANO /;"	d
ENOBUFS	lwip/include/lwip/arch.h	/^#define  ENOBUFS /;"	d
ENOCSI	lwip/include/lwip/arch.h	/^#define  ENOCSI /;"	d
ENODATA	lwip/include/lwip/arch.h	/^#define  ENODATA /;"	d
ENODEV	lwip/include/lwip/arch.h	/^#define  ENODEV /;"	d
ENOENT	lwip/include/lwip/arch.h	/^#define  ENOENT /;"	d
ENOEXEC	lwip/include/lwip/arch.h	/^#define  ENOEXEC /;"	d
ENOLCK	lwip/include/lwip/arch.h	/^#define  ENOLCK /;"	d
ENOLINK	lwip/include/lwip/arch.h	/^#define  ENOLINK /;"	d
ENOMEDIUM	lwip/include/lwip/arch.h	/^#define  ENOMEDIUM /;"	d
ENOMEM	lwip/include/lwip/arch.h	/^#define  ENOMEM /;"	d
ENOMSG	lwip/include/lwip/arch.h	/^#define  ENOMSG /;"	d
ENONET	lwip/include/lwip/arch.h	/^#define  ENONET /;"	d
ENOPKG	lwip/include/lwip/arch.h	/^#define  ENOPKG /;"	d
ENOPROTOOPT	lwip/include/lwip/arch.h	/^#define  ENOPROTOOPT /;"	d
ENOSPC	lwip/include/lwip/arch.h	/^#define  ENOSPC /;"	d
ENOSR	lwip/include/lwip/arch.h	/^#define  ENOSR /;"	d
ENOSTR	lwip/include/lwip/arch.h	/^#define  ENOSTR /;"	d
ENOSYS	lwip/include/lwip/arch.h	/^#define  ENOSYS /;"	d
ENOTBLK	lwip/include/lwip/arch.h	/^#define  ENOTBLK /;"	d
ENOTCONN	lwip/include/lwip/arch.h	/^#define  ENOTCONN /;"	d
ENOTDIR	lwip/include/lwip/arch.h	/^#define  ENOTDIR /;"	d
ENOTEMPTY	lwip/include/lwip/arch.h	/^#define  ENOTEMPTY /;"	d
ENOTNAM	lwip/include/lwip/arch.h	/^#define  ENOTNAM /;"	d
ENOTSOCK	lwip/include/lwip/arch.h	/^#define  ENOTSOCK /;"	d
ENOTTY	lwip/include/lwip/arch.h	/^#define  ENOTTY /;"	d
ENOTUNIQ	lwip/include/lwip/arch.h	/^#define  ENOTUNIQ /;"	d
ENSRBADFAMILY	lwip/include/lwip/arch.h	/^#define ENSRBADFAMILY /;"	d
ENSRBADNAME	lwip/include/lwip/arch.h	/^#define ENSRBADNAME /;"	d
ENSRBADQUERY	lwip/include/lwip/arch.h	/^#define ENSRBADQUERY /;"	d
ENSRBADRESP	lwip/include/lwip/arch.h	/^#define ENSRBADRESP /;"	d
ENSRCNAMELOOP	lwip/include/lwip/arch.h	/^#define ENSRCNAMELOOP /;"	d
ENSRCONNREFUSED	lwip/include/lwip/arch.h	/^#define ENSRCONNREFUSED /;"	d
ENSRDESTRUCTION	lwip/include/lwip/arch.h	/^#define ENSRDESTRUCTION /;"	d
ENSRFILE	lwip/include/lwip/arch.h	/^#define ENSRFILE /;"	d
ENSRFORMERR	lwip/include/lwip/arch.h	/^#define ENSRFORMERR /;"	d
ENSRNODATA	lwip/include/lwip/arch.h	/^#define ENSRNODATA /;"	d
ENSRNOMEM	lwip/include/lwip/arch.h	/^#define ENSRNOMEM /;"	d
ENSRNOTFOUND	lwip/include/lwip/arch.h	/^#define ENSRNOTFOUND /;"	d
ENSRNOTIMP	lwip/include/lwip/arch.h	/^#define ENSRNOTIMP /;"	d
ENSROF	lwip/include/lwip/arch.h	/^#define ENSROF /;"	d
ENSROK	lwip/include/lwip/arch.h	/^#define ENSROK /;"	d
ENSRQUERYDOMAINTOOLONG	lwip/include/lwip/arch.h	/^#define ENSRQUERYDOMAINTOOLONG /;"	d
ENSRREFUSED	lwip/include/lwip/arch.h	/^#define ENSRREFUSED /;"	d
ENSRSERVFAIL	lwip/include/lwip/arch.h	/^#define ENSRSERVFAIL /;"	d
ENSRTIMEOUT	lwip/include/lwip/arch.h	/^#define ENSRTIMEOUT /;"	d
ENTRY	lwip/jos/arch/longjmp.S	/^#define ENTRY(/;"	d	file:
ENXIO	lwip/include/lwip/arch.h	/^#define  ENXIO /;"	d
EOPNOTSUPP	lwip/include/lwip/arch.h	/^#define  EOPNOTSUPP /;"	d
EOVERFLOW	lwip/include/lwip/arch.h	/^#define  EOVERFLOW /;"	d
EPERM	lwip/include/lwip/arch.h	/^#define  EPERM /;"	d
EPFNOSUPPORT	lwip/include/lwip/arch.h	/^#define  EPFNOSUPPORT /;"	d
EPIPE	lwip/include/lwip/arch.h	/^#define  EPIPE /;"	d
EPROTO	lwip/include/lwip/arch.h	/^#define  EPROTO /;"	d
EPROTONOSUPPORT	lwip/include/lwip/arch.h	/^#define  EPROTONOSUPPORT /;"	d
EPROTOTYPE	lwip/include/lwip/arch.h	/^#define  EPROTOTYPE /;"	d
ERANGE	lwip/include/lwip/arch.h	/^#define  ERANGE /;"	d
EREMCHG	lwip/include/lwip/arch.h	/^#define  EREMCHG /;"	d
EREMOTE	lwip/include/lwip/arch.h	/^#define  EREMOTE /;"	d
EREMOTEIO	lwip/include/lwip/arch.h	/^#define  EREMOTEIO /;"	d
ERESTART	lwip/include/lwip/arch.h	/^#define  ERESTART /;"	d
EROFS	lwip/include/lwip/arch.h	/^#define  EROFS /;"	d
ERRNO	lwip/jos/lwipopts.h	/^#define ERRNO$/;"	d
ERR_ABRT	lwip/include/lwip/err.h	/^#define ERR_ABRT /;"	d
ERR_ARG	lwip/include/lwip/err.h	/^#define ERR_ARG /;"	d
ERR_BUF	lwip/include/lwip/err.h	/^#define ERR_BUF /;"	d
ERR_CLSD	lwip/include/lwip/err.h	/^#define ERR_CLSD /;"	d
ERR_CONN	lwip/include/lwip/err.h	/^#define ERR_CONN /;"	d
ERR_IF	lwip/include/lwip/err.h	/^#define ERR_IF /;"	d
ERR_INPROGRESS	lwip/include/lwip/err.h	/^#define ERR_INPROGRESS /;"	d
ERR_ISCONN	lwip/include/lwip/err.h	/^#define ERR_ISCONN /;"	d
ERR_IS_FATAL	lwip/include/lwip/err.h	/^#define ERR_IS_FATAL(/;"	d
ERR_MEM	lwip/include/lwip/err.h	/^#define ERR_MEM /;"	d
ERR_OK	lwip/include/lwip/err.h	/^#define ERR_OK /;"	d
ERR_RST	lwip/include/lwip/err.h	/^#define ERR_RST /;"	d
ERR_RTE	lwip/include/lwip/err.h	/^#define ERR_RTE /;"	d
ERR_TIMEOUT	lwip/include/lwip/err.h	/^#define ERR_TIMEOUT /;"	d
ERR_TO_ERRNO_TABLE_SIZE	lwip/api/sockets.c	/^#define ERR_TO_ERRNO_TABLE_SIZE /;"	d	file:
ERR_USE	lwip/include/lwip/err.h	/^#define ERR_USE /;"	d
ERR_VAL	lwip/include/lwip/err.h	/^#define ERR_VAL /;"	d
ESCAPE_P	lwip/netif/ppp/ppp.c	/^#define ESCAPE_P(/;"	d	file:
ESHUTDOWN	lwip/include/lwip/arch.h	/^#define  ESHUTDOWN /;"	d
ESOCKTNOSUPPORT	lwip/include/lwip/arch.h	/^#define  ESOCKTNOSUPPORT /;"	d
ESPIPE	lwip/include/lwip/arch.h	/^#define  ESPIPE /;"	d
ESRCH	lwip/include/lwip/arch.h	/^#define  ESRCH /;"	d
ESRMNT	lwip/include/lwip/arch.h	/^#define  ESRMNT /;"	d
ESTABLISHED	lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	lwip/include/lwip/arch.h	/^#define  ESTALE /;"	d
ESTRPIPE	lwip/include/lwip/arch.h	/^#define  ESTRPIPE /;"	d
ETHARP_DEBUG	lwip/include/lwip/opt.h	/^#define ETHARP_DEBUG /;"	d
ETHARP_FIND_ONLY	lwip/netif/etharp.c	/^#define ETHARP_FIND_ONLY /;"	d	file:
ETHARP_HWADDR_LEN	lwip/include/netif/etharp.h	/^#define ETHARP_HWADDR_LEN /;"	d
ETHARP_STATE_EMPTY	lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	lwip/include/lwip/opt.h	/^#define ETHARP_STATS /;"	d
ETHARP_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define ETHARP_STATS_DISPLAY(/;"	d
ETHARP_STATS_INC	lwip/include/lwip/stats.h	/^#define ETHARP_STATS_INC(/;"	d
ETHARP_TRUST_IP_MAC	lwip/include/lwip/opt.h	/^#define ETHARP_TRUST_IP_MAC /;"	d
ETHARP_TRY_HARD	lwip/netif/etharp.c	/^#define ETHARP_TRY_HARD /;"	d	file:
ETHERMTU	lwip/include/netif/ppp_oe.h	/^#define ETHERMTU /;"	d
ETHTYPE_ARP	lwip/include/netif/etharp.h	/^#define ETHTYPE_ARP /;"	d
ETHTYPE_IP	lwip/include/netif/etharp.h	/^#define ETHTYPE_IP /;"	d
ETHTYPE_PPPOE	lwip/include/netif/etharp.h	/^#define ETHTYPE_PPPOE /;"	d
ETHTYPE_PPPOEDISC	lwip/include/netif/etharp.h	/^#define ETHTYPE_PPPOEDISC /;"	d
ETH_PAD_SIZE	lwip/include/netif/etharp.h	/^#define ETH_PAD_SIZE /;"	d
ETIME	lwip/include/lwip/arch.h	/^#define  ETIME /;"	d
ETIMEDOUT	lwip/include/lwip/arch.h	/^#define  ETIMEDOUT /;"	d
ETOOMANYREFS	lwip/include/lwip/arch.h	/^#define  ETOOMANYREFS /;"	d
ETXTBSY	lwip/include/lwip/arch.h	/^#define  ETXTBSY /;"	d
EUCLEAN	lwip/include/lwip/arch.h	/^#define  EUCLEAN /;"	d
EUNATCH	lwip/include/lwip/arch.h	/^#define  EUNATCH /;"	d
EUSERS	lwip/include/lwip/arch.h	/^#define  EUSERS /;"	d
EWOULDBLOCK	lwip/include/lwip/arch.h	/^#define  EWOULDBLOCK /;"	d
EXDEV	lwip/include/lwip/arch.h	/^#define  EXDEV /;"	d
EXFULL	lwip/include/lwip/arch.h	/^#define  EXFULL /;"	d
Expand	lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	typeref:typename:void	file:
F	lwip/netif/ppp/md5.c	/^#define F(/;"	d	file:
FD_CLR	lwip/include/lwip/sockets.h	/^  #define FD_CLR(/;"	d
FD_ISSET	lwip/include/lwip/sockets.h	/^  #define FD_ISSET(/;"	d
FD_SET	lwip/include/lwip/sockets.h	/^  #define FD_SET(/;"	d
FD_SETSIZE	lwip/include/lwip/sockets.h	/^  #define FD_SETSIZE /;"	d
FD_ZERO	lwip/include/lwip/sockets.h	/^  #define FD_ZERO(/;"	d
FF	lwip/netif/ppp/md5.c	/^#define FF(/;"	d	file:
FIN_WAIT_1	lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	lwip/include/lwip/sockets.h	/^#define FIONBIO /;"	d
FIONREAD	lwip/include/lwip/sockets.h	/^#define FIONREAD /;"	d
FOLD_U32T	lwip/core/ipv4/inet_chksum.c	/^#define FOLD_U32T(/;"	d	file:
FSMDEBUG	lwip/netif/ppp/pppdebug.h	/^#define FSMDEBUG(/;"	d
FSM_DEFMAXCONFREQS	lwip/include/lwip/opt.h	/^#define FSM_DEFMAXCONFREQS /;"	d
FSM_DEFMAXNAKLOOPS	lwip/include/lwip/opt.h	/^#define FSM_DEFMAXNAKLOOPS /;"	d
FSM_DEFMAXTERMREQS	lwip/include/lwip/opt.h	/^#define FSM_DEFMAXTERMREQS /;"	d
FSM_DEFTIMEOUT	lwip/include/lwip/opt.h	/^#define FSM_DEFTIMEOUT /;"	d
FSM_H	lwip/netif/ppp/fsm.h	/^#define FSM_H$/;"	d
G	lwip/netif/ppp/md5.c	/^#define G(/;"	d	file:
GETCHAR	lwip/netif/ppp/ppp.h	/^#define GETCHAR(/;"	d
GETLONG	lwip/netif/ppp/ppp.h	/^#define GETLONG(/;"	d
GETSHORT	lwip/netif/ppp/ppp.h	/^#define GETSHORT(/;"	d
GG	lwip/netif/ppp/md5.c	/^#define GG(/;"	d	file:
Get7Bits	lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	typeref:typename:u_char	file:
GetMask	lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f	typeref:typename:u32_t
H	lwip/netif/ppp/md5.c	/^#define H(/;"	d	file:
HEADERLEN	lwip/netif/ppp/fsm.h	/^#define HEADERLEN /;"	d
HH	lwip/netif/ppp/md5.c	/^#define HH(/;"	d	file:
HOSTENT_STORAGE	lwip/api/netdb.c	/^#define HOSTENT_STORAGE /;"	d	file:
HOSTENT_STORAGE	lwip/api/netdb.c	/^#define HOSTENT_STORAGE$/;"	d	file:
HOST_NOT_FOUND	lwip/include/lwip/netdb.h	/^#define HOST_NOT_FOUND /;"	d
HWTYPE_ETHERNET	lwip/netif/etharp.c	/^#define HWTYPE_ETHERNET /;"	d	file:
I	lwip/netif/ppp/md5.c	/^#define I(/;"	d	file:
ICMP6_DUR	lwip/include/ipv6/lwip/icmp.h	/^#define ICMP6_DUR /;"	d
ICMP6_ECHO	lwip/include/ipv6/lwip/icmp.h	/^#define ICMP6_ECHO /;"	d
ICMP6_ER	lwip/include/ipv6/lwip/icmp.h	/^#define ICMP6_ER /;"	d
ICMP6_TE	lwip/include/ipv6/lwip/icmp.h	/^#define ICMP6_TE /;"	d
ICMPH_CODE	lwip/include/ipv4/lwip/icmp.h	/^#define ICMPH_CODE(/;"	d
ICMPH_CODE_SET	lwip/include/ipv4/lwip/icmp.h	/^#define ICMPH_CODE_SET(/;"	d
ICMPH_TYPE	lwip/include/ipv4/lwip/icmp.h	/^#define ICMPH_TYPE(/;"	d
ICMPH_TYPE_SET	lwip/include/ipv4/lwip/icmp.h	/^#define ICMPH_TYPE_SET(/;"	d
ICMP_DEBUG	lwip/include/lwip/opt.h	/^#define ICMP_DEBUG /;"	d
ICMP_DEST_UNREACH_DATASIZE	lwip/core/ipv4/icmp.c	/^#define ICMP_DEST_UNREACH_DATASIZE /;"	d	file:
ICMP_DUR	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_DUR /;"	d
ICMP_DUR_FRAG	lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_ECHO /;"	d
ICMP_ER	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_ER /;"	d
ICMP_IR	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_IR /;"	d
ICMP_IRQ	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_IRQ /;"	d
ICMP_PP	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_PP /;"	d
ICMP_RD	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_RD /;"	d
ICMP_SQ	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_SQ /;"	d
ICMP_STATS	lwip/include/lwip/opt.h	/^#define ICMP_STATS /;"	d
ICMP_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define ICMP_STATS_DISPLAY(/;"	d
ICMP_STATS_INC	lwip/include/lwip/stats.h	/^#define ICMP_STATS_INC(/;"	d
ICMP_TE	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_TE /;"	d
ICMP_TE_FRAG	lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_TS /;"	d
ICMP_TSR	lwip/include/ipv4/lwip/icmp.h	/^#define ICMP_TSR /;"	d
ICMP_TTL	lwip/include/lwip/opt.h	/^#define ICMP_TTL /;"	d
IFF_PASSIVE	lwip/netif/ppp/ppp_oe.c	/^#define IFF_PASSIVE /;"	d	file:
IGMP_ADD_MAC_FILTER	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_ADD_MAC_FILTER /;"	d
IGMP_DEBUG	lwip/include/lwip/opt.h	/^#define IGMP_DEBUG /;"	d
IGMP_DEL_MAC_FILTER	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_DEL_MAC_FILTER /;"	d
IGMP_GROUP_DELAYING_MEMBER	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_GROUP_DELAYING_MEMBER /;"	d
IGMP_GROUP_IDLE_MEMBER	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_GROUP_IDLE_MEMBER /;"	d
IGMP_GROUP_NON_MEMBER	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_GROUP_NON_MEMBER /;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_JOIN_DELAYING_MEMBER_TMR /;"	d
IGMP_LEAVE_GROUP	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_LEAVE_GROUP /;"	d
IGMP_MEMB_QUERY	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_MEMB_QUERY /;"	d
IGMP_MINLEN	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_MINLEN /;"	d
IGMP_STATS	lwip/include/lwip/opt.h	/^#define IGMP_STATS /;"	d
IGMP_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define IGMP_STATS_DISPLAY(/;"	d
IGMP_STATS_INC	lwip/include/lwip/stats.h	/^#define IGMP_STATS_INC(/;"	d
IGMP_TMR_INTERVAL	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_TMR_INTERVAL /;"	d
IGMP_TTL	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_TTL /;"	d
IGMP_V1_DELAYING_MEMBER_TMR	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_V1_DELAYING_MEMBER_TMR /;"	d
IGMP_V1_MEMB_REPORT	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_V1_MEMB_REPORT /;"	d
IGMP_V2_MEMB_REPORT	lwip/include/ipv4/lwip/igmp.h	/^#define IGMP_V2_MEMB_REPORT /;"	d
II	lwip/netif/ppp/md5.c	/^#define II(/;"	d	file:
INADDR_ANY	lwip/include/lwip/sockets.h	/^#define INADDR_ANY /;"	d
INADDR_BROADCAST	lwip/include/lwip/sockets.h	/^#define INADDR_BROADCAST /;"	d
INADDR_LOOPBACK	lwip/include/ipv4/lwip/ip_addr.h	/^#define INADDR_LOOPBACK /;"	d
INADDR_NONE	lwip/include/ipv4/lwip/ip_addr.h	/^#define INADDR_NONE /;"	d
INCPTR	lwip/netif/ppp/ppp.h	/^#define INCPTR(/;"	d
INCR	lwip/netif/ppp/vj.c	/^#define INCR(/;"	d	file:
INET_DEBUG	lwip/include/lwip/opt.h	/^#define INET_DEBUG /;"	d
IN_BADCLASS	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_BADCLASS(/;"	d
IN_CLASSA	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSA(/;"	d
IN_CLASSA_HOST	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSA_HOST /;"	d
IN_CLASSA_MAX	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSA_MAX /;"	d
IN_CLASSA_NET	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSA_NET /;"	d
IN_CLASSA_NSHIFT	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSA_NSHIFT /;"	d
IN_CLASSB	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSB(/;"	d
IN_CLASSB_HOST	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSB_HOST /;"	d
IN_CLASSB_MAX	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSB_MAX /;"	d
IN_CLASSB_NET	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSB_NET /;"	d
IN_CLASSB_NSHIFT	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSB_NSHIFT /;"	d
IN_CLASSC	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSC(/;"	d
IN_CLASSC_HOST	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSC_HOST /;"	d
IN_CLASSC_NET	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSC_NET /;"	d
IN_CLASSC_NSHIFT	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSC_NSHIFT /;"	d
IN_CLASSD	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSD(/;"	d
IN_CLASSD_HOST	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSD_HOST /;"	d
IN_CLASSD_NET	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSD_NET /;"	d
IN_CLASSD_NSHIFT	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_CLASSD_NSHIFT /;"	d
IN_EXPERIMENTAL	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_EXPERIMENTAL(/;"	d
IN_LOOPBACKNET	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_LOOPBACKNET /;"	d
IN_MULTICAST	lwip/include/ipv4/lwip/ip_addr.h	/^#define IN_MULTICAST(/;"	d
IOCPARM_MASK	lwip/include/lwip/sockets.h	/^#define IOCPARM_MASK /;"	d
IOC_IN	lwip/include/lwip/sockets.h	/^#define IOC_IN /;"	d
IOC_INOUT	lwip/include/lwip/sockets.h	/^#define IOC_INOUT /;"	d
IOC_OUT	lwip/include/lwip/sockets.h	/^#define IOC_OUT /;"	d
IOC_VOID	lwip/include/lwip/sockets.h	/^#define IOC_VOID /;"	d
IP	ns.h	/^#define IP /;"	d
IP4_ADDR	lwip/include/ipv4/lwip/ip_addr.h	/^#define IP4_ADDR(/;"	d
IP6_ADDR	lwip/include/ipv6/lwip/ip_addr.h	/^#define IP6_ADDR(/;"	d
IPCPDEBUG	lwip/netif/ppp/pppdebug.h	/^#define IPCPDEBUG(/;"	d
IPCP_H	lwip/netif/ppp/ipcp.h	/^#define IPCP_H$/;"	d
IPCP_VJMODE_OLD	lwip/netif/ppp/ipcp.h	/^#define IPCP_VJMODE_OLD /;"	d
IPCP_VJMODE_RFC1172	lwip/netif/ppp/ipcp.h	/^#define IPCP_VJMODE_RFC1172 /;"	d
IPCP_VJMODE_RFC1332	lwip/netif/ppp/ipcp.h	/^#define IPCP_VJMODE_RFC1332 /;"	d
IPCP_VJ_COMP	lwip/netif/ppp/ipcp.h	/^#define IPCP_VJ_COMP /;"	d
IPCP_VJ_COMP_OLD	lwip/netif/ppp/ipcp.h	/^#define IPCP_VJ_COMP_OLD /;"	d
IPFRAG_STATS	lwip/include/lwip/opt.h	/^#define IPFRAG_STATS /;"	d
IPFRAG_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define IPFRAG_STATS_DISPLAY(/;"	d
IPFRAG_STATS_INC	lwip/include/lwip/stats.h	/^#define IPFRAG_STATS_INC(/;"	d
IPH_CHKSUM	lwip/include/ipv4/lwip/ip.h	/^#define IPH_CHKSUM(/;"	d
IPH_CHKSUM_SET	lwip/include/ipv4/lwip/ip.h	/^#define IPH_CHKSUM_SET(/;"	d
IPH_HL	lwip/include/ipv4/lwip/ip.h	/^#define IPH_HL(/;"	d
IPH_ID	lwip/include/ipv4/lwip/ip.h	/^#define IPH_ID(/;"	d
IPH_ID_SET	lwip/include/ipv4/lwip/ip.h	/^#define IPH_ID_SET(/;"	d
IPH_LEN	lwip/include/ipv4/lwip/ip.h	/^#define IPH_LEN(/;"	d
IPH_LEN_SET	lwip/include/ipv4/lwip/ip.h	/^#define IPH_LEN_SET(/;"	d
IPH_OFFSET	lwip/include/ipv4/lwip/ip.h	/^#define IPH_OFFSET(/;"	d
IPH_OFFSET_SET	lwip/include/ipv4/lwip/ip.h	/^#define IPH_OFFSET_SET(/;"	d
IPH_PROTO	lwip/include/ipv4/lwip/ip.h	/^#define IPH_PROTO(/;"	d
IPH_PROTO	lwip/include/ipv6/lwip/ip.h	/^#define IPH_PROTO(/;"	d
IPH_PROTO_SET	lwip/include/ipv4/lwip/ip.h	/^#define IPH_PROTO_SET(/;"	d
IPH_TOS	lwip/include/ipv4/lwip/ip.h	/^#define IPH_TOS(/;"	d
IPH_TTL	lwip/include/ipv4/lwip/ip.h	/^#define IPH_TTL(/;"	d
IPH_TTL_SET	lwip/include/ipv4/lwip/ip.h	/^#define IPH_TTL_SET(/;"	d
IPH_V	lwip/include/ipv4/lwip/ip.h	/^#define IPH_V(/;"	d
IPH_VHLTOS_SET	lwip/include/ipv4/lwip/ip.h	/^#define IPH_VHLTOS_SET(/;"	d
IPPROTO_IP	lwip/include/lwip/sockets.h	/^#define IPPROTO_IP /;"	d
IPPROTO_TCP	lwip/include/lwip/sockets.h	/^#define IPPROTO_TCP /;"	d
IPPROTO_UDP	lwip/include/lwip/sockets.h	/^#define IPPROTO_UDP /;"	d
IPPROTO_UDPLITE	lwip/include/lwip/sockets.h	/^#define IPPROTO_UDPLITE /;"	d
IPTOS_LOWCOST	lwip/include/lwip/sockets.h	/^#define IPTOS_LOWCOST /;"	d
IPTOS_LOWDELAY	lwip/include/lwip/sockets.h	/^#define IPTOS_LOWDELAY /;"	d
IPTOS_MINCOST	lwip/include/lwip/sockets.h	/^#define IPTOS_MINCOST /;"	d
IPTOS_PREC	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC(/;"	d
IPTOS_PREC_CRITIC_ECP	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC_CRITIC_ECP /;"	d
IPTOS_PREC_FLASH	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC_FLASH /;"	d
IPTOS_PREC_FLASHOVERRIDE	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC_FLASHOVERRIDE /;"	d
IPTOS_PREC_IMMEDIATE	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC_IMMEDIATE /;"	d
IPTOS_PREC_INTERNETCONTROL	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC_INTERNETCONTROL /;"	d
IPTOS_PREC_MASK	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC_MASK /;"	d
IPTOS_PREC_NETCONTROL	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC_NETCONTROL /;"	d
IPTOS_PREC_PRIORITY	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC_PRIORITY /;"	d
IPTOS_PREC_ROUTINE	lwip/include/lwip/sockets.h	/^#define IPTOS_PREC_ROUTINE /;"	d
IPTOS_RELIABILITY	lwip/include/lwip/sockets.h	/^#define IPTOS_RELIABILITY /;"	d
IPTOS_THROUGHPUT	lwip/include/lwip/sockets.h	/^#define IPTOS_THROUGHPUT /;"	d
IPTOS_TOS	lwip/include/lwip/sockets.h	/^#define IPTOS_TOS(/;"	d
IPTOS_TOS_MASK	lwip/include/lwip/sockets.h	/^#define IPTOS_TOS_MASK /;"	d
IP_ADDRESSES_AND_ID_MATCH	lwip/core/ipv4/ip_frag.c	/^#define IP_ADDRESSES_AND_ID_MATCH(/;"	d	file:
IP_ADDR_ANY	lwip/include/ipv4/lwip/ip_addr.h	/^#define IP_ADDR_ANY /;"	d
IP_ADDR_ANY	lwip/include/ipv6/lwip/ip_addr.h	/^#define IP_ADDR_ANY /;"	d
IP_ADDR_ANY_VALUE	lwip/core/ipv4/ip_addr.c	/^#define IP_ADDR_ANY_VALUE /;"	d	file:
IP_ADDR_BROADCAST	lwip/include/ipv4/lwip/ip_addr.h	/^#define IP_ADDR_BROADCAST /;"	d
IP_ADDR_BROADCAST_VALUE	lwip/core/ipv4/ip_addr.c	/^#define IP_ADDR_BROADCAST_VALUE /;"	d	file:
IP_ADD_MEMBERSHIP	lwip/include/lwip/sockets.h	/^#define IP_ADD_MEMBERSHIP /;"	d
IP_DEBUG	lwip/include/lwip/opt.h	/^#define IP_DEBUG /;"	d
IP_DEFAULT_TTL	lwip/include/lwip/opt.h	/^#define IP_DEFAULT_TTL /;"	d
IP_DF	lwip/include/ipv4/lwip/ip.h	/^#define IP_DF /;"	d
IP_DF	lwip/netif/ppp/vjbsdhdr.h	/^#define  IP_DF /;"	d
IP_DROP_MEMBERSHIP	lwip/include/lwip/sockets.h	/^#define IP_DROP_MEMBERSHIP /;"	d
IP_FORWARD	lwip/include/lwip/opt.h	/^#define IP_FORWARD /;"	d
IP_FRAG	lwip/include/lwip/opt.h	/^#define IP_FRAG /;"	d
IP_FRAG_MAX_MTU	lwip/include/lwip/opt.h	/^#define IP_FRAG_MAX_MTU /;"	d
IP_FRAG_USES_STATIC_BUF	lwip/include/lwip/opt.h	/^#define IP_FRAG_USES_STATIC_BUF /;"	d
IP_HDRINCL	lwip/include/ipv4/lwip/ip.h	/^#define IP_HDRINCL /;"	d
IP_HDRINCL	lwip/include/ipv6/lwip/ip.h	/^#define IP_HDRINCL /;"	d
IP_HLEN	lwip/include/ipv4/lwip/ip.h	/^#define IP_HLEN /;"	d
IP_HLEN	lwip/include/ipv6/lwip/ip.h	/^#define IP_HLEN /;"	d
IP_MF	lwip/include/ipv4/lwip/ip.h	/^#define IP_MF /;"	d
IP_MF	lwip/netif/ppp/vjbsdhdr.h	/^#define  IP_MF /;"	d
IP_MULTICAST_IF	lwip/include/lwip/sockets.h	/^#define IP_MULTICAST_IF /;"	d
IP_MULTICAST_LOOP	lwip/include/lwip/sockets.h	/^#define IP_MULTICAST_LOOP /;"	d
IP_MULTICAST_TTL	lwip/include/lwip/sockets.h	/^#define IP_MULTICAST_TTL /;"	d
IP_OFFMASK	lwip/include/ipv4/lwip/ip.h	/^#define IP_OFFMASK /;"	d
IP_OFFMASK	lwip/netif/ppp/vjbsdhdr.h	/^#define  IP_OFFMASK /;"	d
IP_OPTIONS_ALLOWED	lwip/include/lwip/opt.h	/^#define IP_OPTIONS_ALLOWED /;"	d
IP_PCB	lwip/include/ipv4/lwip/ip.h	/^#define IP_PCB /;"	d
IP_PCB	lwip/include/ipv6/lwip/ip.h	/^#define IP_PCB /;"	d
IP_PCB_ADDRHINT	lwip/include/ipv4/lwip/ip.h	/^#define IP_PCB_ADDRHINT /;"	d
IP_PCB_ADDRHINT	lwip/include/ipv4/lwip/ip.h	/^#define IP_PCB_ADDRHINT$/;"	d
IP_PCB_ADDRHINT	lwip/include/ipv6/lwip/ip.h	/^#define IP_PCB_ADDRHINT /;"	d
IP_PROTO_ICMP	lwip/include/ipv4/lwip/ip.h	/^#define IP_PROTO_ICMP /;"	d
IP_PROTO_ICMP	lwip/include/ipv6/lwip/ip.h	/^#define IP_PROTO_ICMP /;"	d
IP_PROTO_IGMP	lwip/include/ipv4/lwip/igmp.h	/^#define IP_PROTO_IGMP /;"	d
IP_PROTO_TCP	lwip/include/ipv4/lwip/ip.h	/^#define IP_PROTO_TCP /;"	d
IP_PROTO_TCP	lwip/include/ipv6/lwip/ip.h	/^#define IP_PROTO_TCP /;"	d
IP_PROTO_UDP	lwip/include/ipv4/lwip/ip.h	/^#define IP_PROTO_UDP /;"	d
IP_PROTO_UDP	lwip/include/ipv6/lwip/ip.h	/^#define IP_PROTO_UDP /;"	d
IP_PROTO_UDPLITE	lwip/include/ipv4/lwip/ip.h	/^#define IP_PROTO_UDPLITE /;"	d
IP_PROTO_UDPLITE	lwip/include/ipv6/lwip/ip.h	/^#define IP_PROTO_UDPLITE /;"	d
IP_REASSEMBLY	lwip/include/lwip/opt.h	/^#define IP_REASSEMBLY /;"	d
IP_REASS_CHECK_OVERLAP	lwip/core/ipv4/ip_frag.c	/^#define IP_REASS_CHECK_OVERLAP /;"	d	file:
IP_REASS_DEBUG	lwip/include/lwip/opt.h	/^#define IP_REASS_DEBUG /;"	d
IP_REASS_FLAG_LASTFRAG	lwip/core/ipv4/ip_frag.c	/^#define IP_REASS_FLAG_LASTFRAG /;"	d	file:
IP_REASS_FREE_OLDEST	lwip/core/ipv4/ip_frag.c	/^#define IP_REASS_FREE_OLDEST /;"	d	file:
IP_REASS_MAXAGE	lwip/include/lwip/opt.h	/^#define IP_REASS_MAXAGE /;"	d
IP_REASS_MAX_PBUFS	lwip/include/lwip/opt.h	/^#define IP_REASS_MAX_PBUFS /;"	d
IP_RF	lwip/include/ipv4/lwip/ip.h	/^#define IP_RF /;"	d
IP_STATS	lwip/include/lwip/opt.h	/^#define IP_STATS /;"	d
IP_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define IP_STATS_DISPLAY(/;"	d
IP_STATS_INC	lwip/include/lwip/stats.h	/^#define IP_STATS_INC(/;"	d
IP_TMR_INTERVAL	lwip/include/ipv4/lwip/ip_frag.h	/^#define IP_TMR_INTERVAL /;"	d
IP_TOS	lwip/include/lwip/sockets.h	/^#define IP_TOS /;"	d
IP_TTL	lwip/include/lwip/sockets.h	/^#define IP_TTL /;"	d
JOS_INC_PERROR_H	lwip/jos/arch/perror.h	/^#define JOS_INC_PERROR_H$/;"	d
JOS_INC_SETJMP_H	lwip/jos/arch/setjmp.h	/^#define JOS_INC_SETJMP_H$/;"	d
JOS_INC_THREADQ_H	lwip/jos/arch/threadq.h	/^#define JOS_INC_THREADQ_H$/;"	d
JOS_LONGJMP_GCCATTR	lwip/jos/arch/i386/setjmp.h	/^#define JOS_LONGJMP_GCCATTR	/;"	d
JOS_LWIP_LWIPOPTS_H	lwip/jos/lwipopts.h	/^#define JOS_LWIP_LWIPOPTS_H$/;"	d
JOS_MACHINE_SETJMP_H	lwip/jos/arch/i386/setjmp.h	/^#define JOS_MACHINE_SETJMP_H$/;"	d
LANManResp	lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon328dfbc00108	typeref:typename:u_char[24]	file:
LAST_ACK	lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	lwip/netif/ppp/pppdebug.h	/^#define LCPDEBUG(/;"	d
LCP_ECHOINTERVAL	lwip/include/lwip/opt.h	/^#define LCP_ECHOINTERVAL /;"	d
LCP_H	lwip/netif/ppp/lcp.h	/^#define LCP_H$/;"	d
LCP_MAXECHOFAILS	lwip/include/lwip/opt.h	/^#define LCP_MAXECHOFAILS /;"	d
LENCIADDR	lwip/netif/ppp/ipcp.c	/^#define LENCIADDR(/;"	d	file:
LENCICBCP	lwip/netif/ppp/lcp.c	/^#define LENCICBCP(/;"	d	file:
LENCICHAP	lwip/netif/ppp/lcp.c	/^#define LENCICHAP(/;"	d	file:
LENCIDNS	lwip/netif/ppp/ipcp.c	/^#define LENCIDNS(/;"	d	file:
LENCILONG	lwip/netif/ppp/lcp.c	/^#define LENCILONG(/;"	d	file:
LENCILQR	lwip/netif/ppp/lcp.c	/^#define LENCILQR(/;"	d	file:
LENCISHORT	lwip/netif/ppp/lcp.c	/^#define LENCISHORT(/;"	d	file:
LENCIVJ	lwip/netif/ppp/ipcp.c	/^#define LENCIVJ(/;"	d	file:
LENCIVOID	lwip/netif/ppp/lcp.c	/^#define LENCIVOID(/;"	d	file:
LINK_STATS	lwip/include/lwip/opt.h	/^#define LINK_STATS /;"	d
LINK_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define LINK_STATS_DISPLAY(/;"	d
LINK_STATS_INC	lwip/include/lwip/stats.h	/^#define LINK_STATS_INC(/;"	d
LISTEN	lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	lwip/jos/arch/queue.h	/^#define	LIST_EMPTY(/;"	d
LIST_EMPTY	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_EMPTY(/;"	d	file:
LIST_ENTRY	lwip/jos/arch/queue.h	/^#define	LIST_ENTRY(/;"	d
LIST_ENTRY	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_ENTRY(/;"	d	file:
LIST_FIRST	lwip/jos/arch/queue.h	/^#define	LIST_FIRST(/;"	d
LIST_FIRST	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_FIRST(/;"	d	file:
LIST_FOREACH	lwip/jos/arch/queue.h	/^#define	LIST_FOREACH(/;"	d
LIST_FOREACH	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_FOREACH(/;"	d	file:
LIST_HEAD	lwip/jos/arch/queue.h	/^#define	LIST_HEAD(/;"	d
LIST_HEAD	lwip/jos/arch/sys_arch.c	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	f	file:
LIST_HEAD	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_HEAD(/;"	d	file:
LIST_HEAD_INITIALIZER	lwip/jos/arch/queue.h	/^#define	LIST_HEAD_INITIALIZER(/;"	d
LIST_HEAD_INITIALIZER	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_HEAD_INITIALIZER(/;"	d	file:
LIST_INIT	lwip/jos/arch/queue.h	/^#define	LIST_INIT(/;"	d
LIST_INIT	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_INIT(/;"	d	file:
LIST_INSERT_AFTER	lwip/jos/arch/queue.h	/^#define	LIST_INSERT_AFTER(/;"	d
LIST_INSERT_AFTER	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_INSERT_AFTER(/;"	d	file:
LIST_INSERT_BEFORE	lwip/jos/arch/queue.h	/^#define	LIST_INSERT_BEFORE(/;"	d
LIST_INSERT_BEFORE	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_INSERT_BEFORE(/;"	d	file:
LIST_INSERT_HEAD	lwip/jos/arch/queue.h	/^#define	LIST_INSERT_HEAD(/;"	d
LIST_INSERT_HEAD	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_INSERT_HEAD(/;"	d	file:
LIST_NEXT	lwip/jos/arch/queue.h	/^#define	LIST_NEXT(/;"	d
LIST_NEXT	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_NEXT(/;"	d	file:
LIST_REMOVE	lwip/jos/arch/queue.h	/^#define	LIST_REMOVE(/;"	d
LIST_REMOVE	lwip/netif/ppp/ppp_oe.c	/^#define  LIST_REMOVE(/;"	d	file:
LITTLE_ENDIAN	lwip/include/lwip/arch.h	/^#define LITTLE_ENDIAN /;"	d
LOCK_TCPIP_CORE	lwip/include/lwip/tcpip.h	/^#define LOCK_TCPIP_CORE(/;"	d
LOG_CRITICAL	lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anond42a84610103
LOG_DEBUG	lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anond42a84610103
LOG_DETAIL	lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anond42a84610103
LOG_ERR	lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anond42a84610103
LOG_INFO	lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anond42a84610103
LOG_NOTICE	lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anond42a84610103
LOG_WARNING	lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anond42a84610103
LS_ACKRCVD	lwip/netif/ppp/fsm.h	/^#define LS_ACKRCVD /;"	d
LS_ACKSENT	lwip/netif/ppp/fsm.h	/^#define LS_ACKSENT /;"	d
LS_CLOSED	lwip/netif/ppp/fsm.h	/^#define LS_CLOSED /;"	d
LS_CLOSING	lwip/netif/ppp/fsm.h	/^#define LS_CLOSING /;"	d
LS_INITIAL	lwip/netif/ppp/fsm.h	/^#define LS_INITIAL /;"	d
LS_OPENED	lwip/netif/ppp/fsm.h	/^#define LS_OPENED /;"	d
LS_REQSENT	lwip/netif/ppp/fsm.h	/^#define LS_REQSENT /;"	d
LS_STARTING	lwip/netif/ppp/fsm.h	/^#define LS_STARTING /;"	d
LS_STOPPED	lwip/netif/ppp/fsm.h	/^#define LS_STOPPED /;"	d
LS_STOPPING	lwip/netif/ppp/fsm.h	/^#define LS_STOPPING /;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	lwip/include/lwip/opt.h	/^#define LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT /;"	d
LWIP_ARCH_CC_H	lwip/jos/arch/cc.h	/^#define LWIP_ARCH_CC_H$/;"	d
LWIP_ARCH_PERF_H	lwip/jos/arch/perf.h	/^#define LWIP_ARCH_PERF_H$/;"	d
LWIP_ARCH_QUEUE_H	lwip/jos/arch/queue.h	/^#define LWIP_ARCH_QUEUE_H$/;"	d
LWIP_ARCH_SYS_ARCH_H	lwip/jos/arch/sys_arch.h	/^#define LWIP_ARCH_SYS_ARCH_H$/;"	d
LWIP_ARCH_THREAD_H	lwip/jos/arch/thread.h	/^#define LWIP_ARCH_THREAD_H$/;"	d
LWIP_ARP	lwip/include/lwip/opt.h	/^#define LWIP_ARP /;"	d
LWIP_ASSERT	lwip/include/lwip/debug.h	/^#define LWIP_ASSERT(/;"	d
LWIP_AUTOIP	lwip/include/lwip/opt.h	/^#define LWIP_AUTOIP /;"	d
LWIP_AUTOIP_RAND	lwip/core/ipv4/autoip.c	/^#define LWIP_AUTOIP_RAND(/;"	d	file:
LWIP_CALLBACK_API	lwip/include/lwip/opt.h	/^#define LWIP_CALLBACK_API /;"	d
LWIP_CHKSUM	lwip/core/ipv4/inet_chksum.c	/^# define LWIP_CHKSUM /;"	d	file:
LWIP_CHKSUM_ALGORITHM	lwip/core/ipv4/inet_chksum.c	/^#  define LWIP_CHKSUM_ALGORITHM /;"	d	file:
LWIP_CHKSUM_ALGORITHM	lwip/core/ipv4/inet_chksum.c	/^# define LWIP_CHKSUM_ALGORITHM /;"	d	file:
LWIP_COMPAT_SOCKETS	lwip/include/lwip/opt.h	/^#define LWIP_COMPAT_SOCKETS /;"	d
LWIP_COMPAT_SOCKETS	lwip/jos/lwipopts.h	/^#define LWIP_COMPAT_SOCKETS	/;"	d
LWIP_DBG_FRESH	lwip/include/lwip/debug.h	/^#define LWIP_DBG_FRESH /;"	d
LWIP_DBG_HALT	lwip/include/lwip/debug.h	/^#define LWIP_DBG_HALT /;"	d
LWIP_DBG_LEVEL_OFF	lwip/include/lwip/debug.h	/^#define LWIP_DBG_LEVEL_OFF /;"	d
LWIP_DBG_LEVEL_SERIOUS	lwip/include/lwip/debug.h	/^#define LWIP_DBG_LEVEL_SERIOUS /;"	d
LWIP_DBG_LEVEL_SEVERE	lwip/include/lwip/debug.h	/^#define LWIP_DBG_LEVEL_SEVERE /;"	d
LWIP_DBG_LEVEL_WARNING	lwip/include/lwip/debug.h	/^#define LWIP_DBG_LEVEL_WARNING /;"	d
LWIP_DBG_MASK_LEVEL	lwip/include/lwip/debug.h	/^#define LWIP_DBG_MASK_LEVEL /;"	d
LWIP_DBG_MIN_LEVEL	lwip/include/lwip/opt.h	/^#define LWIP_DBG_MIN_LEVEL /;"	d
LWIP_DBG_MIN_LEVEL	lwip/jos/lwipopts.h	/^#define LWIP_DBG_MIN_LEVEL	/;"	d
LWIP_DBG_OFF	lwip/include/lwip/debug.h	/^#define LWIP_DBG_OFF /;"	d
LWIP_DBG_ON	lwip/include/lwip/debug.h	/^#define LWIP_DBG_ON /;"	d
LWIP_DBG_STATE	lwip/include/lwip/debug.h	/^#define LWIP_DBG_STATE /;"	d
LWIP_DBG_TRACE	lwip/include/lwip/debug.h	/^#define LWIP_DBG_TRACE /;"	d
LWIP_DBG_TYPES_ON	lwip/include/lwip/opt.h	/^#define LWIP_DBG_TYPES_ON /;"	d
LWIP_DEBUG	lwip/jos/lwipopts.h	/^#define LWIP_DEBUG	/;"	d
LWIP_DEBUGF	lwip/include/lwip/debug.h	/^#define LWIP_DEBUGF(/;"	d
LWIP_DHCP	lwip/include/lwip/opt.h	/^#define LWIP_DHCP /;"	d
LWIP_DHCP	lwip/jos/lwipopts.h	/^#define LWIP_DHCP	/;"	d
LWIP_DHCP_AUTOIP_COOP	lwip/include/lwip/opt.h	/^#define LWIP_DHCP_AUTOIP_COOP /;"	d
LWIP_DNS	lwip/include/lwip/opt.h	/^#define LWIP_DNS /;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	lwip/include/lwip/netdb.h	/^#define LWIP_DNS_API_DECLARE_H_ERRNO /;"	d
LWIP_DNS_API_DECLARE_STRUCTS	lwip/include/lwip/netdb.h	/^#define LWIP_DNS_API_DECLARE_STRUCTS /;"	d
LWIP_DNS_API_DEFINE_ERRORS	lwip/include/lwip/netdb.h	/^#define LWIP_DNS_API_DEFINE_ERRORS /;"	d
LWIP_DNS_API_HOSTENT_STORAGE	lwip/api/netdb.c	/^#define LWIP_DNS_API_HOSTENT_STORAGE /;"	d	file:
LWIP_ERROR	lwip/include/lwip/debug.h	/^#define LWIP_ERROR(/;"	d
LWIP_EVENT_ACCEPT	lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	lwip/include/lwip/opt.h	/^#define LWIP_EVENT_API /;"	d
LWIP_EVENT_CONNECTED	lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	lwip/include/lwip/opt.h	/^#define LWIP_HAVE_LOOPIF /;"	d
LWIP_HAVE_SLIPIF	lwip/include/lwip/opt.h	/^#define LWIP_HAVE_SLIPIF /;"	d
LWIP_ICMP	lwip/include/lwip/opt.h	/^#define LWIP_ICMP /;"	d
LWIP_IGMP	lwip/include/lwip/opt.h	/^#define LWIP_IGMP /;"	d
LWIP_LOOPBACK_MAX_PBUFS	lwip/include/lwip/opt.h	/^#define LWIP_LOOPBACK_MAX_PBUFS /;"	d
LWIP_MALLOC_MEMPOOL	lwip/include/lwip/memp.h	/^#define LWIP_MALLOC_MEMPOOL(/;"	d
LWIP_MALLOC_MEMPOOL	lwip/include/lwip/memp_std.h	/^#define LWIP_MALLOC_MEMPOOL(/;"	d
LWIP_MALLOC_MEMPOOL_END	lwip/include/lwip/memp.h	/^#define LWIP_MALLOC_MEMPOOL_END /;"	d
LWIP_MALLOC_MEMPOOL_END	lwip/include/lwip/memp.h	/^#define LWIP_MALLOC_MEMPOOL_END$/;"	d
LWIP_MALLOC_MEMPOOL_END	lwip/include/lwip/memp_std.h	/^#define LWIP_MALLOC_MEMPOOL_END$/;"	d
LWIP_MALLOC_MEMPOOL_START	lwip/include/lwip/memp.h	/^#define LWIP_MALLOC_MEMPOOL_START /;"	d
LWIP_MALLOC_MEMPOOL_START	lwip/include/lwip/memp.h	/^#define LWIP_MALLOC_MEMPOOL_START$/;"	d
LWIP_MALLOC_MEMPOOL_START	lwip/include/lwip/memp_std.h	/^#define LWIP_MALLOC_MEMPOOL_START$/;"	d
LWIP_MAX	lwip/include/lwip/def.h	/^#define LWIP_MAX(/;"	d
LWIP_MEMPOOL	lwip/core/memp.c	/^#define LWIP_MEMPOOL(/;"	d	file:
LWIP_MEMPOOL	lwip/core/stats.c	/^#define LWIP_MEMPOOL(/;"	d	file:
LWIP_MEMPOOL	lwip/include/lwip/memp.h	/^#define LWIP_MEMPOOL(/;"	d
LWIP_MEM_ALIGN	lwip/include/lwip/mem.h	/^#define LWIP_MEM_ALIGN(/;"	d
LWIP_MEM_ALIGN_SIZE	lwip/include/lwip/mem.h	/^#define LWIP_MEM_ALIGN_SIZE(/;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	lwip/core/mem.c	/^#define LWIP_MEM_ALLOC_DECL_PROTECT(/;"	d	file:
LWIP_MEM_ALLOC_PROTECT	lwip/core/mem.c	/^#define LWIP_MEM_ALLOC_PROTECT(/;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	lwip/core/mem.c	/^#define LWIP_MEM_ALLOC_UNPROTECT(/;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	lwip/core/mem.c	/^#define LWIP_MEM_FREE_DECL_PROTECT(/;"	d	file:
LWIP_MEM_FREE_PROTECT	lwip/core/mem.c	/^#define LWIP_MEM_FREE_PROTECT(/;"	d	file:
LWIP_MEM_FREE_UNPROTECT	lwip/core/mem.c	/^#define LWIP_MEM_FREE_UNPROTECT(/;"	d	file:
LWIP_MIN	lwip/include/lwip/def.h	/^#define LWIP_MIN(/;"	d
LWIP_NETCONN	lwip/include/lwip/opt.h	/^#define LWIP_NETCONN /;"	d
LWIP_NETIF_API	lwip/include/lwip/opt.h	/^#define LWIP_NETIF_API /;"	d
LWIP_NETIF_HOSTNAME	lwip/include/lwip/opt.h	/^#define LWIP_NETIF_HOSTNAME /;"	d
LWIP_NETIF_HWADDRHINT	lwip/include/lwip/opt.h	/^#define LWIP_NETIF_HWADDRHINT /;"	d
LWIP_NETIF_LINK_CALLBACK	lwip/include/lwip/opt.h	/^#define LWIP_NETIF_LINK_CALLBACK /;"	d
LWIP_NETIF_LOOPBACK	lwip/include/lwip/opt.h	/^#define LWIP_NETIF_LOOPBACK /;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	lwip/include/lwip/opt.h	/^#define LWIP_NETIF_LOOPBACK_MULTITHREADING /;"	d
LWIP_NETIF_STATUS_CALLBACK	lwip/include/lwip/opt.h	/^#define LWIP_NETIF_STATUS_CALLBACK /;"	d
LWIP_PBUF_MEMPOOL	lwip/include/lwip/memp_std.h	/^#define LWIP_PBUF_MEMPOOL(/;"	d
LWIP_PLATFORM_ASSERT	lwip/jos/arch/cc.h	/^#define LWIP_PLATFORM_ASSERT(/;"	d
LWIP_PLATFORM_BYTESWAP	lwip/include/ipv4/lwip/inet.h	/^#define LWIP_PLATFORM_BYTESWAP /;"	d
LWIP_PLATFORM_DIAG	lwip/jos/arch/cc.h	/^#define LWIP_PLATFORM_DIAG(/;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	lwip/include/lwip/opt.h	/^#define LWIP_POSIX_SOCKETS_IO_NAMES /;"	d
LWIP_PROVIDE_ERRNO	lwip/jos/arch/perror.c	/^#define LWIP_PROVIDE_ERRNO$/;"	d	file:
LWIP_PROVIDE_ERRNO	lwip/jos/lwipopts.h	/^#define LWIP_PROVIDE_ERRNO /;"	d
LWIP_RAW	lwip/include/lwip/opt.h	/^#define LWIP_RAW /;"	d
LWIP_SNMP	lwip/include/lwip/opt.h	/^#define LWIP_SNMP /;"	d
LWIP_SNMP_OBJ_ID_LEN	lwip/include/lwip/snmp.h	/^#define LWIP_SNMP_OBJ_ID_LEN /;"	d
LWIP_SOCKET	lwip/include/lwip/opt.h	/^#define LWIP_SOCKET /;"	d
LWIP_SO_RCVBUF	lwip/include/lwip/opt.h	/^#define LWIP_SO_RCVBUF /;"	d
LWIP_SO_RCVTIMEO	lwip/include/lwip/opt.h	/^#define LWIP_SO_RCVTIMEO /;"	d
LWIP_STATS	lwip/include/lwip/opt.h	/^#define LWIP_STATS /;"	d
LWIP_STATS	lwip/jos/lwipopts.h	/^#define LWIP_STATS	/;"	d
LWIP_STATS_DISPLAY	lwip/include/lwip/opt.h	/^#define LWIP_STATS_DISPLAY /;"	d
LWIP_STATS_DISPLAY	lwip/jos/lwipopts.h	/^#define LWIP_STATS_DISPLAY	/;"	d
LWIP_STATS_LARGE	lwip/include/lwip/stats.h	/^#define LWIP_STATS_LARGE /;"	d
LWIP_TCP	lwip/include/lwip/opt.h	/^#define LWIP_TCP /;"	d
LWIP_TCPIP_CORE_LOCKING	lwip/include/lwip/opt.h	/^#define LWIP_TCPIP_CORE_LOCKING /;"	d
LWIP_TCP_KEEPALIVE	lwip/include/lwip/opt.h	/^#define LWIP_TCP_KEEPALIVE /;"	d
LWIP_TIMEVAL_PRIVATE	lwip/include/lwip/sockets.h	/^#define LWIP_TIMEVAL_PRIVATE /;"	d
LWIP_UDP	lwip/include/lwip/opt.h	/^#define LWIP_UDP /;"	d
LWIP_UDPLITE	lwip/include/lwip/opt.h	/^#define LWIP_UDPLITE /;"	d
LWIP_UNUSED_ARG	lwip/include/lwip/arch.h	/^#define LWIP_UNUSED_ARG(/;"	d
LcpEchoCheck	lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	typeref:typename:void	file:
LcpEchoTimeout	lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	typeref:typename:void	file:
LcpLinkFailure	lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	typeref:typename:void	file:
LcpSendEchoRequest	lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	typeref:typename:void	file:
LinkPhase	lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon0b03e4290103
LogCodes	lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anond42a84610103
MAGIC_H	lwip/netif/ppp/magic.h	/^#define MAGIC_H$/;"	d
MAKEHEADER	lwip/netif/ppp/ppp.h	/^#define MAKEHEADER(/;"	d
MASK	ns.h	/^#define MASK /;"	d
MAXNAMELEN	lwip/include/lwip/opt.h	/^#define MAXNAMELEN /;"	d
MAXSECRETLEN	lwip/include/lwip/opt.h	/^#define MAXSECRETLEN /;"	d
MAX_CHALLENGE_LENGTH	lwip/netif/ppp/chap.h	/^#define MAX_CHALLENGE_LENGTH /;"	d
MAX_CONFLICTS	lwip/include/ipv4/lwip/autoip.h	/^#define MAX_CONFLICTS /;"	d
MAX_HDR	lwip/netif/ppp/vj.h	/^#define MAX_HDR /;"	d
MAX_NT_PASSWORD	lwip/netif/ppp/chpms.h	/^#define MAX_NT_PASSWORD /;"	d
MAX_RESPONSE_LENGTH	lwip/netif/ppp/chap.h	/^#define MAX_RESPONSE_LENGTH /;"	d
MAX_SIZE	lwip/netif/slipif.c	/^#define MAX_SIZE /;"	d	file:
MAX_SLOTS	lwip/netif/ppp/vj.h	/^#define MAX_SLOTS /;"	d
MBOXSLOTS	lwip/jos/arch/sys_arch.c	/^#define MBOXSLOTS	/;"	d	file:
MD5Final	lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f	typeref:typename:void
MD5Init	lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f	typeref:typename:void
MD5Update	lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f	typeref:typename:void
MD5_CTX	lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon0b158e100108
MD5_H	lwip/netif/ppp/md5.h	/^#define MD5_H$/;"	d
MD5_SIGNATURE_SIZE	lwip/netif/ppp/chap.h	/^#define MD5_SIGNATURE_SIZE /;"	d
MD5_SUPPORT	lwip/include/lwip/opt.h	/^#define MD5_SUPPORT /;"	d
MEMCPY	lwip/include/lwip/opt.h	/^#define MEMCPY(/;"	d
MEMP_ALIGN_SIZE	lwip/core/memp.c	/^#define MEMP_ALIGN_SIZE(/;"	d	file:
MEMP_DEBUG	lwip/include/lwip/opt.h	/^#define MEMP_DEBUG /;"	d
MEMP_MAX	lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anonf95d1c730103
MEMP_NUM_ARP_QUEUE	lwip/include/lwip/opt.h	/^#define MEMP_NUM_ARP_QUEUE /;"	d
MEMP_NUM_IGMP_GROUP	lwip/include/lwip/opt.h	/^#define MEMP_NUM_IGMP_GROUP /;"	d
MEMP_NUM_NETBUF	lwip/include/lwip/opt.h	/^#define MEMP_NUM_NETBUF /;"	d
MEMP_NUM_NETBUF	lwip/jos/lwipopts.h	/^#define MEMP_NUM_NETBUF	/;"	d
MEMP_NUM_NETCONN	lwip/include/lwip/opt.h	/^#define MEMP_NUM_NETCONN /;"	d
MEMP_NUM_NETCONN	lwip/jos/lwipopts.h	/^#define MEMP_NUM_NETCONN	/;"	d
MEMP_NUM_PBUF	lwip/include/lwip/opt.h	/^#define MEMP_NUM_PBUF /;"	d
MEMP_NUM_PBUF	lwip/jos/lwipopts.h	/^#define MEMP_NUM_PBUF	/;"	d
MEMP_NUM_RAW_PCB	lwip/include/lwip/opt.h	/^#define MEMP_NUM_RAW_PCB /;"	d
MEMP_NUM_REASSDATA	lwip/include/lwip/opt.h	/^#define MEMP_NUM_REASSDATA /;"	d
MEMP_NUM_SYS_TIMEOUT	lwip/include/lwip/opt.h	/^#define MEMP_NUM_SYS_TIMEOUT /;"	d
MEMP_NUM_SYS_TIMEOUT	lwip/jos/lwipopts.h	/^#define MEMP_NUM_SYS_TIMEOUT /;"	d
MEMP_NUM_TCPIP_MSG_API	lwip/include/lwip/opt.h	/^#define MEMP_NUM_TCPIP_MSG_API /;"	d
MEMP_NUM_TCPIP_MSG_INPKT	lwip/include/lwip/opt.h	/^#define MEMP_NUM_TCPIP_MSG_INPKT /;"	d
MEMP_NUM_TCP_PCB	lwip/include/lwip/opt.h	/^#define MEMP_NUM_TCP_PCB /;"	d
MEMP_NUM_TCP_PCB	lwip/jos/lwipopts.h	/^#define MEMP_NUM_TCP_PCB	/;"	d
MEMP_NUM_TCP_PCB_LISTEN	lwip/include/lwip/opt.h	/^#define MEMP_NUM_TCP_PCB_LISTEN /;"	d
MEMP_NUM_TCP_PCB_LISTEN	lwip/jos/lwipopts.h	/^#define MEMP_NUM_TCP_PCB_LISTEN	/;"	d
MEMP_NUM_TCP_SEG	lwip/include/lwip/opt.h	/^#define MEMP_NUM_TCP_SEG /;"	d
MEMP_NUM_TCP_SEG	lwip/jos/lwipopts.h	/^#define MEMP_NUM_TCP_SEG	/;"	d
MEMP_NUM_UDP_PCB	lwip/include/lwip/opt.h	/^#define MEMP_NUM_UDP_PCB /;"	d
MEMP_NUM_UDP_PCB	lwip/jos/lwipopts.h	/^#define MEMP_NUM_UDP_PCB	/;"	d
MEMP_OVERFLOW_CHECK	lwip/include/lwip/opt.h	/^#define MEMP_OVERFLOW_CHECK /;"	d
MEMP_POOL_FIRST	lwip/include/lwip/memp.h	/^#define MEMP_POOL_FIRST /;"	d
MEMP_POOL_HELPER_FIRST	lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anonf95d1c730203
MEMP_POOL_HELPER_LAST	lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anonf95d1c730203
MEMP_POOL_LAST	lwip/include/lwip/memp.h	/^#define MEMP_POOL_LAST /;"	d
MEMP_SANITY_CHECK	lwip/include/lwip/opt.h	/^#define MEMP_SANITY_CHECK /;"	d
MEMP_SANITY_CHECK	lwip/jos/lwipopts.h	/^#define MEMP_SANITY_CHECK	/;"	d
MEMP_SANITY_REGION_AFTER	lwip/core/memp.c	/^#define MEMP_SANITY_REGION_AFTER /;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	lwip/core/memp.c	/^#define MEMP_SANITY_REGION_AFTER_ALIGNED /;"	d	file:
MEMP_SANITY_REGION_BEFORE	lwip/core/memp.c	/^#define MEMP_SANITY_REGION_BEFORE /;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	lwip/core/memp.c	/^#define MEMP_SANITY_REGION_BEFORE_ALIGNED /;"	d	file:
MEMP_SIZE	lwip/core/memp.c	/^#define MEMP_SIZE /;"	d	file:
MEMP_STATS	lwip/include/lwip/opt.h	/^#define MEMP_STATS /;"	d
MEMP_STATS_AVAIL	lwip/include/lwip/stats.h	/^#define MEMP_STATS_AVAIL(/;"	d
MEMP_STATS_DEC	lwip/include/lwip/stats.h	/^#define MEMP_STATS_DEC(/;"	d
MEMP_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define MEMP_STATS_DISPLAY(/;"	d
MEMP_STATS_INC	lwip/include/lwip/stats.h	/^#define MEMP_STATS_INC(/;"	d
MEMP_STATS_INC_USED	lwip/include/lwip/stats.h	/^#define MEMP_STATS_INC_USED(/;"	d
MEMP_USE_CUSTOM_POOLS	lwip/include/lwip/opt.h	/^#define MEMP_USE_CUSTOM_POOLS /;"	d
MEM_ALIGNMENT	lwip/include/lwip/opt.h	/^#define MEM_ALIGNMENT /;"	d
MEM_ALIGNMENT	lwip/jos/lwipopts.h	/^#define MEM_ALIGNMENT	/;"	d
MEM_DEBUG	lwip/include/lwip/opt.h	/^#define MEM_DEBUG /;"	d
MEM_LIBC_MALLOC	lwip/include/lwip/opt.h	/^#define MEM_LIBC_MALLOC /;"	d
MEM_SIZE	lwip/include/lwip/opt.h	/^#define MEM_SIZE /;"	d
MEM_SIZE	lwip/jos/lwipopts.h	/^#define MEM_SIZE	/;"	d
MEM_SIZE_ALIGNED	lwip/core/mem.c	/^#define MEM_SIZE_ALIGNED /;"	d	file:
MEM_STATS	lwip/include/lwip/opt.h	/^#define MEM_STATS /;"	d
MEM_STATS_AVAIL	lwip/include/lwip/stats.h	/^#define MEM_STATS_AVAIL(/;"	d
MEM_STATS_DEC_USED	lwip/include/lwip/stats.h	/^#define MEM_STATS_DEC_USED(/;"	d
MEM_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define MEM_STATS_DISPLAY(/;"	d
MEM_STATS_INC	lwip/include/lwip/stats.h	/^#define MEM_STATS_INC(/;"	d
MEM_STATS_INC_USED	lwip/include/lwip/stats.h	/^#define MEM_STATS_INC_USED(/;"	d
MEM_USE_POOLS	lwip/include/lwip/opt.h	/^#define MEM_USE_POOLS /;"	d
MIB2_GROUPS	lwip/core/snmp/mib2.c	/^#define MIB2_GROUPS /;"	d	file:
MIB_NODE_AR	lwip/include/lwip/snmp_structs.h	/^#define MIB_NODE_AR /;"	d
MIB_NODE_EX	lwip/include/lwip/snmp_structs.h	/^#define MIB_NODE_EX /;"	d
MIB_NODE_LR	lwip/include/lwip/snmp_structs.h	/^#define MIB_NODE_LR /;"	d
MIB_NODE_RA	lwip/include/lwip/snmp_structs.h	/^#define MIB_NODE_RA /;"	d
MIB_NODE_SC	lwip/include/lwip/snmp_structs.h	/^#define MIB_NODE_SC /;"	d
MIB_OBJECT_NONE	lwip/include/lwip/snmp_structs.h	/^#define MIB_OBJECT_NONE /;"	d
MIB_OBJECT_NOT_ACCESSIBLE	lwip/include/lwip/snmp_structs.h	/^#define MIB_OBJECT_NOT_ACCESSIBLE /;"	d
MIB_OBJECT_READ_ONLY	lwip/include/lwip/snmp_structs.h	/^#define MIB_OBJECT_READ_ONLY /;"	d
MIB_OBJECT_READ_WRITE	lwip/include/lwip/snmp_structs.h	/^#define MIB_OBJECT_READ_WRITE /;"	d
MIB_OBJECT_SCALAR	lwip/include/lwip/snmp_structs.h	/^#define MIB_OBJECT_SCALAR /;"	d
MIB_OBJECT_TAB	lwip/include/lwip/snmp_structs.h	/^#define MIB_OBJECT_TAB /;"	d
MIB_OBJECT_WRITE_ONLY	lwip/include/lwip/snmp_structs.h	/^#define MIB_OBJECT_WRITE_ONLY /;"	d
MIN_CHALLENGE_LENGTH	lwip/netif/ppp/chap.h	/^#define MIN_CHALLENGE_LENGTH /;"	d
MIN_SIZE	lwip/core/mem.c	/^#define MIN_SIZE /;"	d	file:
MIN_SIZE_ALIGNED	lwip/core/mem.c	/^#define MIN_SIZE_ALIGNED /;"	d	file:
MSCHAP_SUPPORT	lwip/include/lwip/opt.h	/^#define MSCHAP_SUPPORT /;"	d
MSG_DONTWAIT	lwip/include/lwip/sockets.h	/^#define MSG_DONTWAIT /;"	d
MSG_MORE	lwip/include/lwip/sockets.h	/^#define MSG_MORE /;"	d
MSG_OOB	lwip/include/lwip/sockets.h	/^#define MSG_OOB /;"	d
MSG_PEEK	lwip/include/lwip/sockets.h	/^#define MSG_PEEK /;"	d
MSG_WAITALL	lwip/include/lwip/sockets.h	/^#define MSG_WAITALL /;"	d
MS_CHAP_RESPONSE_LEN	lwip/netif/ppp/chap.h	/^#define MS_CHAP_RESPONSE_LEN /;"	d
MS_ChapResponse	lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon328dfbc00108	file:
MakeKey	lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	typeref:typename:void	file:
NAKCIADDR	lwip/netif/ppp/ipcp.c	/^#define NAKCIADDR(/;"	d	file:
NAKCICHAP	lwip/netif/ppp/lcp.c	/^#define NAKCICHAP(/;"	d	file:
NAKCICHAR	lwip/netif/ppp/lcp.c	/^#define NAKCICHAR(/;"	d	file:
NAKCIDNS	lwip/netif/ppp/ipcp.c	/^#define NAKCIDNS(/;"	d	file:
NAKCILONG	lwip/netif/ppp/lcp.c	/^#define NAKCILONG(/;"	d	file:
NAKCILQR	lwip/netif/ppp/lcp.c	/^#define NAKCILQR(/;"	d	file:
NAKCISHORT	lwip/netif/ppp/lcp.c	/^#define NAKCISHORT(/;"	d	file:
NAKCIVJ	lwip/netif/ppp/ipcp.c	/^#define NAKCIVJ(/;"	d	file:
NAKCIVOID	lwip/netif/ppp/lcp.c	/^#define NAKCIVOID(/;"	d	file:
NETCONNTYPE_DATAGRAM	lwip/include/lwip/api.h	/^#define NETCONNTYPE_DATAGRAM(/;"	d
NETCONNTYPE_GROUP	lwip/include/lwip/api.h	/^#define NETCONNTYPE_GROUP(/;"	d
NETCONN_CLOSE	lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	lwip/include/lwip/api.h	/^#define NETCONN_COPY /;"	d
NETCONN_EVT_RCVMINUS	lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	lwip/include/lwip/api.h	/^#define NETCONN_MORE /;"	d
NETCONN_NOCOPY	lwip/include/lwip/api.h	/^#define NETCONN_NOCOPY /;"	d
NETCONN_NOFLAG	lwip/include/lwip/api.h	/^#define NETCONN_NOFLAG /;"	d
NETCONN_NONE	lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	lwip/include/lwip/opt.h	/^#define NETIF_DEBUG /;"	d
NETIF_FLAG_BROADCAST	lwip/include/lwip/netif.h	/^#define NETIF_FLAG_BROADCAST /;"	d
NETIF_FLAG_DHCP	lwip/include/lwip/netif.h	/^#define NETIF_FLAG_DHCP /;"	d
NETIF_FLAG_ETHARP	lwip/include/lwip/netif.h	/^#define NETIF_FLAG_ETHARP /;"	d
NETIF_FLAG_IGMP	lwip/include/lwip/netif.h	/^#define NETIF_FLAG_IGMP /;"	d
NETIF_FLAG_LINK_UP	lwip/include/lwip/netif.h	/^#define NETIF_FLAG_LINK_UP /;"	d
NETIF_FLAG_POINTTOPOINT	lwip/include/lwip/netif.h	/^#define NETIF_FLAG_POINTTOPOINT /;"	d
NETIF_FLAG_UP	lwip/include/lwip/netif.h	/^#define NETIF_FLAG_UP /;"	d
NETIF_INIT_SNMP	lwip/include/lwip/netif.h	/^#define NETIF_INIT_SNMP(/;"	d
NETIF_LINK_CALLBACK	lwip/core/netif.c	/^#define NETIF_LINK_CALLBACK(/;"	d	file:
NETIF_MAX_HWADDR_LEN	lwip/include/lwip/netif.h	/^#define NETIF_MAX_HWADDR_LEN /;"	d
NETIF_SET_HINT	lwip/netif/etharp.c	/^#define NETIF_SET_HINT(/;"	d	file:
NETIF_STATUS_CALLBACK	lwip/core/netif.c	/^#define NETIF_STATUS_CALLBACK(/;"	d	file:
NEW_A	lwip/netif/ppp/vj.h	/^#define NEW_A /;"	d
NEW_C	lwip/netif/ppp/vj.h	/^#define NEW_C /;"	d
NEW_I	lwip/netif/ppp/vj.h	/^#define NEW_I /;"	d
NEW_S	lwip/netif/ppp/vj.h	/^#define NEW_S /;"	d
NEW_U	lwip/netif/ppp/vj.h	/^#define NEW_U /;"	d
NEW_W	lwip/netif/ppp/vj.h	/^#define NEW_W /;"	d
NMBOX	lwip/jos/arch/sys_arch.c	/^#define NMBOX	/;"	d	file:
NODE_STACK_SIZE	lwip/core/snmp/mib_structs.c	/^#define NODE_STACK_SIZE /;"	d	file:
NO_DATA	lwip/include/lwip/netdb.h	/^#define NO_DATA /;"	d
NO_RECOVERY	lwip/include/lwip/netdb.h	/^#define NO_RECOVERY /;"	d
NO_SYS	lwip/include/lwip/opt.h	/^#define NO_SYS /;"	d
NPMODE_DROP	lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPmode	lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NSEM	lwip/jos/arch/sys_arch.c	/^#define NSEM	/;"	d	file:
NTResp	lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon328dfbc00108	typeref:typename:u_char[24]	file:
NULL	lwip/include/lwip/def.h	/^#define NULL /;"	d
NUM_PPP	lwip/include/lwip/opt.h	/^#define NUM_PPP /;"	d
NUM_SOCKETS	lwip/api/sockets.c	/^#define NUM_SOCKETS /;"	d	file:
OPT_PASSIVE	lwip/netif/ppp/fsm.h	/^#define OPT_PASSIVE /;"	d
OPT_RESTART	lwip/netif/ppp/fsm.h	/^#define OPT_RESTART /;"	d
OPT_SILENT	lwip/netif/ppp/fsm.h	/^#define OPT_SILENT /;"	d
O_NONBLOCK	lwip/include/lwip/sockets.h	/^#define O_NONBLOCK /;"	d
PACK_STRUCT_BEGIN	lwip/include/lwip/arch.h	/^#define PACK_STRUCT_BEGIN$/;"	d
PACK_STRUCT_BEGIN	lwip/jos/arch/cc.h	/^#define PACK_STRUCT_BEGIN$/;"	d
PACK_STRUCT_END	lwip/include/lwip/arch.h	/^#define PACK_STRUCT_END$/;"	d
PACK_STRUCT_END	lwip/jos/arch/cc.h	/^#define PACK_STRUCT_END$/;"	d
PACK_STRUCT_FIELD	lwip/include/lwip/arch.h	/^#define PACK_STRUCT_FIELD(/;"	d
PACK_STRUCT_FIELD	lwip/jos/arch/cc.h	/^#define PACK_STRUCT_FIELD(/;"	d
PACK_STRUCT_STRUCT	lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	lwip/jos/arch/cc.h	/^#define PACK_STRUCT_STRUCT$/;"	d
PADDING	lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	typeref:typename:unsigned char[64]	file:
PAP_H	lwip/netif/ppp/pap.h	/^#define PAP_H$/;"	d
PAP_PEER	lwip/netif/ppp/auth.c	/^#define PAP_PEER /;"	d	file:
PAP_SUPPORT	lwip/include/lwip/opt.h	/^#define PAP_SUPPORT /;"	d
PAP_WITHPEER	lwip/netif/ppp/auth.c	/^#define PAP_WITHPEER /;"	d	file:
PBUF_DEBUG	lwip/include/lwip/opt.h	/^#define PBUF_DEBUG /;"	d
PBUF_FLAG_PUSH	lwip/include/lwip/pbuf.h	/^#define PBUF_FLAG_PUSH /;"	d
PBUF_IP	lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon002a85510103
PBUF_IP_HLEN	lwip/include/lwip/pbuf.h	/^#define PBUF_IP_HLEN /;"	d
PBUF_LINK	lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon002a85510103
PBUF_LINK_HLEN	lwip/include/lwip/opt.h	/^#define PBUF_LINK_HLEN /;"	d
PBUF_POOL	lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon002a85510203
PBUF_POOL_BUFSIZE	lwip/include/lwip/opt.h	/^#define PBUF_POOL_BUFSIZE /;"	d
PBUF_POOL_BUFSIZE	lwip/jos/lwipopts.h	/^#define PBUF_POOL_BUFSIZE	/;"	d
PBUF_POOL_BUFSIZE_ALIGNED	lwip/core/pbuf.c	/^#define PBUF_POOL_BUFSIZE_ALIGNED /;"	d	file:
PBUF_POOL_SIZE	lwip/include/lwip/opt.h	/^#define PBUF_POOL_SIZE /;"	d
PBUF_POOL_SIZE	lwip/jos/lwipopts.h	/^#define PBUF_POOL_SIZE	/;"	d
PBUF_RAM	lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon002a85510203
PBUF_RAW	lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon002a85510103
PBUF_REF	lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon002a85510203
PBUF_ROM	lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon002a85510203
PBUF_TRANSPORT	lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon002a85510103
PBUF_TRANSPORT_HLEN	lwip/include/lwip/pbuf.h	/^#define PBUF_TRANSPORT_HLEN /;"	d
PDADDRESS	lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon0b5367150103	file:
PDCONTROL	lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon0b5367150103	file:
PDDATA	lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon0b5367150103	file:
PDIDLE	lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon0b5367150103	file:
PDPROTOCOL1	lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon0b5367150103	file:
PDPROTOCOL2	lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon0b5367150103	file:
PDSTART	lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon0b5367150103	file:
PERF_START	lwip/jos/arch/perf.h	/^#define PERF_START$/;"	d
PERF_STOP	lwip/jos/arch/perf.h	/^#define PERF_STOP(/;"	d
PER_TCP_PCB_BUFFER	lwip/jos/lwipopts.h	/^#define PER_TCP_PCB_BUFFER	/;"	d
PF_INET	lwip/include/lwip/sockets.h	/^#define PF_INET /;"	d
PF_UNSPEC	lwip/include/lwip/sockets.h	/^#define PF_UNSPEC /;"	d
PHASE_AUTHENTICATE	lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon0b03e4290103
PHASE_CALLBACK	lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon0b03e4290103
PHASE_DEAD	lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon0b03e4290103
PHASE_ESTABLISH	lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon0b03e4290103
PHASE_INITIALIZE	lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon0b03e4290103
PHASE_NETWORK	lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon0b03e4290103
PHASE_TERMINATE	lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon0b03e4290103
PKTMAP	lwip/jos/jif/jif.c	/^#define PKTMAP	/;"	d	file:
PPPAUTHTYPE_ANY	lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	lwip/netif/ppp/ppp.h	/^#define PPPCTLG_ERRCODE /;"	d
PPPCTLG_FD	lwip/netif/ppp/ppp.h	/^#define PPPCTLG_FD /;"	d
PPPCTLG_UPSTATUS	lwip/netif/ppp/ppp.h	/^#define PPPCTLG_UPSTATUS /;"	d
PPPCTLS_ERRCODE	lwip/netif/ppp/ppp.h	/^#define PPPCTLS_ERRCODE /;"	d
PPPControl	lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	lwip/netif/ppp/pppdebug.h	/^#define PPPDEBUG(/;"	d
PPPDEBUG_H	lwip/netif/ppp/pppdebug.h	/^#define PPPDEBUG_H$/;"	d
PPPDevStates	lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon0b5367150103	file:
PPPERR_ALLOC	lwip/netif/ppp/ppp.h	/^#define PPPERR_ALLOC /;"	d
PPPERR_AUTHFAIL	lwip/netif/ppp/ppp.h	/^#define PPPERR_AUTHFAIL /;"	d
PPPERR_CONNECT	lwip/netif/ppp/ppp.h	/^#define PPPERR_CONNECT /;"	d
PPPERR_DEVICE	lwip/netif/ppp/ppp.h	/^#define PPPERR_DEVICE /;"	d
PPPERR_NONE	lwip/netif/ppp/ppp.h	/^#define PPPERR_NONE /;"	d
PPPERR_OPEN	lwip/netif/ppp/ppp.h	/^#define PPPERR_OPEN /;"	d
PPPERR_PARAM	lwip/netif/ppp/ppp.h	/^#define PPPERR_PARAM /;"	d
PPPERR_PROTOCOL	lwip/netif/ppp/ppp.h	/^#define PPPERR_PROTOCOL /;"	d
PPPERR_USER	lwip/netif/ppp/ppp.h	/^#define PPPERR_USER /;"	d
PPPOE_ADD_16	lwip/netif/ppp/ppp_oe.c	/^#define PPPOE_ADD_16(/;"	d	file:
PPPOE_ADD_HEADER	lwip/netif/ppp/ppp_oe.c	/^#define PPPOE_ADD_HEADER(/;"	d	file:
PPPOE_CODE_PADI	lwip/include/netif/ppp_oe.h	/^#define PPPOE_CODE_PADI	/;"	d
PPPOE_CODE_PADO	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_CODE_PADO	/;"	d
PPPOE_CODE_PADR	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_CODE_PADR	/;"	d
PPPOE_CODE_PADS	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_CODE_PADS	/;"	d
PPPOE_CODE_PADT	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_CODE_PADT	/;"	d
PPPOE_DISC_MAXPADI	lwip/netif/ppp/ppp_oe.c	/^#define PPPOE_DISC_MAXPADI /;"	d	file:
PPPOE_DISC_MAXPADR	lwip/netif/ppp/ppp_oe.c	/^#define PPPOE_DISC_MAXPADR /;"	d	file:
PPPOE_DISC_TIMEOUT	lwip/netif/ppp/ppp_oe.c	/^#define PPPOE_DISC_TIMEOUT /;"	d	file:
PPPOE_HEADERLEN	lwip/include/netif/ppp_oe.h	/^#define PPPOE_HEADERLEN	/;"	d
PPPOE_MAXMTU	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_MAXMTU	/;"	d
PPPOE_MAXMTU	lwip/netif/ppp/lcp.c	/^#define PPPOE_MAXMTU /;"	d	file:
PPPOE_SLOW_RETRY	lwip/netif/ppp/ppp_oe.c	/^#define PPPOE_SLOW_RETRY /;"	d	file:
PPPOE_STATE_CLOSING	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_STATE_CLOSING	/;"	d
PPPOE_STATE_INITIAL	lwip/include/netif/ppp_oe.h	/^#define PPPOE_STATE_INITIAL	/;"	d
PPPOE_STATE_PADI_SENT	lwip/include/netif/ppp_oe.h	/^#define PPPOE_STATE_PADI_SENT	/;"	d
PPPOE_STATE_PADO_SENT	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_STATE_PADO_SENT	/;"	d
PPPOE_STATE_PADR_SENT	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_STATE_PADR_SENT	/;"	d
PPPOE_STATE_SESSION	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_STATE_SESSION	/;"	d
PPPOE_SUPPORT	lwip/include/lwip/opt.h	/^#define PPPOE_SUPPORT /;"	d
PPPOE_TAG_ACCOOKIE	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_ACCOOKIE	/;"	d
PPPOE_TAG_ACNAME	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_ACNAME	/;"	d
PPPOE_TAG_ACSYS_ERR	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_ACSYS_ERR	/;"	d
PPPOE_TAG_EOL	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_EOL	/;"	d
PPPOE_TAG_GENERIC_ERR	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_GENERIC_ERR	/;"	d
PPPOE_TAG_HUNIQUE	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_HUNIQUE	/;"	d
PPPOE_TAG_RELAYSID	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_RELAYSID	/;"	d
PPPOE_TAG_SNAME	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_SNAME	/;"	d
PPPOE_TAG_SNAME_ERR	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_SNAME_ERR	/;"	d
PPPOE_TAG_VENDOR	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_TAG_VENDOR	/;"	d
PPPOE_VERTYPE	lwip/include/netif/ppp_oe.h	/^#define	PPPOE_VERTYPE	/;"	d
PPPOS_SUPPORT	lwip/include/lwip/opt.h	/^#define PPPOS_SUPPORT /;"	d
PPP_ADDRESS	lwip/netif/ppp/ppp.c	/^#define PPP_ADDRESS(/;"	d	file:
PPP_ALLSTATIONS	lwip/netif/ppp/ppp.h	/^#define PPP_ALLSTATIONS /;"	d
PPP_AT	lwip/netif/ppp/ppp.h	/^#define PPP_AT /;"	d
PPP_ATCP	lwip/netif/ppp/ppp.h	/^#define PPP_ATCP /;"	d
PPP_CBCP	lwip/netif/ppp/ppp.h	/^#define PPP_CBCP /;"	d
PPP_CCP	lwip/netif/ppp/ppp.h	/^#define PPP_CCP /;"	d
PPP_CHAP	lwip/netif/ppp/ppp.h	/^#define PPP_CHAP /;"	d
PPP_COMP	lwip/netif/ppp/ppp.h	/^#define PPP_COMP /;"	d
PPP_CONTROL	lwip/netif/ppp/ppp.c	/^#define PPP_CONTROL(/;"	d	file:
PPP_DEBUG	lwip/include/lwip/opt.h	/^#define PPP_DEBUG /;"	d
PPP_DEFMRU	lwip/include/lwip/opt.h	/^#define PPP_DEFMRU /;"	d
PPP_ESCAPE	lwip/netif/ppp/ppp.h	/^#define PPP_ESCAPE /;"	d
PPP_FCS	lwip/netif/ppp/ppp.h	/^#define PPP_FCS(/;"	d
PPP_FCSLEN	lwip/netif/ppp/ppp.h	/^#define PPP_FCSLEN /;"	d
PPP_FLAG	lwip/netif/ppp/ppp.h	/^#define PPP_FLAG /;"	d
PPP_GOODFCS	lwip/netif/ppp/ppp.h	/^#define PPP_GOODFCS /;"	d
PPP_H	lwip/netif/ppp/ppp.h	/^#define PPP_H$/;"	d
PPP_HDRLEN	lwip/netif/ppp/ppp.h	/^#define PPP_HDRLEN /;"	d
PPP_INITFCS	lwip/netif/ppp/ppp.h	/^#define PPP_INITFCS /;"	d
PPP_IP	lwip/netif/ppp/ppp.h	/^#define PPP_IP /;"	d
PPP_IPCP	lwip/netif/ppp/ppp.h	/^#define PPP_IPCP /;"	d
PPP_LCP	lwip/netif/ppp/ppp.h	/^#define PPP_LCP /;"	d
PPP_LQR	lwip/netif/ppp/ppp.h	/^#define PPP_LQR /;"	d
PPP_MAXIDLEFLAG	lwip/include/lwip/opt.h	/^#define PPP_MAXIDLEFLAG /;"	d
PPP_MAXMRU	lwip/include/lwip/opt.h	/^#define PPP_MAXMRU /;"	d
PPP_MAXMTU	lwip/include/lwip/opt.h	/^#define PPP_MAXMTU /;"	d
PPP_MINMRU	lwip/include/lwip/opt.h	/^#define PPP_MINMRU /;"	d
PPP_MINMTU	lwip/include/lwip/opt.h	/^#define PPP_MINMTU /;"	d
PPP_MRU	lwip/include/lwip/opt.h	/^#define PPP_MRU /;"	d
PPP_MTU	lwip/include/lwip/opt.h	/^#define PPP_MTU /;"	d
PPP_OE_H	lwip/include/netif/ppp_oe.h	/^#define PPP_OE_H$/;"	d
PPP_PAP	lwip/netif/ppp/ppp.h	/^#define PPP_PAP /;"	d
PPP_PROTOCOL	lwip/netif/ppp/ppp.c	/^#define PPP_PROTOCOL(/;"	d	file:
PPP_SUPPORT	lwip/include/lwip/opt.h	/^#define PPP_SUPPORT /;"	d
PPP_THREAD_NAME	lwip/include/lwip/opt.h	/^#define PPP_THREAD_NAME /;"	d
PPP_THREAD_PRIO	lwip/include/lwip/opt.h	/^#define PPP_THREAD_PRIO /;"	d
PPP_THREAD_STACKSIZE	lwip/include/lwip/opt.h	/^#define PPP_THREAD_STACKSIZE /;"	d
PPP_TRANS	lwip/netif/ppp/ppp.h	/^#define PPP_TRANS /;"	d
PPP_UI	lwip/netif/ppp/ppp.h	/^#define PPP_UI /;"	d
PPP_VJC_COMP	lwip/netif/ppp/ppp.h	/^#define PPP_VJC_COMP /;"	d
PPP_VJC_UNCOMP	lwip/netif/ppp/ppp.h	/^#define PPP_VJC_UNCOMP /;"	d
PRINTMSG	lwip/netif/ppp/ppp.h	/^#define PRINTMSG(/;"	d
PROBE_MAX	lwip/include/ipv4/lwip/autoip.h	/^#define PROBE_MAX /;"	d
PROBE_MIN	lwip/include/ipv4/lwip/autoip.h	/^#define PROBE_MIN /;"	d
PROBE_NUM	lwip/include/ipv4/lwip/autoip.h	/^#define PROBE_NUM /;"	d
PROBE_WAIT	lwip/include/ipv4/lwip/autoip.h	/^#define PROBE_WAIT /;"	d
PROTO_NAME	lwip/netif/ppp/fsm.c	/^#define PROTO_NAME(/;"	d	file:
PROTREJ	lwip/netif/ppp/lcp.h	/^#define PROTREJ /;"	d
PUTCHAR	lwip/netif/ppp/ppp.h	/^#define PUTCHAR(/;"	d
PUTLONG	lwip/netif/ppp/ppp.h	/^#define PUTLONG(/;"	d
PUTSHORT	lwip/netif/ppp/ppp.h	/^#define PUTSHORT(/;"	d
QUEUE_SIZE	ns.h	/^#define QUEUE_SIZE	/;"	d
RANDM_H	lwip/netif/ppp/randm.h	/^#define RANDM_H$/;"	d
RANDPOOLSZ	lwip/netif/ppp/randm.c	/^#define RANDPOOLSZ /;"	d	file:
RATE_LIMIT_INTERVAL	lwip/include/ipv4/lwip/autoip.h	/^#define RATE_LIMIT_INTERVAL /;"	d
RAW_DEBUG	lwip/include/lwip/opt.h	/^#define RAW_DEBUG /;"	d
RAW_TTL	lwip/include/lwip/opt.h	/^#define RAW_TTL /;"	d
REJCIADDR	lwip/netif/ppp/ipcp.c	/^#define REJCIADDR(/;"	d	file:
REJCICBCP	lwip/netif/ppp/lcp.c	/^#define REJCICBCP(/;"	d	file:
REJCICHAP	lwip/netif/ppp/lcp.c	/^#define REJCICHAP(/;"	d	file:
REJCIDNS	lwip/netif/ppp/ipcp.c	/^#define REJCIDNS(/;"	d	file:
REJCILONG	lwip/netif/ppp/lcp.c	/^#define REJCILONG(/;"	d	file:
REJCILQR	lwip/netif/ppp/lcp.c	/^#define REJCILQR(/;"	d	file:
REJCISHORT	lwip/netif/ppp/lcp.c	/^#define REJCISHORT(/;"	d	file:
REJCIVJ	lwip/netif/ppp/ipcp.c	/^#define REJCIVJ(/;"	d	file:
REJCIVOID	lwip/netif/ppp/lcp.c	/^#define REJCIVOID(/;"	d	file:
REQVA	ns.h	/^#define REQVA	/;"	d
ROTATE_LEFT	lwip/netif/ppp/md5.c	/^#define ROTATE_LEFT(/;"	d	file:
ROUTER_ALERT	lwip/include/ipv4/lwip/igmp.h	/^#define ROUTER_ALERT /;"	d
ROUTER_ALERTLEN	lwip/include/ipv4/lwip/igmp.h	/^#define ROUTER_ALERTLEN /;"	d
S11	lwip/netif/ppp/md5.c	/^#define S11 /;"	d	file:
S12	lwip/netif/ppp/md5.c	/^#define S12 /;"	d	file:
S13	lwip/netif/ppp/md5.c	/^#define S13 /;"	d	file:
S14	lwip/netif/ppp/md5.c	/^#define S14 /;"	d	file:
S16_F	lwip/jos/arch/cc.h	/^#define S16_F	/;"	d
S21	lwip/netif/ppp/md5.c	/^#define S21 /;"	d	file:
S22	lwip/netif/ppp/md5.c	/^#define S22 /;"	d	file:
S23	lwip/netif/ppp/md5.c	/^#define S23 /;"	d	file:
S24	lwip/netif/ppp/md5.c	/^#define S24 /;"	d	file:
S31	lwip/netif/ppp/md5.c	/^#define S31 /;"	d	file:
S32	lwip/netif/ppp/md5.c	/^#define S32 /;"	d	file:
S32_F	lwip/jos/arch/cc.h	/^#define S32_F	/;"	d
S33	lwip/netif/ppp/md5.c	/^#define S33 /;"	d	file:
S34	lwip/netif/ppp/md5.c	/^#define S34 /;"	d	file:
S41	lwip/netif/ppp/md5.c	/^#define S41 /;"	d	file:
S42	lwip/netif/ppp/md5.c	/^#define S42 /;"	d	file:
S43	lwip/netif/ppp/md5.c	/^#define S43 /;"	d	file:
S44	lwip/netif/ppp/md5.c	/^#define S44 /;"	d	file:
SIOCATMARK	lwip/include/lwip/sockets.h	/^#define SIOCATMARK /;"	d
SIOCGHIWAT	lwip/include/lwip/sockets.h	/^#define SIOCGHIWAT /;"	d
SIOCGLOWAT	lwip/include/lwip/sockets.h	/^#define SIOCGLOWAT /;"	d
SIOCSHIWAT	lwip/include/lwip/sockets.h	/^#define SIOCSHIWAT /;"	d
SIOCSLOWAT	lwip/include/lwip/sockets.h	/^#define SIOCSLOWAT /;"	d
SIZEOF_STRUCT_MEM	lwip/core/mem.c	/^#define SIZEOF_STRUCT_MEM /;"	d	file:
SIZEOF_STRUCT_PBUF	lwip/core/pbuf.c	/^#define SIZEOF_STRUCT_PBUF /;"	d	file:
SLIPIF_THREAD_NAME	lwip/include/lwip/opt.h	/^#define SLIPIF_THREAD_NAME /;"	d
SLIPIF_THREAD_PRIO	lwip/include/lwip/opt.h	/^#define SLIPIF_THREAD_PRIO /;"	d
SLIPIF_THREAD_STACKSIZE	lwip/include/lwip/opt.h	/^#define SLIPIF_THREAD_STACKSIZE /;"	d
SLIP_DEBUG	lwip/include/lwip/opt.h	/^#define SLIP_DEBUG /;"	d
SLIP_END	lwip/netif/slipif.c	/^#define SLIP_END /;"	d	file:
SLIP_ESC	lwip/netif/slipif.c	/^#define SLIP_ESC /;"	d	file:
SLIP_ESC_END	lwip/netif/slipif.c	/^#define SLIP_ESC_END /;"	d	file:
SLIP_ESC_ESC	lwip/netif/slipif.c	/^#define SLIP_ESC_ESC /;"	d	file:
SMEMCPY	lwip/include/lwip/opt.h	/^#define SMEMCPY(/;"	d
SNMP_ASN1_APPLIC	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_APPLIC /;"	d
SNMP_ASN1_CONSTR	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_CONSTR /;"	d
SNMP_ASN1_CONTXT	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_CONTXT /;"	d
SNMP_ASN1_COUNTER	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_COUNTER /;"	d
SNMP_ASN1_GAUGE	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_GAUGE /;"	d
SNMP_ASN1_INTEG	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_INTEG /;"	d
SNMP_ASN1_IPADDR	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_IPADDR /;"	d
SNMP_ASN1_NUL	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_NUL /;"	d
SNMP_ASN1_OBJ_ID	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_OBJ_ID /;"	d
SNMP_ASN1_OC_STR	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_OC_STR /;"	d
SNMP_ASN1_OPAQUE	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_OPAQUE /;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_PDU_GET_NEXT_REQ /;"	d
SNMP_ASN1_PDU_GET_REQ	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_PDU_GET_REQ /;"	d
SNMP_ASN1_PDU_GET_RESP	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_PDU_GET_RESP /;"	d
SNMP_ASN1_PDU_SET_REQ	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_PDU_SET_REQ /;"	d
SNMP_ASN1_PDU_TRAP	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_PDU_TRAP /;"	d
SNMP_ASN1_PRIMIT	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_PRIMIT /;"	d
SNMP_ASN1_SEQ	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_SEQ /;"	d
SNMP_ASN1_TIMETICKS	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_TIMETICKS /;"	d
SNMP_ASN1_UNIV	lwip/include/lwip/snmp_asn1.h	/^#define SNMP_ASN1_UNIV /;"	d
SNMP_COMMUNITY_STR_LEN	lwip/include/lwip/snmp_msg.h	/^#define SNMP_COMMUNITY_STR_LEN /;"	d
SNMP_CONCURRENT_REQUESTS	lwip/include/lwip/opt.h	/^#define SNMP_CONCURRENT_REQUESTS /;"	d
SNMP_ENTERPRISE_ID	lwip/core/snmp/mib2.c	/^#define SNMP_ENTERPRISE_ID /;"	d	file:
SNMP_ES_BADVALUE	lwip/include/lwip/snmp_msg.h	/^#define SNMP_ES_BADVALUE /;"	d
SNMP_ES_GENERROR	lwip/include/lwip/snmp_msg.h	/^#define SNMP_ES_GENERROR /;"	d
SNMP_ES_NOERROR	lwip/include/lwip/snmp_msg.h	/^#define SNMP_ES_NOERROR /;"	d
SNMP_ES_NOSUCHNAME	lwip/include/lwip/snmp_msg.h	/^#define SNMP_ES_NOSUCHNAME /;"	d
SNMP_ES_READONLY	lwip/include/lwip/snmp_msg.h	/^#define SNMP_ES_READONLY /;"	d
SNMP_ES_TOOBIG	lwip/include/lwip/snmp_msg.h	/^#define SNMP_ES_TOOBIG /;"	d
SNMP_GENTRAP_AUTHFAIL	lwip/include/lwip/snmp_msg.h	/^#define SNMP_GENTRAP_AUTHFAIL /;"	d
SNMP_GENTRAP_COLDSTART	lwip/include/lwip/snmp_msg.h	/^#define SNMP_GENTRAP_COLDSTART /;"	d
SNMP_GENTRAP_ENTERPRISESPC	lwip/include/lwip/snmp_msg.h	/^#define SNMP_GENTRAP_ENTERPRISESPC /;"	d
SNMP_GENTRAP_WARMSTART	lwip/include/lwip/snmp_msg.h	/^#define SNMP_GENTRAP_WARMSTART /;"	d
SNMP_GET_SYSUPTIME	lwip/core/snmp/mib2.c	/^#define SNMP_GET_SYSUPTIME(/;"	d	file:
SNMP_IN_PORT	lwip/include/lwip/snmp_msg.h	/^#define SNMP_IN_PORT /;"	d
SNMP_MIB_DEBUG	lwip/include/lwip/opt.h	/^#define SNMP_MIB_DEBUG /;"	d
SNMP_MSG_DEBUG	lwip/include/lwip/opt.h	/^#define SNMP_MSG_DEBUG /;"	d
SNMP_MSG_EMPTY	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_EMPTY /;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_EXTERNAL_GET_OBJDEF /;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_EXTERNAL_GET_OBJDEF_S /;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_EXTERNAL_GET_VALUE /;"	d
SNMP_MSG_EXTERNAL_SET_TEST	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_EXTERNAL_SET_TEST /;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_EXTERNAL_SET_VALUE /;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_INTERNAL_GET_OBJDEF /;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_INTERNAL_GET_OBJDEF_S /;"	d
SNMP_MSG_INTERNAL_GET_VALUE	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_INTERNAL_GET_VALUE /;"	d
SNMP_MSG_INTERNAL_SET_TEST	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_INTERNAL_SET_TEST /;"	d
SNMP_MSG_INTERNAL_SET_VALUE	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_INTERNAL_SET_VALUE /;"	d
SNMP_MSG_SEARCH_OBJ	lwip/include/lwip/snmp_msg.h	/^#define SNMP_MSG_SEARCH_OBJ /;"	d
SNMP_PRIVATE_MIB	lwip/include/lwip/opt.h	/^#define SNMP_PRIVATE_MIB /;"	d
SNMP_SAFE_REQUESTS	lwip/include/lwip/opt.h	/^#define SNMP_SAFE_REQUESTS /;"	d
SNMP_SYSOBJID	lwip/core/snmp/mib2.c	/^#define SNMP_SYSOBJID /;"	d	file:
SNMP_SYSOBJID_LEN	lwip/core/snmp/mib2.c	/^#define SNMP_SYSOBJID_LEN /;"	d	file:
SNMP_SYSSERVICES	lwip/core/snmp/mib2.c	/^#define SNMP_SYSSERVICES /;"	d	file:
SNMP_SYSUPTIME_INTERVAL	lwip/include/lwip/snmp.h	/^#define SNMP_SYSUPTIME_INTERVAL /;"	d
SNMP_TRAP_DESTINATIONS	lwip/include/lwip/opt.h	/^#define SNMP_TRAP_DESTINATIONS /;"	d
SNMP_TRAP_PORT	lwip/include/lwip/snmp_msg.h	/^#define SNMP_TRAP_PORT /;"	d
SOCKETS_DEBUG	lwip/include/lwip/opt.h	/^#define SOCKETS_DEBUG /;"	d
SOCK_DGRAM	lwip/include/lwip/sockets.h	/^#define SOCK_DGRAM /;"	d
SOCK_RAW	lwip/include/lwip/sockets.h	/^#define SOCK_RAW /;"	d
SOCK_STREAM	lwip/include/lwip/sockets.h	/^#define SOCK_STREAM /;"	d
SOF_ACCEPTCONN	lwip/include/ipv4/lwip/ip.h	/^#define SOF_ACCEPTCONN /;"	d
SOF_BROADCAST	lwip/include/ipv4/lwip/ip.h	/^#define SOF_BROADCAST /;"	d
SOF_DEBUG	lwip/include/ipv4/lwip/ip.h	/^#define SOF_DEBUG /;"	d
SOF_DONTROUTE	lwip/include/ipv4/lwip/ip.h	/^#define SOF_DONTROUTE /;"	d
SOF_KEEPALIVE	lwip/include/ipv4/lwip/ip.h	/^#define SOF_KEEPALIVE /;"	d
SOF_LINGER	lwip/include/ipv4/lwip/ip.h	/^#define SOF_LINGER /;"	d
SOF_OOBINLINE	lwip/include/ipv4/lwip/ip.h	/^#define SOF_OOBINLINE /;"	d
SOF_REUSEADDR	lwip/include/ipv4/lwip/ip.h	/^#define SOF_REUSEADDR /;"	d
SOF_REUSEPORT	lwip/include/ipv4/lwip/ip.h	/^#define SOF_REUSEPORT /;"	d
SOF_USELOOPBACK	lwip/include/ipv4/lwip/ip.h	/^#define SOF_USELOOPBACK /;"	d
SOL_SOCKET	lwip/include/lwip/sockets.h	/^#define  SOL_SOCKET /;"	d
SO_ACCEPTCONN	lwip/include/lwip/sockets.h	/^#define  SO_ACCEPTCONN /;"	d
SO_BROADCAST	lwip/include/lwip/sockets.h	/^#define  SO_BROADCAST /;"	d
SO_CONTIMEO	lwip/include/lwip/sockets.h	/^#define SO_CONTIMEO /;"	d
SO_DEBUG	lwip/include/lwip/sockets.h	/^#define  SO_DEBUG /;"	d
SO_DONTLINGER	lwip/include/lwip/sockets.h	/^#define SO_DONTLINGER /;"	d
SO_DONTROUTE	lwip/include/lwip/sockets.h	/^#define  SO_DONTROUTE /;"	d
SO_ERROR	lwip/include/lwip/sockets.h	/^#define SO_ERROR /;"	d
SO_KEEPALIVE	lwip/include/lwip/sockets.h	/^#define  SO_KEEPALIVE /;"	d
SO_LINGER	lwip/include/lwip/sockets.h	/^#define  SO_LINGER /;"	d
SO_NO_CHECK	lwip/include/lwip/sockets.h	/^#define SO_NO_CHECK /;"	d
SO_OOBINLINE	lwip/include/lwip/sockets.h	/^#define  SO_OOBINLINE /;"	d
SO_RCVBUF	lwip/include/lwip/sockets.h	/^#define SO_RCVBUF /;"	d
SO_RCVLOWAT	lwip/include/lwip/sockets.h	/^#define SO_RCVLOWAT /;"	d
SO_RCVTIMEO	lwip/include/lwip/sockets.h	/^#define SO_RCVTIMEO /;"	d
SO_REUSE	lwip/include/lwip/opt.h	/^#define SO_REUSE /;"	d
SO_REUSEADDR	lwip/include/lwip/sockets.h	/^#define  SO_REUSEADDR /;"	d
SO_REUSEPORT	lwip/include/lwip/sockets.h	/^#define  SO_REUSEPORT /;"	d
SO_SNDBUF	lwip/include/lwip/sockets.h	/^#define SO_SNDBUF /;"	d
SO_SNDLOWAT	lwip/include/lwip/sockets.h	/^#define SO_SNDLOWAT /;"	d
SO_SNDTIMEO	lwip/include/lwip/sockets.h	/^#define SO_SNDTIMEO /;"	d
SO_TYPE	lwip/include/lwip/sockets.h	/^#define SO_TYPE /;"	d
SO_USELOOPBACK	lwip/include/lwip/sockets.h	/^#define  SO_USELOOPBACK /;"	d
SPECIALS_MASK	lwip/netif/ppp/vj.h	/^#define SPECIALS_MASK /;"	d
SPECIAL_D	lwip/netif/ppp/vj.h	/^#define SPECIAL_D /;"	d
SPECIAL_I	lwip/netif/ppp/vj.h	/^#define SPECIAL_I /;"	d
STATS_DEC	lwip/include/lwip/stats.h	/^#define STATS_DEC(/;"	d
STATS_INC	lwip/include/lwip/stats.h	/^#define STATS_INC(/;"	d
STAT_COUNTER	lwip/include/lwip/stats.h	/^#define STAT_COUNTER /;"	d
STAT_COUNTER_F	lwip/include/lwip/stats.h	/^#define STAT_COUNTER_F /;"	d
SWAP_BYTES_IN_WORD	lwip/core/ipv4/inet_chksum.c	/^#define SWAP_BYTES_IN_WORD(/;"	d	file:
SYN_RCVD	lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	lwip/include/lwip/sys.h	/^#define SYS_ARCH_DEC(/;"	d
SYS_ARCH_DECL_PROTECT	lwip/include/lwip/sys.h	/^#define SYS_ARCH_DECL_PROTECT(/;"	d
SYS_ARCH_DECL_PROTECT	lwip/jos/arch/sys_arch.h	/^#define SYS_ARCH_DECL_PROTECT(/;"	d
SYS_ARCH_GET	lwip/include/lwip/sys.h	/^#define SYS_ARCH_GET(/;"	d
SYS_ARCH_INC	lwip/include/lwip/sys.h	/^#define SYS_ARCH_INC(/;"	d
SYS_ARCH_NOWAIT	lwip/jos/arch/sys_arch.h	/^#define SYS_ARCH_NOWAIT /;"	d
SYS_ARCH_PROTECT	lwip/include/lwip/sys.h	/^#define SYS_ARCH_PROTECT(/;"	d
SYS_ARCH_PROTECT	lwip/jos/arch/sys_arch.h	/^#define SYS_ARCH_PROTECT(/;"	d
SYS_ARCH_SET	lwip/include/lwip/sys.h	/^#define SYS_ARCH_SET(/;"	d
SYS_ARCH_UNPROTECT	lwip/include/lwip/sys.h	/^#define SYS_ARCH_UNPROTECT(/;"	d
SYS_ARCH_UNPROTECT	lwip/jos/arch/sys_arch.h	/^#define SYS_ARCH_UNPROTECT(/;"	d
SYS_DEBUG	lwip/include/lwip/opt.h	/^#define SYS_DEBUG /;"	d
SYS_LIGHTWEIGHT_PROT	lwip/include/lwip/opt.h	/^#define SYS_LIGHTWEIGHT_PROT /;"	d
SYS_MBOX_NULL	lwip/jos/arch/sys_arch.h	/^#define SYS_MBOX_NULL	/;"	d
SYS_SEM_NULL	lwip/jos/arch/sys_arch.h	/^#define SYS_SEM_NULL	/;"	d
SYS_STATS	lwip/include/lwip/opt.h	/^#define SYS_STATS /;"	d
SYS_STATS_DEC	lwip/include/lwip/stats.h	/^#define SYS_STATS_DEC(/;"	d
SYS_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define SYS_STATS_DISPLAY(/;"	d
SYS_STATS_INC	lwip/include/lwip/stats.h	/^#define SYS_STATS_INC(/;"	d
StdText	lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	typeref:typename:u_char *	file:
TCPH_FLAGS	lwip/include/lwip/tcp.h	/^#define TCPH_FLAGS(/;"	d
TCPH_FLAGS_SET	lwip/include/lwip/tcp.h	/^#define TCPH_FLAGS_SET(/;"	d
TCPH_HDRLEN	lwip/include/lwip/tcp.h	/^#define TCPH_HDRLEN(/;"	d
TCPH_HDRLEN_SET	lwip/include/lwip/tcp.h	/^#define TCPH_HDRLEN_SET(/;"	d
TCPH_OFFSET	lwip/include/lwip/tcp.h	/^#define TCPH_OFFSET(/;"	d
TCPH_OFFSET_SET	lwip/include/lwip/tcp.h	/^#define TCPH_OFFSET_SET(/;"	d
TCPH_SET_FLAG	lwip/include/lwip/tcp.h	/^#define TCPH_SET_FLAG(/;"	d
TCPH_UNSET_FLAG	lwip/include/lwip/tcp.h	/^#define TCPH_UNSET_FLAG(/;"	d
TCPIP_APIMSG	lwip/include/lwip/tcpip.h	/^#define TCPIP_APIMSG(/;"	d
TCPIP_APIMSG_ACK	lwip/include/lwip/tcpip.h	/^#define TCPIP_APIMSG_ACK(/;"	d
TCPIP_DEBUG	lwip/include/lwip/opt.h	/^#define TCPIP_DEBUG /;"	d
TCPIP_MBOX_SIZE	lwip/include/lwip/opt.h	/^#define TCPIP_MBOX_SIZE /;"	d
TCPIP_MSG_API	lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	lwip/include/lwip/tcpip.h	/^#define TCPIP_NETIFAPI(/;"	d
TCPIP_NETIFAPI_ACK	lwip/include/lwip/tcpip.h	/^#define TCPIP_NETIFAPI_ACK(/;"	d
TCPIP_THREAD_NAME	lwip/include/lwip/opt.h	/^#define TCPIP_THREAD_NAME /;"	d
TCPIP_THREAD_PRIO	lwip/include/lwip/opt.h	/^#define TCPIP_THREAD_PRIO /;"	d
TCPIP_THREAD_STACKSIZE	lwip/include/lwip/opt.h	/^#define TCPIP_THREAD_STACKSIZE /;"	d
TCP_ACK	lwip/include/lwip/tcp.h	/^#define TCP_ACK /;"	d
TCP_BUILD_MSS_OPTION	lwip/include/lwip/tcp.h	/^#define TCP_BUILD_MSS_OPTION(/;"	d
TCP_CALCULATE_EFF_SEND_MSS	lwip/include/lwip/opt.h	/^#define TCP_CALCULATE_EFF_SEND_MSS /;"	d
TCP_CWND_DEBUG	lwip/include/lwip/opt.h	/^#define TCP_CWND_DEBUG /;"	d
TCP_CWR	lwip/include/lwip/tcp.h	/^#define TCP_CWR /;"	d
TCP_DEBUG	lwip/include/lwip/opt.h	/^#define TCP_DEBUG /;"	d
TCP_DEFAULT_LISTEN_BACKLOG	lwip/include/lwip/opt.h	/^#define TCP_DEFAULT_LISTEN_BACKLOG /;"	d
TCP_ECE	lwip/include/lwip/tcp.h	/^#define TCP_ECE /;"	d
TCP_EVENT_ACCEPT	lwip/include/lwip/tcp.h	/^#define TCP_EVENT_ACCEPT(/;"	d
TCP_EVENT_CONNECTED	lwip/include/lwip/tcp.h	/^#define TCP_EVENT_CONNECTED(/;"	d
TCP_EVENT_ERR	lwip/include/lwip/tcp.h	/^#define TCP_EVENT_ERR(/;"	d
TCP_EVENT_POLL	lwip/include/lwip/tcp.h	/^#define TCP_EVENT_POLL(/;"	d
TCP_EVENT_RECV	lwip/include/lwip/tcp.h	/^#define TCP_EVENT_RECV(/;"	d
TCP_EVENT_SENT	lwip/include/lwip/tcp.h	/^#define TCP_EVENT_SENT(/;"	d
TCP_FAST_INTERVAL	lwip/include/lwip/tcp.h	/^#define TCP_FAST_INTERVAL /;"	d
TCP_FIN	lwip/include/lwip/tcp.h	/^#define TCP_FIN /;"	d
TCP_FIN_WAIT_TIMEOUT	lwip/include/lwip/tcp.h	/^#define TCP_FIN_WAIT_TIMEOUT /;"	d
TCP_FLAGS	lwip/include/lwip/tcp.h	/^#define TCP_FLAGS /;"	d
TCP_FR_DEBUG	lwip/include/lwip/opt.h	/^#define TCP_FR_DEBUG /;"	d
TCP_HLEN	lwip/include/lwip/tcp.h	/^#define TCP_HLEN /;"	d
TCP_INPUT_DEBUG	lwip/include/lwip/opt.h	/^#define TCP_INPUT_DEBUG /;"	d
TCP_KEEPALIVE	lwip/include/lwip/sockets.h	/^#define TCP_KEEPALIVE /;"	d
TCP_KEEPCNT	lwip/include/lwip/sockets.h	/^#define TCP_KEEPCNT /;"	d
TCP_KEEPCNT_DEFAULT	lwip/include/lwip/tcp.h	/^#define  TCP_KEEPCNT_DEFAULT /;"	d
TCP_KEEPIDLE	lwip/include/lwip/sockets.h	/^#define TCP_KEEPIDLE /;"	d
TCP_KEEPIDLE_DEFAULT	lwip/include/lwip/tcp.h	/^#define  TCP_KEEPIDLE_DEFAULT /;"	d
TCP_KEEPINTVL	lwip/include/lwip/sockets.h	/^#define TCP_KEEPINTVL /;"	d
TCP_KEEPINTVL_DEFAULT	lwip/include/lwip/tcp.h	/^#define  TCP_KEEPINTVL_DEFAULT /;"	d
TCP_LISTEN_BACKLOG	lwip/include/lwip/opt.h	/^#define TCP_LISTEN_BACKLOG /;"	d
TCP_LOCAL_PORT_RANGE_END	lwip/core/tcp.c	/^#define TCP_LOCAL_PORT_RANGE_END /;"	d	file:
TCP_LOCAL_PORT_RANGE_START	lwip/core/tcp.c	/^#define TCP_LOCAL_PORT_RANGE_START /;"	d	file:
TCP_MAXIDLE	lwip/include/lwip/tcp.h	/^#define  TCP_MAXIDLE /;"	d
TCP_MAXRTX	lwip/include/lwip/opt.h	/^#define TCP_MAXRTX /;"	d
TCP_MSL	lwip/include/lwip/tcp.h	/^#define TCP_MSL /;"	d
TCP_MSS	lwip/include/lwip/opt.h	/^#define TCP_MSS /;"	d
TCP_MSS	lwip/jos/lwipopts.h	/^#define TCP_MSS	/;"	d
TCP_NODELAY	lwip/include/lwip/sockets.h	/^#define TCP_NODELAY /;"	d
TCP_OOSEQ_TIMEOUT	lwip/include/lwip/tcp.h	/^#define TCP_OOSEQ_TIMEOUT /;"	d
TCP_OUTPUT_DEBUG	lwip/include/lwip/opt.h	/^#define TCP_OUTPUT_DEBUG /;"	d
TCP_PCB_COMMON	lwip/include/lwip/tcp.h	/^#define TCP_PCB_COMMON(/;"	d
TCP_PRIO_MAX	lwip/include/lwip/tcp.h	/^#define TCP_PRIO_MAX /;"	d
TCP_PRIO_MIN	lwip/include/lwip/tcp.h	/^#define TCP_PRIO_MIN /;"	d
TCP_PRIO_NORMAL	lwip/include/lwip/tcp.h	/^#define TCP_PRIO_NORMAL /;"	d
TCP_PSH	lwip/include/lwip/tcp.h	/^#define TCP_PSH /;"	d
TCP_PUSH_BIT	lwip/netif/ppp/vj.h	/^#define TCP_PUSH_BIT /;"	d
TCP_QLEN_DEBUG	lwip/include/lwip/opt.h	/^#define TCP_QLEN_DEBUG /;"	d
TCP_QUEUE_OOSEQ	lwip/include/lwip/opt.h	/^#define TCP_QUEUE_OOSEQ /;"	d
TCP_REG	lwip/include/lwip/tcp.h	/^#define TCP_REG(/;"	d
TCP_RMV	lwip/include/lwip/tcp.h	/^#define TCP_RMV(/;"	d
TCP_RST	lwip/include/lwip/tcp.h	/^#define TCP_RST /;"	d
TCP_RST_DEBUG	lwip/include/lwip/opt.h	/^#define TCP_RST_DEBUG /;"	d
TCP_RTO_DEBUG	lwip/include/lwip/opt.h	/^#define TCP_RTO_DEBUG /;"	d
TCP_SEQ_BETWEEN	lwip/include/lwip/tcp.h	/^#define TCP_SEQ_BETWEEN(/;"	d
TCP_SEQ_GEQ	lwip/include/lwip/tcp.h	/^#define TCP_SEQ_GEQ(/;"	d
TCP_SEQ_GT	lwip/include/lwip/tcp.h	/^#define TCP_SEQ_GT(/;"	d
TCP_SEQ_LEQ	lwip/include/lwip/tcp.h	/^#define TCP_SEQ_LEQ(/;"	d
TCP_SEQ_LT	lwip/include/lwip/tcp.h	/^#define TCP_SEQ_LT(/;"	d
TCP_SLOW_INTERVAL	lwip/include/lwip/tcp.h	/^#define TCP_SLOW_INTERVAL /;"	d
TCP_SNDLOWAT	lwip/include/lwip/opt.h	/^#define TCP_SNDLOWAT /;"	d
TCP_SNDQUEUELEN_OVERFLOW	lwip/include/lwip/tcp.h	/^#define TCP_SNDQUEUELEN_OVERFLOW /;"	d
TCP_SND_BUF	lwip/include/lwip/opt.h	/^#define TCP_SND_BUF /;"	d
TCP_SND_BUF	lwip/jos/lwipopts.h	/^#define TCP_SND_BUF	/;"	d
TCP_SND_QUEUELEN	lwip/include/lwip/opt.h	/^#define TCP_SND_QUEUELEN /;"	d
TCP_SND_QUEUELEN	lwip/jos/lwipopts.h	/^#define TCP_SND_QUEUELEN	/;"	d
TCP_STATS	lwip/include/lwip/opt.h	/^#define TCP_STATS /;"	d
TCP_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define TCP_STATS_DISPLAY(/;"	d
TCP_STATS_INC	lwip/include/lwip/stats.h	/^#define TCP_STATS_INC(/;"	d
TCP_SYN	lwip/include/lwip/tcp.h	/^#define TCP_SYN /;"	d
TCP_SYNMAXRTX	lwip/include/lwip/opt.h	/^#define TCP_SYNMAXRTX /;"	d
TCP_SYN_RCVD_TIMEOUT	lwip/include/lwip/tcp.h	/^#define TCP_SYN_RCVD_TIMEOUT /;"	d
TCP_TCPLEN	lwip/include/lwip/tcp.h	/^#define TCP_TCPLEN(/;"	d
TCP_TMR_INTERVAL	lwip/include/lwip/tcp.h	/^#define TCP_TMR_INTERVAL /;"	d
TCP_TTL	lwip/include/lwip/opt.h	/^#define TCP_TTL /;"	d
TCP_URG	lwip/include/lwip/tcp.h	/^#define TCP_URG /;"	d
TCP_WND	lwip/include/lwip/opt.h	/^#define TCP_WND /;"	d
TCP_WND	lwip/jos/lwipopts.h	/^#define TCP_WND	/;"	d
TCP_WND_DEBUG	lwip/include/lwip/opt.h	/^#define TCP_WND_DEBUG /;"	d
TCP_WRITE_FLAG_COPY	lwip/include/lwip/tcp.h	/^#define TCP_WRITE_FLAG_COPY /;"	d
TCP_WRITE_FLAG_MORE	lwip/include/lwip/tcp.h	/^#define TCP_WRITE_FLAG_MORE /;"	d
TERMACK	lwip/netif/ppp/fsm.h	/^#define TERMACK /;"	d
TERMREQ	lwip/netif/ppp/fsm.h	/^#define TERMREQ /;"	d
TESTOUTPUT_COUNT	testoutput.c	/^#define TESTOUTPUT_COUNT /;"	d	file:
TF_ACK_DELAY	lwip/include/lwip/tcp.h	/^#define TF_ACK_DELAY /;"	d
TF_ACK_NOW	lwip/include/lwip/tcp.h	/^#define TF_ACK_NOW /;"	d
TF_CLOSED	lwip/include/lwip/tcp.h	/^#define TF_CLOSED /;"	d
TF_FIN	lwip/include/lwip/tcp.h	/^#define TF_FIN /;"	d
TF_GOT_FIN	lwip/include/lwip/tcp.h	/^#define TF_GOT_FIN /;"	d
TF_INFR	lwip/include/lwip/tcp.h	/^#define TF_INFR /;"	d
TF_NAGLEMEMERR	lwip/include/lwip/tcp.h	/^#define TF_NAGLEMEMERR /;"	d
TF_NODELAY	lwip/include/lwip/tcp.h	/^#define TF_NODELAY /;"	d
TF_RESET	lwip/include/lwip/tcp.h	/^#define TF_RESET /;"	d
THREAD_NUM_ONHALT	lwip/jos/arch/threadq.h	/^#define THREAD_NUM_ONHALT /;"	d
TIMEOUT	lwip/netif/ppp/ppp.h	/^#define TIMEOUT(/;"	d
TIMER_INTERVAL	ns.h	/^#define TIMER_INTERVAL /;"	d
TIME_WAIT	lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TRACELCP	lwip/netif/ppp/pppdebug.h	/^#define TRACELCP /;"	d
TRY_AGAIN	lwip/include/lwip/netdb.h	/^#define TRY_AGAIN /;"	d
TYPE_COMPRESSED_TCP	lwip/netif/ppp/vj.h	/^#define TYPE_COMPRESSED_TCP /;"	d
TYPE_ERROR	lwip/netif/ppp/vj.h	/^#define TYPE_ERROR /;"	d
TYPE_IP	lwip/netif/ppp/vj.h	/^#define TYPE_IP /;"	d
TYPE_UNCOMPRESSED_TCP	lwip/netif/ppp/vj.h	/^#define TYPE_UNCOMPRESSED_TCP /;"	d
Transform	lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	typeref:typename:void	file:
U16_F	lwip/jos/arch/cc.h	/^#define U16_F	/;"	d
U32_F	lwip/jos/arch/cc.h	/^#define U32_F	/;"	d
UDPLITE_RECV_CSCOV	lwip/include/lwip/sockets.h	/^#define UDPLITE_RECV_CSCOV /;"	d
UDPLITE_SEND_CSCOV	lwip/include/lwip/sockets.h	/^#define UDPLITE_SEND_CSCOV /;"	d
UDP_DEBUG	lwip/include/lwip/opt.h	/^#define UDP_DEBUG /;"	d
UDP_FLAGS_CONNECTED	lwip/include/lwip/udp.h	/^#define UDP_FLAGS_CONNECTED /;"	d
UDP_FLAGS_NOCHKSUM	lwip/include/lwip/udp.h	/^#define UDP_FLAGS_NOCHKSUM /;"	d
UDP_FLAGS_UDPLITE	lwip/include/lwip/udp.h	/^#define UDP_FLAGS_UDPLITE /;"	d
UDP_HLEN	lwip/include/lwip/udp.h	/^#define UDP_HLEN /;"	d
UDP_LOCAL_PORT_RANGE_END	lwip/core/udp.c	/^#define UDP_LOCAL_PORT_RANGE_END /;"	d	file:
UDP_LOCAL_PORT_RANGE_START	lwip/core/udp.c	/^#define UDP_LOCAL_PORT_RANGE_START /;"	d	file:
UDP_STATS	lwip/include/lwip/opt.h	/^#define UDP_STATS /;"	d
UDP_STATS_DISPLAY	lwip/include/lwip/stats.h	/^#define UDP_STATS_DISPLAY(/;"	d
UDP_STATS_INC	lwip/include/lwip/stats.h	/^#define UDP_STATS_INC(/;"	d
UDP_TTL	lwip/include/lwip/opt.h	/^#define UDP_TTL /;"	d
UL	lwip/netif/ppp/md5.c	/^#define UL(/;"	d	file:
UNLOCK_TCPIP_CORE	lwip/include/lwip/tcpip.h	/^#define UNLOCK_TCPIP_CORE(/;"	d
UNTIMEOUT	lwip/netif/ppp/ppp.h	/^#define UNTIMEOUT(/;"	d
UPAPCS_AUTHREQ	lwip/netif/ppp/pap.h	/^#define UPAPCS_AUTHREQ /;"	d
UPAPCS_BADAUTH	lwip/netif/ppp/pap.h	/^#define UPAPCS_BADAUTH /;"	d
UPAPCS_CLOSED	lwip/netif/ppp/pap.h	/^#define UPAPCS_CLOSED /;"	d
UPAPCS_INITIAL	lwip/netif/ppp/pap.h	/^#define UPAPCS_INITIAL /;"	d
UPAPCS_OPEN	lwip/netif/ppp/pap.h	/^#define UPAPCS_OPEN /;"	d
UPAPCS_PENDING	lwip/netif/ppp/pap.h	/^#define UPAPCS_PENDING /;"	d
UPAPDEBUG	lwip/netif/ppp/pppdebug.h	/^#define UPAPDEBUG(/;"	d
UPAPSS_BADAUTH	lwip/netif/ppp/pap.h	/^#define UPAPSS_BADAUTH /;"	d
UPAPSS_CLOSED	lwip/netif/ppp/pap.h	/^#define UPAPSS_CLOSED /;"	d
UPAPSS_INITIAL	lwip/netif/ppp/pap.h	/^#define UPAPSS_INITIAL /;"	d
UPAPSS_LISTEN	lwip/netif/ppp/pap.h	/^#define UPAPSS_LISTEN /;"	d
UPAPSS_OPEN	lwip/netif/ppp/pap.h	/^#define UPAPSS_OPEN /;"	d
UPAPSS_PENDING	lwip/netif/ppp/pap.h	/^#define UPAPSS_PENDING /;"	d
UPAP_AUTHACK	lwip/netif/ppp/pap.h	/^#define UPAP_AUTHACK /;"	d
UPAP_AUTHNAK	lwip/netif/ppp/pap.h	/^#define UPAP_AUTHNAK /;"	d
UPAP_AUTHREQ	lwip/netif/ppp/pap.h	/^#define UPAP_AUTHREQ /;"	d
UPAP_DEFREQTIME	lwip/include/lwip/opt.h	/^#define UPAP_DEFREQTIME /;"	d
UPAP_DEFTIMEOUT	lwip/include/lwip/opt.h	/^#define UPAP_DEFTIMEOUT /;"	d
UPAP_HEADERLEN	lwip/netif/ppp/pap.h	/^#define UPAP_HEADERLEN /;"	d
USE_CRYPT	lwip/netif/ppp/chpms.c	/^#define USE_CRYPT$/;"	d	file:
UseNT	lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon328dfbc00108	typeref:typename:u_char	file:
VJBSDHDR_H	lwip/netif/ppp/vjbsdhdr.h	/^#define VJBSDHDR_H$/;"	d
VJF_TOSS	lwip/netif/ppp/vj.h	/^#define VJF_TOSS /;"	d
VJ_H	lwip/netif/ppp/vj.h	/^#define VJ_H$/;"	d
VJ_SUPPORT	lwip/include/lwip/opt.h	/^#define VJ_SUPPORT /;"	d
X16_F	lwip/jos/arch/cc.h	/^#define X16_F	/;"	d
X32_F	lwip/jos/arch/cc.h	/^#define X32_F	/;"	d
_ALIGN_TEXT	lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT /;"	d	file:
_IO	lwip/include/lwip/sockets.h	/^#define _IO(/;"	d
_IOR	lwip/include/lwip/sockets.h	/^#define _IOR(/;"	d
_IOW	lwip/include/lwip/sockets.h	/^#define _IOW(/;"	d
_SYS_QUEUE_H_	lwip/netif/ppp/ppp_oe.c	/^#define _SYS_QUEUE_H_$/;"	d	file:
__LWIP_API_H__	lwip/include/lwip/api.h	/^#define __LWIP_API_H__$/;"	d
__LWIP_API_MSG_H__	lwip/include/lwip/api_msg.h	/^#define __LWIP_API_MSG_H__$/;"	d
__LWIP_ARCH_H__	lwip/include/lwip/arch.h	/^#define __LWIP_ARCH_H__$/;"	d
__LWIP_AUTOIP_H__	lwip/include/ipv4/lwip/autoip.h	/^#define __LWIP_AUTOIP_H__$/;"	d
__LWIP_DEBUG_H__	lwip/include/lwip/debug.h	/^#define __LWIP_DEBUG_H__$/;"	d
__LWIP_DEF_H__	lwip/include/lwip/def.h	/^#define __LWIP_DEF_H__$/;"	d
__LWIP_DHCP_H__	lwip/include/lwip/dhcp.h	/^#define __LWIP_DHCP_H__$/;"	d
__LWIP_DNS_H__	lwip/include/lwip/dns.h	/^#define __LWIP_DNS_H__$/;"	d
__LWIP_ERR_H__	lwip/include/lwip/err.h	/^#define __LWIP_ERR_H__$/;"	d
__LWIP_ICMP_H__	lwip/include/ipv4/lwip/icmp.h	/^#define __LWIP_ICMP_H__$/;"	d
__LWIP_ICMP_H__	lwip/include/ipv6/lwip/icmp.h	/^#define __LWIP_ICMP_H__$/;"	d
__LWIP_IGMP_H__	lwip/include/ipv4/lwip/igmp.h	/^#define __LWIP_IGMP_H__$/;"	d
__LWIP_INET_CHKSUM_H__	lwip/include/ipv4/lwip/inet_chksum.h	/^#define __LWIP_INET_CHKSUM_H__$/;"	d
__LWIP_INET_H__	lwip/include/ipv4/lwip/inet.h	/^#define __LWIP_INET_H__$/;"	d
__LWIP_INET_H__	lwip/include/ipv6/lwip/inet.h	/^#define __LWIP_INET_H__$/;"	d
__LWIP_INIT_H__	lwip/include/lwip/init.h	/^#define __LWIP_INIT_H__$/;"	d
__LWIP_IP_ADDR_H__	lwip/include/ipv4/lwip/ip_addr.h	/^#define __LWIP_IP_ADDR_H__$/;"	d
__LWIP_IP_ADDR_H__	lwip/include/ipv6/lwip/ip_addr.h	/^#define __LWIP_IP_ADDR_H__$/;"	d
__LWIP_IP_FRAG_H__	lwip/include/ipv4/lwip/ip_frag.h	/^#define __LWIP_IP_FRAG_H__$/;"	d
__LWIP_IP_H__	lwip/include/ipv4/lwip/ip.h	/^#define __LWIP_IP_H__$/;"	d
__LWIP_IP_H__	lwip/include/ipv6/lwip/ip.h	/^#define __LWIP_IP_H__$/;"	d
__LWIP_MEMP_H__	lwip/include/lwip/memp.h	/^#define __LWIP_MEMP_H__$/;"	d
__LWIP_MEM_H__	lwip/include/lwip/mem.h	/^#define __LWIP_MEM_H__$/;"	d
__LWIP_NETBUF_H__	lwip/include/lwip/netbuf.h	/^#define __LWIP_NETBUF_H__$/;"	d
__LWIP_NETIFAPI_H__	lwip/include/lwip/netifapi.h	/^#define __LWIP_NETIFAPI_H__$/;"	d
__LWIP_NETIF_H__	lwip/include/lwip/netif.h	/^#define __LWIP_NETIF_H__$/;"	d
__LWIP_OPT_H__	lwip/include/lwip/opt.h	/^#define __LWIP_OPT_H__$/;"	d
__LWIP_PBUF_H__	lwip/include/lwip/pbuf.h	/^#define __LWIP_PBUF_H__$/;"	d
__LWIP_RAW_H__	lwip/include/lwip/raw.h	/^#define __LWIP_RAW_H__$/;"	d
__LWIP_SNMP_ASN1_H__	lwip/include/lwip/snmp_asn1.h	/^#define __LWIP_SNMP_ASN1_H__$/;"	d
__LWIP_SNMP_H__	lwip/include/lwip/snmp.h	/^#define __LWIP_SNMP_H__$/;"	d
__LWIP_SNMP_MSG_H__	lwip/include/lwip/snmp_msg.h	/^#define __LWIP_SNMP_MSG_H__$/;"	d
__LWIP_SNMP_STRUCTS_H__	lwip/include/lwip/snmp_structs.h	/^#define __LWIP_SNMP_STRUCTS_H__$/;"	d
__LWIP_SOCKETS_H__	lwip/include/lwip/sockets.h	/^#define __LWIP_SOCKETS_H__$/;"	d
__LWIP_STATS_H__	lwip/include/lwip/stats.h	/^#define __LWIP_STATS_H__$/;"	d
__LWIP_SYS_H__	lwip/include/lwip/sys.h	/^#define __LWIP_SYS_H__$/;"	d
__LWIP_TCPIP_H__	lwip/include/lwip/tcpip.h	/^#define __LWIP_TCPIP_H__$/;"	d
__LWIP_TCP_H__	lwip/include/lwip/tcp.h	/^#define __LWIP_TCP_H__$/;"	d
__LWIP_UDP_H__	lwip/include/lwip/udp.h	/^#define __LWIP_UDP_H__$/;"	d
__NETIF_ETHARP_H__	lwip/include/netif/etharp.h	/^#define __NETIF_ETHARP_H__$/;"	d
__NETIF_LOOPIF_H__	lwip/include/netif/loopif.h	/^#define __NETIF_LOOPIF_H__$/;"	d
__NETIF_SLIPIF_H__	lwip/include/netif/slipif.h	/^#define __NETIF_SLIPIF_H__$/;"	d
__SIO_H__	lwip/include/lwip/sio.h	/^#define __SIO_H__$/;"	d
__anon002a85510103	lwip/include/lwip/pbuf.h	/^typedef enum {$/;"	g
__anon002a85510203	lwip/include/lwip/pbuf.h	/^typedef enum {$/;"	g
__anon0b03e4290103	lwip/netif/ppp/lcp.h	/^typedef enum {$/;"	g
__anon0b158e100108	lwip/netif/ppp/md5.h	/^typedef struct {$/;"	s
__anon0b5367150103	lwip/netif/ppp/ppp.c	/^typedef enum {$/;"	g	file:
__anon1e010f7e010a	lwip/include/lwip/api.h	/^  union {$/;"	u	struct:netconn
__anon29c040a5010a	lwip/jos/arch/sys_arch.c	/^    union {$/;"	u	struct:sys_sem_entry	file:
__anon29c040a50208	lwip/jos/arch/sys_arch.c	/^	struct {$/;"	s	union:sys_sem_entry::__anon29c040a5010a	file:
__anon29c040a50303	lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	g	file:
__anon328dfbc00108	lwip/netif/ppp/chpms.c	/^typedef struct {$/;"	s	file:
__anon3b618764010a	lwip/include/lwip/tcpip.h	/^  union {$/;"	u	struct:tcpip_msg
__anon3b6187640208	lwip/include/lwip/tcpip.h	/^    struct {$/;"	s	union:tcpip_msg::__anon3b618764010a
__anon3b6187640308	lwip/include/lwip/tcpip.h	/^    struct {$/;"	s	union:tcpip_msg::__anon3b618764010a
__anon3b6187640408	lwip/include/lwip/tcpip.h	/^    struct {$/;"	s	union:tcpip_msg::__anon3b618764010a
__anon440d3f14010a	lwip/include/lwip/netifapi.h	/^  union {$/;"	u	struct:netifapi_msg_msg
__anon440d3f140208	lwip/include/lwip/netifapi.h	/^    struct {$/;"	s	union:netifapi_msg_msg::__anon440d3f14010a
__anon440d3f140308	lwip/include/lwip/netifapi.h	/^    struct {$/;"	s	union:netifapi_msg_msg::__anon440d3f14010a
__anon57d2cc170103	lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	g
__anon57d2cc170203	lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	g
__anona4ba34b70108	lwip/netif/ppp/randm.c	/^    struct {$/;"	s	function:avChurnRand	file:
__anonc1c0abe4010a	lwip/include/lwip/api_msg.h	/^  union {$/;"	u	struct:api_msg_msg
__anonc1c0abe40208	lwip/include/lwip/api_msg.h	/^    struct {$/;"	s	union:api_msg_msg::__anonc1c0abe4010a
__anonc1c0abe40308	lwip/include/lwip/api_msg.h	/^    struct {$/;"	s	union:api_msg_msg::__anonc1c0abe4010a
__anonc1c0abe40408	lwip/include/lwip/api_msg.h	/^    struct {$/;"	s	union:api_msg_msg::__anonc1c0abe4010a
__anonc1c0abe40508	lwip/include/lwip/api_msg.h	/^    struct {$/;"	s	union:api_msg_msg::__anonc1c0abe4010a
__anonc1c0abe40608	lwip/include/lwip/api_msg.h	/^    struct {$/;"	s	union:api_msg_msg::__anonc1c0abe4010a
__anonc1c0abe40708	lwip/include/lwip/api_msg.h	/^    struct {$/;"	s	union:api_msg_msg::__anonc1c0abe4010a
__anonc1c0abe40808	lwip/include/lwip/api_msg.h	/^    struct {$/;"	s	union:api_msg_msg::__anonc1c0abe4010a
__anonc24b80ea010a	lwip/netif/ppp/vj.h	/^  union {$/;"	u	struct:cstate
__anond42a84610103	lwip/netif/ppp/pppdebug.h	/^typedef enum {$/;"	g
__anonf95d1c730103	lwip/include/lwip/memp.h	/^typedef enum {$/;"	g
__anonf95d1c730203	lwip/include/lwip/memp.h	/^typedef enum {$/;"	g
_inet_ntoa	lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f	typeref:typename:char *
aaddrlen	lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u16_t
aaddrlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u8_t
accept	lwip/include/lwip/sockets.h	/^#define accept(/;"	d
accept	lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb	typeref:typename:err_t (*)(void * arg,struct tcp_pcb * newpcb,err_t err)
accept	lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen	typeref:typename:err_t (*)(void * arg,struct tcp_pcb * newpcb,err_t err)
accept_function	lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	typeref:typename:err_t	file:
accept_local	lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
accept_remote	lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
acceptmbox	lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn	typeref:typename:sys_mbox_t
accepts_pending	lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen	typeref:typename:u8_t
access	lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def	typeref:typename:u8_t
accomp	lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	typeref:typename:int	file:
ackci	lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks	typeref:typename:int (*)(fsm *,u_char *,int)
acked	lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb	typeref:typename:u16_t
ackno	lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	typeref:typename:u32_t	file:
ad	lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anonc1c0abe4010a	typeref:struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40408
add	lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon440d3f14010a	typeref:struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140208
addci	lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks	typeref:typename:void (*)(fsm *,u_char *,int *)
addr	lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:ip_addr	file:
addr	lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:ip_addr *
addr	lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:ip_addr *
addr_hint	lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif	typeref:typename:u8_t *
addr_inf	lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node	typeref:typename:void *
addresses	lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist * []	file:
addrinfo	lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:ip_addr *	file:
addrs	lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:ppp_addrs	file:
ai_addr	lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:sockaddr *
ai_addrlen	lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo	typeref:typename:socklen_t
ai_canonname	lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo	typeref:typename:char *
ai_family	lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo	typeref:typename:int
ai_flags	lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo	typeref:typename:int
ai_next	lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo *
ai_protocol	lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo	typeref:typename:int
ai_socktype	lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo	typeref:typename:int
aliases	lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	typeref:typename:char *	file:
alloc_socket	lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	typeref:typename:int	file:
alloc_tid	lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	typeref:typename:thread_id_t	file:
allrouters	lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
announce	testinput.c	/^announce(void)$/;"	f	typeref:typename:void	file:
api_msg	lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apiflags	lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40508	typeref:typename:u8_t
apimsg	lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon3b618764010a	typeref:struct:api_msg *
arg	lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	typeref:typename:void *	file:
arg	lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon3b618764010a::__anon3b6187640408	typeref:typename:void *
arg	lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	typeref:typename:void *	file:
arp_table	lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry[]	file:
arp_timer	lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	typeref:typename:void	file:
arptree_root	lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
asn_type	lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def	typeref:typename:u8_t
asyncmap	lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options	typeref:typename:u32_t
at	lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v	typeref:typename:s32_t
atentry	lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:typename:const struct mib_array_node
atentry_get_object_def	lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
atentry_get_value	lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
atentry_ids	lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v	typeref:typename:const s32_t[3]
atentry_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v	typeref:struct:mib_node * const[3]
attable	lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:typename:const struct mib_array_node
attable_id	lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v	typeref:typename:const s32_t
attable_node	lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v	typeref:struct:mib_node * const
auth_ip_addr	lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f	typeref:typename:int
auth_peer_fail	lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f	typeref:typename:void
auth_peer_success	lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f	typeref:typename:void
auth_pending	lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	typeref:typename:int[]	file:
auth_required	lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings	typeref:typename:u_int:1
auth_reset	lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f	typeref:typename:void
auth_withpeer_fail	lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f	typeref:typename:void
auth_withpeer_success	lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f	typeref:typename:void
autoip	lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:autoip *
autoip_arp_announce	lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	typeref:typename:err_t	file:
autoip_arp_reply	lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f	typeref:typename:void
autoip_bind	lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	typeref:typename:err_t	file:
autoip_coop_state	lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp	typeref:typename:u8_t
autoip_create_rand_addr	lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	typeref:typename:void	file:
autoip_handle_arp_conflict	lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	typeref:typename:void	file:
autoip_init	lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f	typeref:typename:void
autoip_start	lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f	typeref:typename:err_t
autoip_stop	lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f	typeref:typename:err_t
autoip_timer	lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	typeref:typename:void	file:
autoip_tmr	lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f	typeref:typename:void
avChurnRand	lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f	typeref:typename:void
avGenRand	lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f	typeref:typename:void
avRandom	lwip/netif/ppp/randm.c	/^avRandom()$/;"	f	typeref:typename:u32_t
avRandomInit	lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f	typeref:typename:void
avRandomSeed	lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	typeref:typename:u32_t	file:
avRandomize	lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f	typeref:typename:void
avRandomize	lwip/netif/ppp/randm.h	/^#define avRandomize(/;"	d
avRandomized	lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	typeref:typename:int	file:
avail	lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem	typeref:typename:mem_size_t
b	lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anonc1c0abe4010a	typeref:struct:netbuf *
backlog	lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40808	typeref:typename:u8_t
backlog	lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen	typeref:typename:u8_t
bad_ip_adrs	lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f	typeref:typename:int
bc	lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anonc1c0abe4010a	typeref:struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40308
bind	lwip/include/lwip/sockets.h	/^#define bind(/;"	d
buf	lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	typeref:typename:u8_t[]	file:
buf	lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon0b158e100108	typeref:typename:u32_t[4]
buse	serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	typeref:typename:bool[]	file:
cachehit	lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
callback	lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn	typeref:typename:netconn_callback
callbacks	lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm_callbacks *
cb	lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon3b618764010a	typeref:struct:tcpip_msg::__anon3b618764010a::__anon3b6187640308
cflag	lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options	typeref:typename:u_char
chal_id	lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state	typeref:typename:u_char
chal_interval	lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state	typeref:typename:int
chal_len	lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state	typeref:typename:u_char
chal_name	lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state	typeref:typename:char *
chal_transmits	lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state	typeref:typename:int
chal_type	lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state	typeref:typename:u_char
challenge	lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state	typeref:typename:u_char[]
chap	lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v	typeref:typename:chap_state[]
chap_mdtype	lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options	typeref:typename:u_char
chap_protent	lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
check_idle	lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	typeref:typename:void	file:
check_passwd	lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int /;"	f	typeref:typename:int
chkerr	lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp	typeref:typename:STAT_COUNTER
chkerr	lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
chksum	lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	typeref:typename:u32_t	file:
chksum	lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr	typeref:typename:u16_t
chksum	lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr	typeref:typename:u16_t
chksum	lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr	typeref:typename:u16_t
chksum_len_rx	lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb	typeref:typename:u16_t
chksum_len_tx	lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb	typeref:typename:u16_t
cifaddr	lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f	typeref:typename:int
cifdefaultroute	lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f	typeref:typename:int
cilen	lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information /;"	m	struct:fsm_callbacks	typeref:typename:int (*)(fsm *)
cis_received	lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	typeref:typename:int[]	file:
class	lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	typeref:typename:u16_t	file:
class	lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	typeref:typename:u16_t	file:
clientstate	lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state	typeref:typename:int
close	lwip/include/lwip/sockets.h	/^#define close(/;"	d
close	lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent	typeref:typename:void (*)(int unit,char * reason)
closesocket	lwip/include/lwip/sockets.h	/^#define closesocket(/;"	d
com_strlen	lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat	typeref:typename:u8_t
comlen	lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u16_t
comlen	lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u16_t
comlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u8_t
comlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u8_t
common	lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon440d3f14010a	typeref:struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140308
community	lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat	typeref:typename:u8_t[]
compressSlot	lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress	typeref:typename:u_char
conn	lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:netconn *	file:
conn	lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:netconn *
connect	lwip/include/lwip/sockets.h	/^#define connect(/;"	d
connect_time_expired	lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	typeref:typename:void	file:
connected	lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb	typeref:typename:err_t (*)(void * arg,struct tcp_pcb * pcb,err_t err)
count	lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root	typeref:typename:u8_t
count	lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode	typeref:typename:u16_t
counter	lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon29c040a5010a::__anon29c040a50208	typeref:typename:uint16_t	file:
cs_filler	lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate	typeref:typename:u_char
cs_hdr	lwip/netif/ppp/vj.h	/^#define cs_hdr /;"	d
cs_hlen	lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate	typeref:typename:u_short
cs_id	lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate	typeref:typename:u_char
cs_ip	lwip/netif/ppp/vj.h	/^#define cs_ip /;"	d
cs_next	lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate *
cstate	lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anonc24b80ea010a	typeref:typename:char[]
csu_ip	lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anonc24b80ea010a	typeref:struct:ip
ctime	lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	typeref:typename:u8_t	file:
ctx	lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon3b618764010a::__anon3b6187640308	typeref:typename:void *
cur_tc	lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context *	file:
cwnd	lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb	typeref:typename:u16_t
datagram_len	lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata	typeref:typename:u16_t
dataptr	lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40508	typeref:typename:const void *
dataptr	lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg	typeref:typename:void *
debug	lwip/jos/arch/sys_arch.c	/^#define debug /;"	d	file:
debug	serv.c	/^#define debug /;"	d	file:
default_route	lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
default_route_set	lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	typeref:typename:int[]	file:
dest	lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_addr
dhcp	lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:dhcp *
dhcp_arp_reply	lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f	typeref:typename:void
dhcp_bind	lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	typeref:typename:void	file:
dhcp_check	lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	typeref:typename:void	file:
dhcp_coarse_tmr	lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f	typeref:typename:void
dhcp_create_request	lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	typeref:typename:err_t	file:
dhcp_decline	lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	typeref:typename:err_t	file:
dhcp_delete_request	lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	typeref:typename:void	file:
dhcp_discover	lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	typeref:typename:err_t	file:
dhcp_fine_tmr	lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f	typeref:typename:void
dhcp_free_reply	lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	typeref:typename:void	file:
dhcp_get_option_byte	lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	typeref:typename:u8_t	file:
dhcp_get_option_long	lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	typeref:typename:u32_t	file:
dhcp_get_option_ptr	lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	typeref:typename:u8_t *	file:
dhcp_handle_ack	lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	typeref:typename:void	file:
dhcp_handle_nak	lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	typeref:typename:void	file:
dhcp_handle_offer	lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	typeref:typename:void	file:
dhcp_inform	lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f	typeref:typename:void
dhcp_msg	lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	typeref:typename:void	file:
dhcp_option_byte	lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	typeref:typename:void	file:
dhcp_option_long	lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	typeref:typename:void	file:
dhcp_option_short	lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	typeref:typename:void	file:
dhcp_option_trailer	lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	typeref:typename:void	file:
dhcp_rebind	lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	typeref:typename:err_t	file:
dhcp_recv	lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_/;"	f	typeref:typename:void	file:
dhcp_release	lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f	typeref:typename:err_t
dhcp_renew	lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f	typeref:typename:err_t
dhcp_select	lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	typeref:typename:err_t	file:
dhcp_set_state	lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	typeref:typename:void	file:
dhcp_start	lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f	typeref:typename:err_t
dhcp_stop	lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f	typeref:typename:void
dhcp_t1_timeout	lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	typeref:typename:void	file:
dhcp_t2_timeout	lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	typeref:typename:void	file:
dhcp_timeout	lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	typeref:typename:void	file:
dhcp_timer_coarse	lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	typeref:typename:void	file:
dhcp_timer_fine	lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	typeref:typename:void	file:
dhcp_unfold_reply	lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	typeref:typename:err_t	file:
did_authup	lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	typeref:typename:int	file:
digest	lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon0b158e100108	typeref:typename:unsigned char[16]
dip	lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:ip_addr	file:
dip	lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:ip_addr
disable_defaultip	lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings	typeref:typename:u_int:1
dns1	lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ip_addr
dns2	lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ip_addr
dns_answer	lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	typeref:typename:void	file:
dns_check_entry	lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	typeref:typename:void	file:
dns_compare_name	lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	typeref:typename:u8_t	file:
dns_count	lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp	typeref:typename:u32_t
dns_enqueue	lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	typeref:typename:err_t	file:
dns_found_callback	lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg)/;"	t	typeref:typename:void (*)(const char * name,struct ip_addr * ipaddr,void * callback_arg)
dns_gethostbyname	lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f	typeref:typename:err_t
dns_getserver	lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f	typeref:struct:ip_addr
dns_hdr	lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	lwip/core/dns.c	/^dns_init()$/;"	f	typeref:typename:void
dns_lookup	lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	typeref:typename:u32_t	file:
dns_parse_name	lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	typeref:typename:unsigned char *	file:
dns_payload	lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	typeref:typename:u8_t[]	file:
dns_pcb	lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb *	file:
dns_query	lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	typeref:typename:void	file:
dns_send	lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	typeref:typename:err_t	file:
dns_seqno	lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	typeref:typename:u8_t	file:
dns_servers	lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr[]	file:
dns_setserver	lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f	typeref:typename:void
dns_table	lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry[]	file:
dns_table_entry	lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	typeref:typename:void	file:
dns_tmr	lwip/core/dns.c	/^dns_tmr(void)$/;"	f	typeref:typename:void
dnsaddr	lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options	typeref:typename:u32_t[2]
do_bind	lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_close	lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_close_internal	lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	typeref:typename:void	file:
do_connect	lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_connected	lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	typeref:typename:err_t	file:
do_delconn	lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_disconnect	lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_dns_found	lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	typeref:typename:void	file:
do_getaddr	lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_gethostbyname	lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f	typeref:typename:void
do_join_leave_group	lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_listen	lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_netifapi_netif_add	lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f	typeref:typename:void
do_netifapi_netif_common	lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f	typeref:typename:void
do_newconn	lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_recv	lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_send	lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_write	lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f	typeref:typename:void
do_writemore	lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	typeref:typename:err_t	file:
down	lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state */;"	m	struct:fsm_callbacks	typeref:typename:void (*)(fsm *)
drop	lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
dummy	lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo	typeref:typename:u8_t
dupacks	lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb	typeref:typename:u8_t
e2s	lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f	typeref:typename:const char *
eidlen	lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u16_t
eidlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u8_t
empty_table	lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	typeref:typename:u8_t	file:
enable	lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	typeref:typename:u8_t	file:
enabled_flag	lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent	typeref:typename:int
end	lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	typeref:typename:u16_t	file:
endpoint	lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:epdisc
enterprise	lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_obj_id *
envid	lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	typeref:typename:envid_t	file:
err	lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	typeref:typename:err_t	file:
err	lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	typeref:typename:int	file:
err	lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	typeref:typename:u8_t	file:
err	lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn	typeref:typename:err_t
err	lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg	typeref:typename:err_t *
err	lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg	typeref:typename:err_t
err	lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
err	lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem	typeref:typename:STAT_COUNTER
err	lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem	typeref:typename:STAT_COUNTER
errCode	lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	typeref:typename:int	file:
err_strerr	lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	typeref:typename:const char * []	file:
err_t	lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t	typeref:typename:LWIP_ERR_T
err_tcp	lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	typeref:typename:void	file:
err_to_errno	lwip/api/sockets.c	/^#define err_to_errno(/;"	d	file:
err_to_errno_table	lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	typeref:typename:const int[]	file:
errf	lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb	typeref:typename:void (*)(void * arg,err_t err)
erridxlen	lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u16_t
erridxlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u8_t
errno	serv.c	/^int errno;$/;"	v	typeref:typename:int
error_index	lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat	typeref:typename:s32_t
error_status	lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat	typeref:typename:s32_t
errstatlen	lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u16_t
errstatlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u8_t
errtfunc	lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140308	typeref:typename:err_t (*)(struct netif * netif)
eth_addr	lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	lwip/include/netif/etharp.h	/^#define eth_addr_cmp(/;"	d
eth_hdr	lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:eth_addr *	file:
ethaddr	lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:eth_addr	file:
etharp	lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_proto
etharp_arp_input	lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f	typeref:typename:void
etharp_cached_entry	lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	typeref:typename:u8_t	file:
etharp_entry	lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f	typeref:typename:s8_t
etharp_hdr	lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	lwip/include/netif/etharp.h	/^#define etharp_init(/;"	d
etharp_ip_input	lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f	typeref:typename:void
etharp_output	lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f	typeref:typename:err_t
etharp_q_entry	lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f	typeref:typename:err_t
etharp_raw	lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	typeref:typename:err_t	file:
etharp_request	lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f	typeref:typename:err_t
etharp_send_ip	lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	typeref:typename:err_t	file:
etharp_state	lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f	typeref:typename:void
ethbroadcast	lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:typename:const struct eth_addr
ethernet_input	lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f	typeref:typename:err_t
ethif	lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:netif *	file:
ethip_hdr	lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:typename:const struct eth_addr
event_callback	lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	typeref:typename:void	file:
exceptset	lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	typeref:typename:fd_set *	file:
explicit_remote	lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings	typeref:typename:u_int:1
ext_accm	lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t	typeref:typename:u_char[32]
ext_mib_node	lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:mib_external_node *
ext_name_ptr	lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_name_ptr
ext_object_def	lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:obj_def
ext_oid	lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_obj_id
extcode	lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks	typeref:typename:int (*)(fsm *,int,u_char,u_char *,int)
f	lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon3b618764010a::__anon3b6187640308	typeref:typename:void (*)(void * ctx)
fcstab	lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	typeref:typename:const u_short[256]	file:
fd	lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	typeref:typename:sio_fd_t	file:
fd_bits	lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set	typeref:typename:unsigned char[]
fd_set	lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
file	lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	typeref:typename:const char *	file:
find_entry	lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	typeref:typename:s8_t	file:
finished	lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower laye/;"	m	struct:fsm_callbacks	typeref:typename:void (*)(fsm *)
flags	lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	typeref:typename:u16_t	file:
flags	lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	typeref:typename:u8_t	file:
flags	lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata	typeref:typename:u8_t
flags	lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif	typeref:typename:u8_t
flags	lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf	typeref:typename:u8_t
flags	lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb	typeref:typename:u8_t
flags	lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb	typeref:typename:u8_t
flags	lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm	typeref:typename:int
flags	lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress	typeref:typename:u_short
flags1	lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	typeref:typename:u8_t	file:
flags2	lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	typeref:typename:u8_t	file:
flow1	lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr	typeref:typename:u8_t:4
flow2	lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr	typeref:typename:u16_t
foobar	lwip/netif/ppp/randm.c	/^      char foobar;$/;"	m	struct:avChurnRand::__anona4ba34b70108	typeref:typename:char	file:
found	lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	typeref:typename:dns_found_callback	file:
free_etharp_q	lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	typeref:typename:void	file:
free_msg	lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	typeref:typename:sys_sem_t	file:
freeaddrinfo	lwip/include/lwip/netdb.h	/^#define freeaddrinfo(/;"	d
freed	lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	typeref:typename:int	file:
freed	lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	typeref:typename:int	file:
fsm	lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f	typeref:typename:void
fsm_init	lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f	typeref:typename:void
fsm_input	lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f	typeref:typename:void
fsm_lowerdown	lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f	typeref:typename:void
fsm_lowerup	lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f	typeref:typename:void
fsm_open	lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f	typeref:typename:void
fsm_protreject	lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f	typeref:typename:void
fsm_rcoderej	lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	typeref:typename:void	file:
fsm_rconfack	lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	typeref:typename:void	file:
fsm_rconfnakrej	lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	typeref:typename:void	file:
fsm_rconfreq	lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	typeref:typename:void	file:
fsm_rtermack	lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	typeref:typename:void	file:
fsm_rtermreq	lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	typeref:typename:void	file:
fsm_sconfreq	lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	typeref:typename:void	file:
fsm_sdata	lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f	typeref:typename:void
fsm_timeout	lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	typeref:typename:void	file:
func	lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	typeref:typename:void (*)(void * arg)	file:
func	serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	typeref:typename:void (*)(void)	file:
function	lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg	typeref:typename:void (*)(struct api_msg_msg * msg)
function	lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg	typeref:typename:void (*)(struct netifapi_msg_msg * msg)
fw	lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
gen	lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	typeref:typename:int	file:
gen_trap	lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap	typeref:typename:u32_t
get_buffer	serv.c	/^get_buffer(void) {$/;"	f	typeref:typename:void *	file:
get_idle_time	lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f	typeref:typename:int
get_object_def	lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node	typeref:typename:void (* const)(u8_t ident_len,s32_t * ident,struct obj_def * od)
get_object_def	lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t ident_len,s32_t * ident,struct obj_def * od)
get_object_def	lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode	typeref:typename:void (*)(u8_t ident_len,s32_t * ident,struct obj_def * od)
get_object_def	lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node	typeref:typename:void (*)(u8_t ident_len,s32_t * ident,struct obj_def * od)
get_object_def	lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node	typeref:typename:void (*)(u8_t ident_len,s32_t * ident,struct obj_def * od)
get_object_def_a	lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,u8_t ident_len,s32_t * ident,struct obj_def * od)
get_object_def_pc	lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,u8_t ident_len,s32_t * ident)
get_object_def_q	lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(void * addr_inf,u8_t rid,u8_t ident_len,s32_t * ident)
get_objid	lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(void * addr_inf,u8_t level,u16_t idx,s32_t * sub_id)
get_pap_passwd	lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	typeref:typename:int	file:
get_secret	lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_ad/;"	f	typeref:typename:int
get_socket	lwip/api/sockets.c	/^get_socket(int s)$/;"	f	typeref:struct:lwip_socket *	file:
get_value	lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node	typeref:typename:void (* const)(struct obj_def * od,u16_t len,void * value)
get_value	lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(struct obj_def * od,u16_t len,void * value)
get_value	lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode	typeref:typename:void (*)(struct obj_def * od,u16_t len,void * value)
get_value	lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node	typeref:typename:void (*)(struct obj_def * od,u16_t len,void * value)
get_value	lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node	typeref:typename:void (*)(struct obj_def * od,u16_t len,void * value)
get_value_a	lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,struct obj_def * od,u16_t len,void * value)
get_value_pc	lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,struct obj_def * od)
get_value_q	lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,struct obj_def * od)
getaddrinfo	lwip/include/lwip/netdb.h	/^#define getaddrinfo(/;"	d
gethostbyname	lwip/include/lwip/netdb.h	/^#define gethostbyname(/;"	d
gethostbyname_r	lwip/include/lwip/netdb.h	/^#define gethostbyname_r(/;"	d
gethostbyname_r_helper	lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getip_hl	lwip/netif/ppp/vj.c	/^#define getip_hl(/;"	d	file:
getpeername	lwip/include/lwip/sockets.h	/^#define getpeername(/;"	d
getsockname	lwip/include/lwip/sockets.h	/^#define getsockname(/;"	d
getsockopt	lwip/include/lwip/sockets.h	/^#define getsockopt(/;"	d
getth_off	lwip/netif/ppp/vj.c	/^#define getth_off(/;"	d	file:
group_address	lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:ip_addr
group_query_rxed	lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp	typeref:typename:STAT_COUNTER
group_state	lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group	typeref:typename:u8_t
gtrplen	lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u16_t
gtrplenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u8_t
gw	lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:ip_addr
gw	lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140208	typeref:struct:ip_addr *
h	lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon3b618764010a::__anon3b6187640408	typeref:typename:sys_timeout_handler
h_addr	lwip/include/lwip/netdb.h	/^#define h_addr /;"	d
h_addr_list	lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent	typeref:typename:char **
h_addrtype	lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent	typeref:typename:int
h_aliases	lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent	typeref:typename:char **
h_errno	lwip/api/netdb.c	/^int h_errno;$/;"	v	typeref:typename:int
h_length	lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent	typeref:typename:int
h_name	lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent	typeref:typename:char *
have_chap_secret	lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	typeref:typename:int	file:
have_pap_secret	lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	typeref:typename:int	file:
head	lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind *
head	lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_node *
head	lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	typeref:typename:int	file:
hexdump	testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	typeref:typename:void	file:
his_ipaddr	lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ip_addr
hisaddr	lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options	typeref:typename:u32_t
hoplim	lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr	typeref:typename:u8_t
hostent	lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif	typeref:typename:char *
htonl	lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f	typeref:typename:u32_t
htonl	lwip/include/ipv4/lwip/inet.h	/^#define htonl /;"	d
htonl	lwip/include/ipv4/lwip/inet.h	/^#define htonl(/;"	d
htons	lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f	typeref:typename:u16_t
htons	lwip/include/ipv4/lwip/inet.h	/^#define htons /;"	d
htons	lwip/include/ipv4/lwip/inet.h	/^#define htons(/;"	d
hwaddr	lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif	typeref:typename:u8_t[]
hwaddr_len	lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif	typeref:typename:u8_t
i	lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon0b158e100108	typeref:typename:u32_t[2]
icmp	lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:typename:const struct mib_array_node
icmp	lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_proto
icmp_dest_unreach	lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f	typeref:typename:void
icmp_dest_unreach	lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f	typeref:typename:void
icmp_dur_hdr	lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
icmp_get_value	lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
icmp_ids	lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, /;"	v	typeref:typename:const s32_t[26]
icmp_input	lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f	typeref:typename:void
icmp_input	lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f	typeref:typename:void
icmp_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v	typeref:struct:mib_node * const[26]
icmp_scalar	lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v	typeref:typename:const mib_scalar_node
icmp_te_hdr	lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f	typeref:typename:void
icmp_time_exceeded	lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f	typeref:typename:void
icmpinaddrmaskreps	lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	typeref:typename:u32_t	file:
icmpinaddrmasks	lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	typeref:typename:u32_t	file:
icmpindestunreachs	lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	typeref:typename:u32_t	file:
icmpinechoreps	lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	typeref:typename:u32_t	file:
icmpinechos	lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	typeref:typename:u32_t	file:
icmpinerrors	lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	typeref:typename:u32_t	file:
icmpinmsgs	lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	typeref:typename:u32_t	file:
icmpinparmprobs	lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	typeref:typename:u32_t	file:
icmpinredirects	lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	typeref:typename:u32_t	file:
icmpinsrcquenchs	lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	typeref:typename:u32_t	file:
icmpintimeexcds	lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	typeref:typename:u32_t	file:
icmpintimestampreps	lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	typeref:typename:u32_t	file:
icmpintimestamps	lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	typeref:typename:u32_t	file:
icmpoutaddrmaskreps	lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	typeref:typename:u32_t	file:
icmpoutaddrmasks	lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	typeref:typename:u32_t	file:
icmpoutdestunreachs	lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	typeref:typename:u32_t	file:
icmpoutechoreps	lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	typeref:typename:u32_t	file:
icmpoutechos	lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	typeref:typename:u32_t	file:
icmpouterrors	lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	typeref:typename:u32_t	file:
icmpoutmsgs	lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	typeref:typename:u32_t	file:
icmpoutparmprobs	lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	typeref:typename:u32_t	file:
icmpoutredirects	lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	typeref:typename:u32_t	file:
icmpoutsrcquenchs	lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	typeref:typename:u32_t	file:
icmpouttimeexcds	lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	typeref:typename:u32_t	file:
icmpouttimestampreps	lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	typeref:typename:u32_t	file:
icmpouttimestamps	lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	typeref:typename:u32_t	file:
icode	lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr	typeref:typename:u8_t
icode	lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr	typeref:typename:u8_t
icode	lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr	typeref:typename:u8_t
id	lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	typeref:typename:u16_t	file:
id	lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr	typeref:typename:u16_t
id	lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id	typeref:typename:s32_t[]
id	lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state	typeref:typename:u_char
id	lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm	typeref:typename:u_char
id_inst_len	lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def	typeref:typename:u8_t
id_inst_ptr	lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def	typeref:typename:s32_t *
ident	lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind	typeref:typename:s32_t *
ident	lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr	typeref:typename:s32_t *
ident_cmp	lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node	typeref:typename:s32_t (*)(void * addr_inf,u8_t level,u16_t idx,s32_t sub_id)
ident_len	lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind	typeref:typename:u8_t
ident_len	lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr	typeref:typename:u8_t
idle_time_limit	lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings	typeref:typename:u_short
if_up	lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	typeref:typename:int	file:
ifentry	lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:typename:const struct mib_array_node
ifentry_get_object_def	lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
ifentry_get_value	lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
ifentry_ids	lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1/;"	v	typeref:typename:const s32_t[22]
ifentry_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v	typeref:struct:mib_node * const[22]
ifentry_set_test	lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:u8_t	file:
ifentry_set_value	lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
ifindiscards	lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif	typeref:typename:u32_t
ifinnucastpkts	lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif	typeref:typename:u32_t
ifinoctets	lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif	typeref:typename:u32_t
ifinucastpkts	lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif	typeref:typename:u32_t
iflist_root	lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif	typeref:typename:u32_t
ifoutnucastpkts	lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif	typeref:typename:u32_t
ifoutoctets	lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif	typeref:typename:u32_t
ifoutucastpkts	lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif	typeref:typename:u32_t
ifspecific	lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:typename:const struct snmp_obj_id	file:
iftable	lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v	typeref:typename:s32_t
iftable_node	lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node *
igmp	lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_igmp
igmp_delaying_member	lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f	typeref:typename:void
igmp_dump_group_list	lwip/core/ipv4/igmp.c	/^#define igmp_dump_group_list(/;"	d	file:
igmp_dump_group_list	lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f	typeref:typename:void
igmp_group	lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group *	file:
igmp_init	lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f	typeref:typename:void
igmp_input	lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f	typeref:typename:void
igmp_ip_output_if	lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f	typeref:typename:err_t
igmp_joingroup	lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f	typeref:typename:err_t
igmp_leavegroup	lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f	typeref:typename:err_t
igmp_lookfor_group	lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f	typeref:struct:igmp_group *
igmp_lookup_group	lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f	typeref:struct:igmp_group *
igmp_mac_filter	lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif	typeref:typename:err_t (*)(struct netif * netif,struct ip_addr * group,u8_t action)
igmp_msg	lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f	typeref:typename:err_t
igmp_report_groups	lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f	typeref:typename:void
igmp_send	lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f	typeref:typename:void
igmp_start	lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f	typeref:typename:err_t
igmp_start_timer	lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f	typeref:typename:void
igmp_stop	lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f	typeref:typename:err_t
igmp_stop_timer	lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f	typeref:typename:void
igmp_timeout	lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f	typeref:typename:void
igmp_timer	lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	typeref:typename:void	file:
igmp_tmr	lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f	typeref:typename:void
illegal	lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem	typeref:typename:STAT_COUNTER
imr_interface	lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:in_addr
imr_multiaddr	lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:in_addr
in	lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon0b158e100108	typeref:typename:unsigned char[64]
inACCM	lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	typeref:typename:ext_accm	file:
inEscaped	lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	typeref:typename:char	file:
inFCS	lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	typeref:typename:u16_t	file:
inHead	lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:pbuf *	file:
inProtocol	lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	typeref:typename:u16_t	file:
inState	lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	typeref:typename:PPPDevStates	file:
inTail	lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:pbuf **	file:
in_addr	lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	lwip/core/ipv4/inet.c	/^#define in_range(/;"	d	file:
inet_addr	lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f	typeref:typename:u32_t
inet_aton	lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f	typeref:typename:int
inet_chksum	lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f	typeref:typename:u16_t
inet_chksum	lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f	typeref:typename:u16_t
inet_chksum_pbuf	lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f	typeref:typename:u16_t
inet_chksum_pbuf	lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f	typeref:typename:u16_t
inet_chksum_pseudo	lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f	typeref:typename:u16_t
inet_chksum_pseudo	lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f	typeref:typename:u16_t
inet_chksum_pseudo_partial	lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f	typeref:typename:u16_t
inet_ntoa	lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f	typeref:typename:char *
inet_ntoa	lwip/netif/ppp/ipcp.c	/^#define inet_ntoa /;"	d	file:
init	lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140208	typeref:typename:err_t (*)(struct netif * netif)
init	lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent	typeref:typename:void (*)(int unit)
inp	lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon3b618764010a	typeref:struct:tcpip_msg::__anon3b618764010a::__anon3b6187640208
input	input.c	/^input(envid_t ns_envid)$/;"	f	typeref:typename:void
input	lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif	typeref:typename:err_t (*)(struct pbuf * p,struct netif * inp)
input	lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140208	typeref:typename:err_t (*)(struct pbuf * p,struct netif * netif)
input	lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent	typeref:typename:void (*)(int unit,u_char * pkt,int len)
input_envid	serv.c	/^static envid_t input_envid;$/;"	v	typeref:typename:envid_t	file:
input_envid	testinput.c	/^static envid_t input_envid;$/;"	v	typeref:typename:envid_t	file:
inseg	lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
instance	lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def	typeref:typename:u8_t
interface	lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:netif *
interface	lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40708	typeref:struct:ip_addr *
interfaces	lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:typename:const struct mib_array_node
interfaces_get_object_def	lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
interfaces_get_value	lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
interfaces_ids	lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v	typeref:typename:const s32_t[2]
interfaces_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v	typeref:struct:mib_node * const[2]
interfaces_scalar	lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v	typeref:typename:const mib_scalar_node
internet	lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:typename:const struct mib_array_node
internet_ids	lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v	typeref:typename:const s32_t[1]
internet_ids	lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v	typeref:typename:s32_t[2]
internet_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v	typeref:struct:mib_node * const[1]
internet_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* co/;"	v	typeref:struct:mib_node * const[2]
invb	lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_varbind_root
ioctlsocket	lwip/include/lwip/sockets.h	/^#define ioctlsocket(/;"	d
ip	lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon1e010f7e010a	typeref:struct:ip_pcb *
ip	lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_proto
ip	lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip4_addr1(/;"	d
ip4_addr2	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip4_addr2(/;"	d
ip4_addr3	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip4_addr3(/;"	d
ip4_addr4	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip4_addr4(/;"	d
ip_addr	lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:ip_addr
ip_addr2	lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:typename:const struct ip_addr
ip_addr_broadcast	lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:typename:const struct ip_addr
ip_addr_check	lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	typeref:typename:int	file:
ip_addr_cmp	lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f	typeref:typename:u8_t
ip_addr_cmp	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip_addr_cmp(/;"	d
ip_addr_debug_print	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip_addr_debug_print(/;"	d
ip_addr_debug_print	lwip/include/ipv6/lwip/ip_addr.h	/^#define ip_addr_debug_print(/;"	d
ip_addr_isany	lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f	typeref:typename:u8_t
ip_addr_isany	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip_addr_isany(/;"	d
ip_addr_isbroadcast	lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f	typeref:typename:u8_t
ip_addr_islinklocal	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip_addr_islinklocal(/;"	d
ip_addr_ismulticast	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip_addr_ismulticast(/;"	d
ip_addr_netcmp	lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f	typeref:typename:u8_t
ip_addr_netcmp	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip_addr_netcmp(/;"	d
ip_addr_set	lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f	typeref:typename:void
ip_addr_set	lwip/include/ipv4/lwip/ip_addr.h	/^#define ip_addr_set(/;"	d
ip_addrentry_get_object_def	lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
ip_addrentry_get_value	lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
ip_debug_print	lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f	typeref:typename:void
ip_dst	lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:in_addr
ip_forward	lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	typeref:struct:netif *	file:
ip_forward	lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	typeref:typename:void	file:
ip_frag	lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f	typeref:typename:err_t
ip_frag	lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_proto
ip_get_object_def	lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
ip_get_value	lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
ip_hdr	lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so /;"	m	struct:ip	typeref:typename:u_char
ip_id	lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip	typeref:typename:u_short
ip_ids	lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20/;"	v	typeref:typename:const s32_t[23]
ip_init	lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f	typeref:typename:void
ip_init	lwip/include/ipv4/lwip/ip.h	/^#define ip_init(/;"	d
ip_input	lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f	typeref:typename:err_t
ip_input	lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f	typeref:typename:void
ip_len	lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip	typeref:typename:u_short
ip_mreq	lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v	typeref:struct:mib_node * const[23]
ip_ntomentry_get_object_def	lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
ip_ntomentry_get_value	lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
ip_off	lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip	typeref:typename:u_short
ip_output	lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f	typeref:typename:err_t
ip_output_if	lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f	typeref:typename:err_t
ip_p	lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip	typeref:typename:u_char
ip_pcb	lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f	typeref:struct:pbuf *
ip_reass_chain_frag_into_datagram_and_validate	lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	typeref:typename:int	file:
ip_reass_dequeue_datagram	lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	typeref:typename:void	file:
ip_reass_enqueue_new_datagram	lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	typeref:struct:ip_reassdata *	file:
ip_reass_free_complete_datagram	lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	typeref:typename:int	file:
ip_reass_helper	lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	typeref:typename:u16_t	file:
ip_reass_remove_oldest_datagram	lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	typeref:typename:int	file:
ip_reass_timer	lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	typeref:typename:void	file:
ip_reass_tmr	lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f	typeref:typename:void
ip_reassdata	lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f	typeref:struct:netif *
ip_route	lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f	typeref:struct:netif *
ip_rteentry_get_object_def	lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
ip_rteentry_get_value	lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
ip_scalar	lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v	typeref:typename:const mib_scalar_node
ip_set_test	lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:u8_t	file:
ip_src	lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:in_addr
ip_sum	lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip	typeref:typename:u_short
ip_tos	lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip	typeref:typename:u_char
ip_ttl	lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip	typeref:typename:u_char
ipaddr	lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:ip_addr	file:
ipaddr	lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40308	typeref:struct:ip_addr *
ipaddr	lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40408	typeref:struct:ip_addr *
ipaddr	lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140208	typeref:struct:ip_addr *
ipaddr	lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:ip_addr	file:
ipaddrentry	lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:typename:const struct mib_array_node
ipaddrentry_ids	lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v	typeref:typename:const s32_t[5]
ipaddrentry_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v	typeref:struct:mib_node * const[5]
ipaddrtable	lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v	typeref:typename:s32_t
ipaddrtable_node	lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node *
ipaddrtree_root	lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipcp_ackci	lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	typeref:typename:int	file:
ipcp_addci	lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	typeref:typename:void	file:
ipcp_allowoptions	lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v	typeref:typename:ipcp_options[]
ipcp_callbacks	lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	typeref:typename:fsm_callbacks	file:
ipcp_cilen	lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	typeref:typename:int	file:
ipcp_clear_addrs	lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	typeref:typename:void	file:
ipcp_close	lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	typeref:typename:void	file:
ipcp_down	lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	typeref:typename:void	file:
ipcp_finished	lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	typeref:typename:void	file:
ipcp_fsm	lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v	typeref:typename:fsm[]
ipcp_gotoptions	lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v	typeref:typename:ipcp_options[]
ipcp_hisoptions	lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v	typeref:typename:ipcp_options[]
ipcp_init	lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	typeref:typename:void	file:
ipcp_input	lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	typeref:typename:void	file:
ipcp_lowerdown	lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	typeref:typename:void	file:
ipcp_lowerup	lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	typeref:typename:void	file:
ipcp_nakci	lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	typeref:typename:int	file:
ipcp_open	lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	typeref:typename:void	file:
ipcp_options	lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	typeref:typename:void	file:
ipcp_rejci	lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	typeref:typename:int	file:
ipcp_reqci	lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int /;"	f	typeref:typename:int	file:
ipcp_resetci	lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	typeref:typename:void	file:
ipcp_up	lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	typeref:typename:void	file:
ipcp_wantoptions	lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v	typeref:typename:ipcp_options[]
ipforwdatagrams	lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	typeref:typename:u32_t	file:
ipfragcreates	lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	typeref:typename:u32_t	file:
ipfragfails	lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	typeref:typename:u32_t	file:
ipfragoks	lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	typeref:typename:u32_t	file:
iphdr	lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr *	file:
iphdr	lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_hdr
ipinaddrerrors	lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	typeref:typename:u32_t	file:
ipindelivers	lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	typeref:typename:u32_t	file:
ipindiscards	lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	typeref:typename:u32_t	file:
ipinhdrerrors	lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	typeref:typename:u32_t	file:
ipinreceives	lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	typeref:typename:u32_t	file:
ipinunknownprotos	lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	typeref:typename:u32_t	file:
ipntomentry	lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:typename:const struct mib_array_node
ipntomentry_ids	lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v	typeref:typename:const s32_t[4]
ipntomentry_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v	typeref:struct:mib_node * const[4]
ipntomtable	lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v	typeref:typename:s32_t
ipntomtable_node	lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node *
ipntomtree_root	lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	typeref:typename:u32_t	file:
ipoutnoroutes	lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	typeref:typename:u32_t	file:
ipoutrequests	lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	typeref:typename:u32_t	file:
ipreasmfails	lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	typeref:typename:u32_t	file:
ipreasmoks	lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	typeref:typename:u32_t	file:
ipreasmreqds	lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	typeref:typename:u32_t	file:
iprouteinfo	lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:typename:const struct snmp_obj_id	file:
iproutingdiscards	lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	typeref:typename:u32_t	file:
iprteentry	lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:typename:const struct mib_array_node
iprteentry_ids	lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v	typeref:typename:const s32_t[13]
iprteentry_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v	typeref:struct:mib_node * const[13]
iprtetable	lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v	typeref:typename:s32_t
iprtetable_node	lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node *
iprtetree_root	lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
isdigit	lwip/core/ipv4/inet.c	/^#define isdigit(/;"	d	file:
islower	lwip/core/ipv4/inet.c	/^#define islower(/;"	d	file:
isprint	lwip/core/ipv4/inet.c	/^#define isprint(/;"	d	file:
isspace	lwip/core/ipv4/inet.c	/^#define isspace(/;"	d	file:
isxdigit	lwip/core/ipv4/inet.c	/^#define isxdigit(/;"	d	file:
jb_ebp	lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf	typeref:typename:uint32_t
jb_ebx	lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf	typeref:typename:uint32_t
jb_edi	lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf	typeref:typename:uint32_t
jb_eip	lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf	typeref:typename:uint32_t
jb_esi	lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf	typeref:typename:uint32_t
jb_esp	lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf	typeref:typename:uint32_t
jif	lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif_init	lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f	typeref:typename:err_t
jif_input	lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f	typeref:typename:void
jif_output	lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	typeref:typename:err_t	file:
jl	lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anonc1c0abe4010a	typeref:struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40708
join_or_leave	lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40708	typeref:enum:netconn_igmp
join_sent	lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp	typeref:typename:STAT_COUNTER
jos_jmp_buf	lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
keep_cnt	lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
keep_cnt_sent	lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb	typeref:typename:u8_t
keep_idle	lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
keep_intvl	lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
kill_link	lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	typeref:typename:int	file:
kill_queue	lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l_linger	lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger	typeref:typename:int
l_onoff	lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger	typeref:typename:int
lastXMit	lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	typeref:typename:u_long	file:
last_cs	lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:cstate *
last_recv	lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress	typeref:typename:u_char
last_reporter_flag	lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group	typeref:typename:u8_t
last_xmit	lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress	typeref:typename:u_char
lastack	lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
lastconflict	lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip	typeref:typename:u8_t
lastdata	lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:netbuf *	file:
lastoffset	lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	typeref:typename:u16_t	file:
lb	lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anonc1c0abe4010a	typeref:struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40808
lcp_ackci	lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	typeref:typename:int	file:
lcp_addci	lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	typeref:typename:void	file:
lcp_allowoptions	lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v	typeref:typename:lcp_options[]
lcp_callbacks	lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	typeref:typename:fsm_callbacks	file:
lcp_cilen	lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	typeref:typename:int	file:
lcp_close	lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f	typeref:typename:void
lcp_down	lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	typeref:typename:void	file:
lcp_echo_fails	lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-request/;"	v	typeref:typename:u_int	file:
lcp_echo_interval	lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests */;"	v	typeref:typename:u_int	file:
lcp_echo_lowerdown	lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	typeref:typename:void	file:
lcp_echo_lowerup	lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	typeref:typename:void	file:
lcp_echo_number	lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	typeref:typename:u32_t	file:
lcp_echo_timer_running	lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	typeref:typename:u32_t	file:
lcp_echos_pending	lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	typeref:typename:u32_t	file:
lcp_extcode	lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	typeref:typename:int	file:
lcp_finished	lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	typeref:typename:void	file:
lcp_fsm	lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	typeref:typename:fsm[]	file:
lcp_gotoptions	lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v	typeref:typename:lcp_options[]
lcp_hisoptions	lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v	typeref:typename:lcp_options[]
lcp_init	lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f	typeref:typename:void
lcp_input	lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	typeref:typename:void	file:
lcp_loopbackfail	lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v	typeref:typename:int
lcp_lowerdown	lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f	typeref:typename:void
lcp_lowerup	lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f	typeref:typename:void
lcp_nakci	lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	typeref:typename:int	file:
lcp_open	lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f	typeref:typename:void
lcp_options	lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v	typeref:typename:LinkPhase[]
lcp_protent	lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	typeref:typename:void	file:
lcp_received_echo_reply	lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	typeref:typename:void	file:
lcp_rejci	lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	typeref:typename:int	file:
lcp_reqci	lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	typeref:typename:int	file:
lcp_resetci	lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	typeref:typename:void	file:
lcp_rprotrej	lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	typeref:typename:void	file:
lcp_sprotrej	lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f	typeref:typename:void
lcp_starting	lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	typeref:typename:void	file:
lcp_up	lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	typeref:typename:void	file:
lcp_wantoptions	lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v	typeref:typename:lcp_options[]
leave_sent	lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp	typeref:typename:STAT_COUNTER
len	lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	typeref:typename:u16_t	file:
len	lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr	typeref:typename:u16_t
len	lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40508	typeref:typename:int
len	lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40608	typeref:typename:u16_t
len	lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf	typeref:typename:u16_t
len	lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id	typeref:typename:u8_t
len	lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg	typeref:typename:u16_t
lenerr	lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp	typeref:typename:STAT_COUNTER
lenerr	lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
level	lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	typeref:typename:int	file:
level_length	lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node	typeref:typename:u16_t (*)(void * addr_inf,u8_t level)
lfree	lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem *	file:
line	lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	typeref:typename:int	file:
linger	lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_proto
linkStatusCB	lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	typeref:typename:void (*)(void * ctx,int errCode,void * arg)	file:
linkStatusCtx	lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	typeref:typename:void *	file:
link_callback	lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif	typeref:typename:void (*)(struct netif * netif)
link_down	lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f	typeref:typename:void
link_established	lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f	typeref:typename:void
link_required	lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f	typeref:typename:void
link_speed	lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif	typeref:typename:u32_t
link_terminated	lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f	typeref:typename:void
link_type	lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif	typeref:typename:u8_t
linkoutput	lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif	typeref:typename:err_t (*)(struct netif * netif,struct pbuf * p)
listen	lwip/include/lwip/sockets.h	/^#define listen(/;"	d
listen_pcbs	lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_pcb_listen *
llipaddr	lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address /;"	m	struct:autoip	typeref:struct:ip_addr
local	lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40408	typeref:typename:u8_t
local_port	lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb	typeref:typename:u16_t
lock_tcpip_core	lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v	typeref:typename:sys_sem_t
logged_in	lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	typeref:typename:int	file:
logout	lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	typeref:typename:void	file:
loop_cnt_current	lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif	typeref:typename:u16_t
loop_first	lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:pbuf *
loop_last	lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:pbuf *
loopif_init	lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f	typeref:typename:err_t
loopif_poll	lwip/include/netif/loopif.h	/^#define loopif_poll /;"	d
low_level_init	lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	typeref:typename:void	file:
low_level_input	lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	typeref:struct:pbuf *	file:
low_level_output	lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	typeref:typename:err_t	file:
lowerdown	lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent	typeref:typename:void (*)(int unit)
lowerup	lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent	typeref:typename:void (*)(int unit)
lqr_period	lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options	typeref:typename:u32_t
lwip_accept	lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f	typeref:typename:int
lwip_bind	lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f	typeref:typename:int
lwip_close	lwip/api/sockets.c	/^lwip_close(int s)$/;"	f	typeref:typename:int
lwip_connect	lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f	typeref:typename:int
lwip_core_lock	lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f	typeref:typename:void
lwip_core_unlock	lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f	typeref:typename:void
lwip_event	lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f	typeref:typename:void
lwip_getaddrinfo	lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f	typeref:typename:int
lwip_getaddrname	lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	typeref:typename:int	file:
lwip_gethostbyname	lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f	typeref:struct:hostent *
lwip_gethostbyname_r	lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f	typeref:typename:int
lwip_getpeername	lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f	typeref:typename:int
lwip_getsockname	lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f	typeref:typename:int
lwip_getsockopt	lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f	typeref:typename:int
lwip_getsockopt_internal	lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	typeref:typename:void	file:
lwip_init	lwip/core/init.c	/^lwip_init(void)$/;"	f	typeref:typename:void
lwip_init	serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	typeref:typename:void	file:
lwip_ioctl	lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f	typeref:typename:int
lwip_listen	lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f	typeref:typename:int
lwip_read	lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f	typeref:typename:int
lwip_recv	lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f	typeref:typename:int
lwip_recvfrom	lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f	typeref:typename:int
lwip_sanity_check	lwip/core/init.c	/^#define lwip_sanity_check(/;"	d	file:
lwip_sanity_check	lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	typeref:typename:void	file:
lwip_select	lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f	typeref:typename:int
lwip_select_cb	lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	typeref:typename:int	file:
lwip_send	lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f	typeref:typename:int
lwip_sendto	lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f	typeref:typename:int
lwip_setgetsockopt_data	lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f	typeref:typename:int
lwip_setsockopt_internal	lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	typeref:typename:void	file:
lwip_shutdown	lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f	typeref:typename:int
lwip_socket	lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f	typeref:typename:int
lwip_socket	lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f	typeref:typename:void
lwip_standard_chksum	lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	typeref:typename:u16_t	file:
lwip_standard_chksum	lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	typeref:typename:u16_t	file:
lwip_stats	lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f	typeref:typename:const char *
lwip_strerr	lwip/include/lwip/err.h	/^#define lwip_strerr(/;"	d
lwip_thread	lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	typeref:typename:void	file:
lwip_write	lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f	typeref:typename:int
magic	lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f	typeref:typename:u32_t
magicInit	lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f	typeref:typename:void
magicnumber	lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options	typeref:typename:u32_t
max	lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem	typeref:typename:STAT_COUNTER
max	lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem	typeref:typename:mem_size_t
maxSlotIndex	lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress	typeref:typename:u_char
max_tid	lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	typeref:typename:thread_id_t	file:
max_transmits	lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state	typeref:typename:int
maxconfreqtransmits	lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm	typeref:typename:int
maxconnect	lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings	typeref:typename:int
maxlength	lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node	typeref:typename:const u16_t
maxlength	lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node	typeref:typename:const u16_t
maxlength	lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node	typeref:typename:u16_t
maxlength	lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode	typeref:typename:u16_t
maxlength	lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node	typeref:typename:u16_t
maxnakloops	lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm	typeref:typename:int
maxslotindex	lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options	typeref:typename:u_char
maxtermtransmits	lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm	typeref:typename:int
mbox	lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	typeref:typename:sys_mbox_t	file:
mbox	lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_syselem
mboxes	lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry[]	file:
mem	lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_mem
mem_calloc	lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f	typeref:typename:void *
mem_calloc	lwip/include/lwip/mem.h	/^#define mem_calloc /;"	d
mem_free	lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f	typeref:typename:void
mem_free	lwip/include/lwip/mem.h	/^#define mem_free /;"	d
mem_free_callback	lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f	typeref:typename:err_t
mem_free_count	lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	typeref:typename:volatile u8_t	file:
mem_helper	lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	lwip/core/mem.c	/^mem_init(void)$/;"	f	typeref:typename:void
mem_init	lwip/include/lwip/mem.h	/^#define mem_init(/;"	d
mem_malloc	lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f	typeref:typename:void *
mem_malloc	lwip/include/lwip/mem.h	/^#define mem_malloc /;"	d
mem_ptr_t	lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t	typeref:typename:uintptr_t
mem_realloc	lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f	typeref:typename:void *
mem_realloc	lwip/include/lwip/mem.h	/^#define mem_realloc /;"	d
mem_sem	lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	typeref:typename:sys_sem_t	file:
mem_size_t	lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t	typeref:typename:size_t
memerr	lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
memp	lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_mem[]
memp_desc	lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	typeref:typename:const char * []	file:
memp_free	lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f	typeref:typename:void
memp_init	lwip/core/memp.c	/^memp_init(void)$/;"	f	typeref:typename:void
memp_malloc	lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f	typeref:typename:void *
memp_malloc	lwip/include/lwip/memp.h	/^#define memp_malloc(/;"	d
memp_memory	lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	typeref:typename:u8_t[]	file:
memp_num	lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	typeref:typename:const u16_t[]	file:
memp_overflow_check_all	lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	typeref:typename:void	file:
memp_overflow_check_element	lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	typeref:typename:void	file:
memp_overflow_init	lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	typeref:typename:void	file:
memp_pool_helper_t	lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anonf95d1c730203
memp_sanity	lwip/core/memp.c	/^memp_sanity(void)$/;"	f	typeref:typename:int	file:
memp_sizes	lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	typeref:typename:const u16_t[]	file:
memp_t	lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anonf95d1c730103
memp_tab	lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp * []	file:
mgmt	lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:typename:const struct mib_array_node
mgmt_ids	lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v	typeref:typename:const s32_t[1]
mgmt_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v	typeref:struct:mib_node * const[1]
mib2	lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:typename:const struct mib_array_node
mib2_at_node	lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node *
mib2_ids	lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v	typeref:typename:const s32_t[]
mib2_ip	lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:typename:const struct mib_array_node
mib2_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v	typeref:struct:mib_node * const[]
mib_array_node	lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
mode	lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:NPmode	file:
mrru	lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options	typeref:typename:u_short
mru	lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options	typeref:typename:u_short
msec	serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	typeref:typename:uint32_t	file:
msecs	lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon3b618764010a::__anon3b6187640408	typeref:typename:u32_t
msg	lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg_msg
msg	lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anonc1c0abe4010a
msg	lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg_msg
msg	lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon440d3f14010a
msg	lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon3b618764010a
msg	lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	typeref:typename:void * []	file:
msg_in	lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp_msg *
msg_input_list	lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat[]
msg_out	lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp_msg *
mss	lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb	typeref:typename:u16_t
mtu	lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif	typeref:typename:u16_t
mtu	lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	typeref:typename:int	file:
multiaddr	lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40708	typeref:struct:ip_addr *
multicast_ip	lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:ip_addr
n	lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anonc1c0abe4010a	typeref:struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40208
nPut	lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	typeref:typename:void	file:
nak_buffer	lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	typeref:typename:u_char[]	file:
nakci	lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks	typeref:typename:int (*)(fsm *,u_char *,int)
nakloops	lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm	typeref:typename:int
name	lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	typeref:typename:char[]	file:
name	lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg	typeref:typename:const char *
name	lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif	typeref:typename:char[2]
name	lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent	typeref:typename:char *
name	serv.c	/^	const char *name;$/;"	m	struct:timer_thread	typeref:typename:const char *	file:
name_size	lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon57d2cc170103
neg_accompression	lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_addr	lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
neg_asyncmap	lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_cbcp	lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_chap	lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_endpoint	lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_lqr	lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_magicnumber	lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_mrru	lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_mru	lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_pcompression	lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_ssnhf	lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_upap	lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
neg_vj	lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
net_timer	serv.c	/^net_timer(uint32_t arg)$/;"	f	typeref:typename:void	file:
netbuf	lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf_alloc	lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f	typeref:typename:void *
netbuf_chain	lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f	typeref:typename:void
netbuf_copy	lwip/include/lwip/netbuf.h	/^#define netbuf_copy(/;"	d
netbuf_copy_partial	lwip/include/lwip/netbuf.h	/^#define netbuf_copy_partial(/;"	d
netbuf_data	lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f	typeref:typename:err_t
netbuf_delete	lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f	typeref:typename:void
netbuf_first	lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f	typeref:typename:void
netbuf_free	lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f	typeref:typename:void
netbuf_fromaddr	lwip/include/lwip/netbuf.h	/^#define netbuf_fromaddr(/;"	d
netbuf_fromport	lwip/include/lwip/netbuf.h	/^#define netbuf_fromport(/;"	d
netbuf_len	lwip/include/lwip/netbuf.h	/^#define netbuf_len(/;"	d
netbuf_new	lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f	typeref:struct:netbuf *
netbuf_next	lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f	typeref:typename:s8_t
netbuf_ref	lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f	typeref:typename:err_t
netconn	lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f	typeref:struct:netconn *
netconn_addr	lwip/include/lwip/api.h	/^#define netconn_addr(/;"	d
netconn_alloc	lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f	typeref:struct:netconn *
netconn_bind	lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f	typeref:typename:err_t
netconn_callback	lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t	typeref:typename:void (*)(struct netconn *,enum netconn_evt,u16_t len)
netconn_close	lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f	typeref:typename:err_t
netconn_connect	lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f	typeref:typename:err_t
netconn_delete	lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f	typeref:typename:err_t
netconn_disconnect	lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f	typeref:typename:err_t
netconn_err	lwip/include/lwip/api.h	/^#define netconn_err(/;"	d
netconn_evt	lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f	typeref:typename:void
netconn_getaddr	lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f	typeref:typename:err_t
netconn_gethostbyname	lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f	typeref:typename:err_t
netconn_igmp	lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f	typeref:typename:err_t
netconn_listen	lwip/include/lwip/api.h	/^#define netconn_listen(/;"	d
netconn_listen_with_backlog	lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f	typeref:typename:err_t
netconn_new	lwip/include/lwip/api.h	/^#define netconn_new(/;"	d
netconn_new_with_callback	lwip/include/lwip/api.h	/^#define netconn_new_with_callback(/;"	d
netconn_new_with_proto_and_callback	lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f	typeref:struct:netconn *
netconn_peer	lwip/include/lwip/api.h	/^#define netconn_peer(/;"	d
netconn_recv	lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f	typeref:struct:netbuf *
netconn_recv_bufsize	lwip/include/lwip/api.h	/^#define netconn_recv_bufsize(/;"	d
netconn_send	lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f	typeref:typename:err_t
netconn_sendto	lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f	typeref:typename:err_t
netconn_state	lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f	typeref:enum:netconn_type
netconn_type	lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f	typeref:typename:err_t
netif	lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netif *
netif	lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon3b618764010a::__anon3b6187640208	typeref:struct:netif *
netif	lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:netif *	file:
netif	lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:netif	file:
netif_add	lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f	typeref:struct:netif *
netif_default	lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif *
netif_find	lwip/core/netif.c	/^netif_find(char *name)$/;"	f	typeref:struct:netif *
netif_init	lwip/include/lwip/netif.h	/^#define netif_init(/;"	d
netif_is_link_up	lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f	typeref:typename:u8_t
netif_is_up	lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f	typeref:typename:u8_t
netif_list	lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif *
netif_loop_output	lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f	typeref:typename:err_t
netif_poll	lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f	typeref:typename:void
netif_poll_all	lwip/core/netif.c	/^netif_poll_all(void)$/;"	f	typeref:typename:void
netif_remove	lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f	typeref:typename:void
netif_set_addr	lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f	typeref:typename:void
netif_set_default	lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f	typeref:typename:void
netif_set_down	lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f	typeref:typename:void
netif_set_gw	lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f	typeref:typename:void
netif_set_ipaddr	lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f	typeref:typename:void
netif_set_link_callback	lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f	typeref:typename:void
netif_set_link_down	lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f	typeref:typename:void
netif_set_link_up	lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f	typeref:typename:void
netif_set_netmask	lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f	typeref:typename:void
netif_set_status_callback	lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif/;"	f	typeref:typename:void
netif_set_up	lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f	typeref:typename:void
netifapi_autoip_start	lwip/include/lwip/netifapi.h	/^#define netifapi_autoip_start(/;"	d
netifapi_autoip_stop	lwip/include/lwip/netifapi.h	/^#define netifapi_autoip_stop(/;"	d
netifapi_dhcp_start	lwip/include/lwip/netifapi.h	/^#define netifapi_dhcp_start(/;"	d
netifapi_dhcp_stop	lwip/include/lwip/netifapi.h	/^#define netifapi_dhcp_stop(/;"	d
netifapi_msg	lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f	typeref:typename:err_t
netifapi_netif_common	lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f	typeref:typename:err_t
netifapi_netif_remove	lwip/include/lwip/netifapi.h	/^#define netifapi_netif_remove(/;"	d
netifapi_netif_set_default	lwip/include/lwip/netifapi.h	/^#define netifapi_netif_set_default(/;"	d
netifapi_netif_set_down	lwip/include/lwip/netifapi.h	/^#define netifapi_netif_set_down(/;"	d
netifapi_netif_set_up	lwip/include/lwip/netifapi.h	/^#define netifapi_netif_set_up(/;"	d
netifapimsg	lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon3b618764010a	typeref:struct:netifapi_msg *
netmask	lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:ip_addr
netmask	lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140208	typeref:struct:ip_addr *
netmask	lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ip_addr
network_phase	lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	typeref:typename:void	file:
next	lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb *	file:
next	lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	typeref:typename:mem_size_t	file:
next	lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp *	file:
next	lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group *
next	lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata *
next	lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif *
next	lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf *
next	lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb *
next	lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind *
next	lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node *
next	lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg *
next	lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb *
next	lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry *
next	lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist *	file:
next_i	serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	typeref:typename:int	file:
next_pbuf	lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:pbuf *	file:
nexthdr	lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr	typeref:typename:u8_t
nextq	lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	typeref:typename:int	file:
nif	serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
node_stack	lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse[]	file:
node_stack_cnt	lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	typeref:typename:u8_t	file:
node_type	lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node	typeref:typename:const u8_t
node_type	lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node	typeref:typename:const u8_t
node_type	lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node	typeref:typename:u8_t
node_type	lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode	typeref:typename:u8_t
node_type	lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node	typeref:typename:u8_t
noleafs_get_object_def	lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void
noleafs_get_value	lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void
noleafs_set_test	lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:u8_t
noleafs_set_value	lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void
np_down	lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f	typeref:typename:void
np_finished	lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f	typeref:typename:void
np_up	lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f	typeref:typename:void
npioctl	lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_node **
nptr	lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_node *
nptr	lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node	typeref:struct:mib_node * const *
nrtx	lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb	typeref:typename:u8_t
nse	lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
ntohl	lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f	typeref:typename:u32_t
ntohl	lwip/include/ipv4/lwip/inet.h	/^#define ntohl /;"	d
ntohl	lwip/include/ipv4/lwip/inet.h	/^#define ntohl(/;"	d
ntohs	lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f	typeref:typename:u16_t
ntohs	lwip/include/ipv4/lwip/inet.h	/^#define ntohs /;"	d
ntohs	lwip/include/ipv4/lwip/inet.h	/^#define ntohs(/;"	d
null_login	lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	typeref:typename:int	file:
num	lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif	typeref:typename:u8_t
num_np_open	lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	typeref:typename:int	file:
num_np_up	lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	typeref:typename:int	file:
numanswers	lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	typeref:typename:u16_t	file:
numauthrr	lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	typeref:typename:u16_t	file:
numdns	lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	typeref:typename:u8_t	file:
numextrarr	lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	typeref:typename:u16_t	file:
numloops	lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options	typeref:typename:int
numquestions	lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	typeref:typename:u16_t	file:
obj_def	lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f	typeref:typename:void
objid	lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node	typeref:typename:const s32_t *
objid	lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node	typeref:typename:s32_t *
objid	lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node	typeref:typename:s32_t
ocstrncpy	lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f	typeref:typename:void
offered_bc_addr	lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:ip_addr
offered_dns_addr	lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:ip_addr[]
offered_gw_addr	lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:ip_addr
offered_ip_addr	lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:ip_addr
offered_sn_mask	lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:ip_addr
offered_t0_lease	lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp	typeref:typename:u32_t
offered_t1_renew	lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp	typeref:typename:u32_t
offered_t2_rebind	lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp	typeref:typename:u32_t
old_addrs	lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
old_vj	lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
olen	lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind	typeref:typename:u16_t
olenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind	typeref:typename:u8_t
ooseq	lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_seg *
op_completed	lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn	typeref:typename:sys_sem_t
open	lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent	typeref:typename:void (*)(int unit)
openFlag	lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	typeref:typename:char	file:
opterr	lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
options_in	lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp_msg *
options_in_len	lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp	typeref:typename:u16_t
options_out_len	lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp	typeref:typename:u16_t
optlen	lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	typeref:typename:socklen_t *	file:
optname	lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	typeref:typename:int	file:
optval	lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	typeref:typename:void *	file:
our_ipaddr	lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ip_addr
our_name	lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings	typeref:typename:char[]
ouraddr	lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options	typeref:typename:u32_t
outACCM	lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	typeref:typename:ext_accm	file:
outpacket_buf	lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v	typeref:typename:u_char * []
output	lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif	typeref:typename:err_t (*)(struct netif * netif,struct pbuf * p,struct ip_addr * ipaddr)
output	output.c	/^output(envid_t ns_envid)$/;"	f	typeref:typename:void
output_envid	serv.c	/^static envid_t output_envid;$/;"	v	typeref:typename:envid_t	file:
output_envid	testinput.c	/^static envid_t output_envid;$/;"	v	typeref:typename:envid_t	file:
output_envid	testoutput.c	/^static envid_t output_envid;$/;"	v	typeref:typename:envid_t	file:
outvb	lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_varbind_root
outvb	lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_varbind_root
p	lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:pbuf *
p	lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:pbuf *
p	lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:pbuf *
p	lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:pbuf *
p	lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon3b618764010a::__anon3b6187640208	typeref:struct:pbuf *
p	lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:pbuf *
p_out	lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:pbuf *
pap_protent	lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
passive	lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
passwd	lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings	typeref:typename:char[]
passwd_from_file	lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	typeref:typename:int	file:
payload	lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf	typeref:typename:void *
pbuf	lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f	typeref:struct:pbuf *
pbuf_cat	lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f	typeref:typename:void
pbuf_chain	lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f	typeref:typename:void
pbuf_clen	lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f	typeref:typename:u8_t
pbuf_copy	lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f	typeref:typename:err_t
pbuf_copy_partial	lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f	typeref:typename:u16_t
pbuf_dechain	lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f	typeref:struct:pbuf *
pbuf_free	lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f	typeref:typename:u8_t
pbuf_free_callback	lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f	typeref:typename:err_t
pbuf_free_int	lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	typeref:typename:void	file:
pbuf_header	lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f	typeref:typename:u8_t
pbuf_init	lwip/include/lwip/pbuf.h	/^#define pbuf_init(/;"	d
pbuf_layer	lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon002a85510103
pbuf_realloc	lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f	typeref:typename:void
pbuf_ref	lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f	typeref:typename:void
pbuf_type	lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon002a85510203
pcb	lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon1e010f7e010a
pcb	lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:udp_pcb *
pcb	lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:udp_pcb *
pcb	lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:udp_pcb *
pcb_new	lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	typeref:typename:err_t	file:
pcbs	lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_pcb *
pcomp	lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	typeref:typename:int	file:
pdulen	lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u16_t
pdulen	lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u16_t
pdulenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u8_t
pdulenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u8_t
peer_authname	lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	typeref:typename:char[]	file:
peer_mru	lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v	typeref:typename:int[]
perror	lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f	typeref:typename:void
persist_backoff	lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb	typeref:typename:u8_t
persist_cnt	lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
pkt	testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt *	file:
pkt	testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt *	file:
plug_holes	lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	typeref:typename:void	file:
poll	lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb	typeref:typename:err_t (*)(void * arg,struct tcp_pcb * pcb)
poll_tcp	lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	typeref:typename:err_t	file:
pollinterval	lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb	typeref:typename:u8_t
polltmr	lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb	typeref:typename:u8_t
poolnr	lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	typeref:typename:memp_t	file:
pop_node	lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	typeref:typename:void	file:
port	lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40408	typeref:typename:u16_t *
port	lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40308	typeref:typename:u16_t
port	lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf	typeref:typename:u16_t
pppACCMMask	lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	typeref:typename:u_char[]	file:
pppAppend	lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	typeref:struct:pbuf *	file:
pppAuthType	lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f	typeref:typename:int
pppControl	lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	typeref:typename:PPPControl[]	file:
pppDrop	lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	typeref:typename:void	file:
pppHupCB	lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	typeref:typename:void	file:
pppIOCtl	lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f	typeref:typename:int
pppInProc	lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	typeref:typename:void	file:
pppInProcOverEthernet	lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f	typeref:typename:void
pppInit	lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f	typeref:typename:err_t
pppInput	lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	typeref:typename:void	file:
pppInputHeader	lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f	typeref:typename:void
pppLinkTerminated	lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f	typeref:typename:void
pppMTU	lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f	typeref:typename:u_int
pppMain	lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	typeref:typename:void	file:
pppMainWakeup	lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f	typeref:typename:void
pppOpen	lwip/netif/ppp/ppp.h	/^#define pppOpen(/;"	d
pppOverEthernetClose	lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f	typeref:typename:void
pppOverEthernetInitFailed	lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f	typeref:typename:void
pppOverEthernetLinkStatusCB	lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	typeref:typename:void	file:
pppOverEthernetOpen	lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_/;"	f	typeref:typename:int
pppOverSerialOpen	lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *li/;"	f	typeref:typename:int
pppSetAuth	lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f	typeref:typename:void
pppSigHUP	lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f	typeref:typename:void
pppSingleBuf	lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f	typeref:struct:pbuf *
pppStartCB	lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	typeref:typename:void	file:
pppStopCB	lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	typeref:typename:void	file:
pppWrite	lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f	typeref:typename:int
pppWriteOverEthernet	lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f	typeref:typename:int
ppp_addrs	lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent * []
ppp_recv_config	lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f	typeref:typename:void
ppp_send_config	lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f	typeref:typename:void
ppp_set_xaccm	lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f	typeref:typename:void
ppp_settings	lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	typeref:typename:const char * []	file:
pppifNetifInit	lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	typeref:typename:err_t	file:
pppifOutput	lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	typeref:typename:err_t	file:
pppifOutputOverEthernet	lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	typeref:typename:err_t	file:
pppoe_abort_connect	lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	typeref:typename:void	file:
pppoe_clear_softc	lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	typeref:typename:void	file:
pppoe_connect	lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f	typeref:typename:int
pppoe_create	lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_sof/;"	f	typeref:typename:err_t
pppoe_data_input	lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f	typeref:typename:void
pppoe_destroy	lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f	typeref:typename:err_t
pppoe_disc_input	lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f	typeref:typename:void
pppoe_disconnect	lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f	typeref:typename:void
pppoe_dispatch_disc_pkt	lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	typeref:typename:void	file:
pppoe_do_disconnect	lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	typeref:typename:int	file:
pppoe_find_softc_by_hunique	lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	typeref:struct:pppoe_softc *	file:
pppoe_find_softc_by_session	lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	typeref:struct:pppoe_softc *	file:
pppoe_hdrlen	lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v	typeref:typename:int
pppoe_init	lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f	typeref:typename:void
pppoe_linkstatus_up	lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	typeref:typename:void	file:
pppoe_output	lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	typeref:typename:err_t	file:
pppoe_sc	lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:pppoe_softc *	file:
pppoe_send_padi	lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	typeref:typename:err_t	file:
pppoe_send_pado	lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	typeref:typename:err_t	file:
pppoe_send_padr	lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	typeref:typename:err_t	file:
pppoe_send_pads	lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	typeref:typename:err_t	file:
pppoe_send_padt	lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	typeref:typename:err_t	file:
pppoe_softc	lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	typeref:typename:void	file:
pppoe_xmit	lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	typeref:typename:err_t
pppoehdr	lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
prefix	lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v	typeref:typename:const s32_t[4]
prev	lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	typeref:typename:mem_size_t	file:
prev	lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind *
prev	lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node *
prev_i	serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	typeref:typename:int	file:
print_jb	lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	typeref:typename:void	file:
process_timer	serv.c	/^process_timer(envid_t envid) {$/;"	f	typeref:typename:void	file:
protent	lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
proto	lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40208	typeref:typename:u8_t
proto	lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	typeref:typename:u16_t	file:
proto_name	lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) /;"	m	struct:fsm_callbacks	typeref:typename:char *
protocol	lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb	typeref:typename:u8_t
protocol	lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm	typeref:typename:u_short
protocol	lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	typeref:typename:int	file:
protocol	lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent	typeref:typename:u_short
protrej	lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent	typeref:typename:void (*)(int unit)
protreject	lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks	typeref:typename:void (*)(int)
proxy_arp	lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
psem	lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	typeref:typename:sys_sem_t *	file:
ptr	lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:pbuf **
push_node	lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	typeref:typename:void	file:
put_buffer	serv.c	/^put_buffer(void *va) {$/;"	f	typeref:typename:void	file:
q	lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_q_entry *	file:
queued_msg	lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	typeref:typename:sys_sem_t	file:
r	lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anonc1c0abe4010a	typeref:struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40608
r_id	lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	typeref:typename:s32_t	file:
r_nl	lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	typeref:typename:u8_t	file:
r_ptr	lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:mib_node *	file:
ram	lwip/core/mem.c	/^static u8_t *ram;$/;"	v	typeref:typename:u8_t *	file:
ram_end	lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem *	file:
ram_heap	lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	typeref:typename:u8_t[]	file:
randCount	lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	typeref:typename:long	file:
randPool	lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	typeref:typename:char[]	file:
raw	lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon1e010f7e010a	typeref:struct:raw_pcb *
raw_bind	lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f	typeref:typename:err_t
raw_connect	lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f	typeref:typename:err_t
raw_init	lwip/include/lwip/raw.h	/^#define raw_init(/;"	d
raw_input	lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f	typeref:typename:u8_t
raw_new	lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f	typeref:struct:raw_pcb *
raw_pcb	lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb *	file:
raw_recv	lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f	typeref:typename:void
raw_remove	lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f	typeref:typename:void
raw_send	lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f	typeref:typename:err_t
raw_sendto	lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f	typeref:typename:err_t
rcv_ann_wnd	lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb	typeref:typename:u16_t
rcv_nxt	lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
rcv_wnd	lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb	typeref:typename:u16_t
rcvevent	lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	typeref:typename:u16_t	file:
read	lwip/include/lwip/sockets.h	/^#define read(/;"	d
readset	lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	typeref:typename:fd_set *	file:
reassdatagrams	lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata *	file:
recv	lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb	typeref:typename:u8_t (*)(void * arg,struct raw_pcb * pcb,struct pbuf * p,struct ip_addr * addr)
recv	lwip/include/lwip/sockets.h	/^#define recv(/;"	d
recv	lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
recv	lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb	typeref:typename:err_t (*)(void * arg,struct tcp_pcb * pcb,struct pbuf * p,err_t err)
recv	lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb	typeref:typename:void (*)(void * arg,struct udp_pcb * pcb,struct pbuf * p,struct ip_addr * addr,u16_t port)
recv_arg	lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb	typeref:typename:void *
recv_arg	lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb	typeref:typename:void *
recv_avail	lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn	typeref:typename:u16_t
recv_bufsize	lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn	typeref:typename:int
recv_data	lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf *	file:
recv_flags	lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	typeref:typename:u8_t	file:
recv_idle	lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle	typeref:typename:u_short
recv_raw	lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	typeref:typename:u8_t	file:
recv_tcp	lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	typeref:typename:err_t	file:
recv_timeout	lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn	typeref:typename:int
recv_udp	lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	typeref:typename:void	file:
recvfrom	lwip/include/lwip/sockets.h	/^#define recvfrom(/;"	d
recvmbox	lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn	typeref:typename:sys_mbox_t
ref	lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf	typeref:typename:u16_t
refuse_chap	lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings	typeref:typename:u_int:1
refuse_pap	lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings	typeref:typename:u_int:1
refused_data	lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:pbuf *
rejci	lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks	typeref:typename:int (*)(fsm *,u_char *,int)
remote_name	lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings	typeref:typename:char[]
remote_port	lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb	typeref:typename:u16_t
remote_port	lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb	typeref:typename:u16_t
report_rxed	lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp	typeref:typename:STAT_COUNTER
report_sent	lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp	typeref:typename:STAT_COUNTER
req	serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:Nsipc *	file:
req_addr	lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
req_dns1	lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
req_dns2	lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options	typeref:typename:u_int:1
reqci	lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information/;"	m	struct:fsm_callbacks	typeref:typename:int (*)(fsm *,u_char *,int *,int)
reqid	lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm	typeref:typename:u_char
reqno	serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	typeref:typename:int32_t	file:
request_timeout	lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp	typeref:typename:u16_t
resetci	lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks	typeref:typename:void (*)(fsm *)
resp_id	lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state	typeref:typename:u_char
resp_length	lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state	typeref:typename:u_char
resp_name	lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state	typeref:typename:char *
resp_transmits	lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state	typeref:typename:int
resp_type	lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state	typeref:typename:u_char
response	lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state	typeref:typename:u_char[]
restart	lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
retransmit	lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks	typeref:typename:void (*)(fsm *)
retransmits	lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm	typeref:typename:int
retries	lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	typeref:typename:u8_t	file:
rhl	lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_resp_header_lengths
rid	lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat	typeref:typename:s32_t
ridlen	lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u16_t
ridlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u8_t
rstate	lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:cstate[]
rt	lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat	typeref:typename:u8_t
rterr	lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
rtime	lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb	typeref:typename:s16_t
rto	lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb	typeref:typename:s16_t
rtseq	lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
rttest	lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
s	lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	typeref:typename:int	file:
s16_t	lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t	typeref:typename:int16_t
s32_t	lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t	typeref:typename:int32_t
s64_t	lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t	typeref:typename:int64_t
s8_t	lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t	typeref:typename:int8_t
s_addr	lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr	typeref:typename:u32_t
sa	lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb	typeref:typename:s16_t
sa_data	lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr	typeref:typename:char[14]
sa_family	lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr	typeref:typename:u8_t
sa_len	lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr	typeref:typename:u8_t
sc_ac_cookie	lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	typeref:typename:u8_t *	file:
sc_ac_cookie_len	lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	typeref:typename:size_t	file:
sc_concentrator_name	lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	typeref:typename:char *	file:
sc_dest	lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:eth_addr	file:
sc_ethif	lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:netif *	file:
sc_hunique	lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	typeref:typename:u8_t *	file:
sc_hunique_len	lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	typeref:typename:size_t	file:
sc_linkStatusCB	lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	typeref:typename:void (*)(int pd,int up)	file:
sc_padi_retried	lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	typeref:typename:int	file:
sc_padr_retried	lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	typeref:typename:int	file:
sc_pd	lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	typeref:typename:int	file:
sc_service_name	lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	typeref:typename:char *	file:
sc_session	lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	typeref:typename:u16_t	file:
sc_state	lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	typeref:typename:int	file:
seen_ack	lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm	typeref:typename:u_char
select	lwip/include/lwip/sockets.h	/^#define select(/;"	d
select_cb_list	lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb *	file:
selectsem	lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	typeref:typename:sys_sem_t	file:
sem	lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	typeref:typename:sys_sem_t	file:
sem	lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg	typeref:typename:sys_sem_t
sem	lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg	typeref:typename:sys_sem_t
sem	lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_syselem
sem	lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg	typeref:typename:sys_sem_t *
sem_signalled	lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	typeref:typename:int	file:
sems	lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry[]	file:
send	lwip/include/lwip/sockets.h	/^#define send(/;"	d
sendevent	lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	typeref:typename:u16_t	file:
sendto	lwip/include/lwip/sockets.h	/^#define sendto(/;"	d
sent	lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb	typeref:typename:err_t (*)(void * arg,struct tcp_pcb * pcb,u16_t space)
sent_num	lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip	typeref:typename:u8_t
sent_tcp	lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	typeref:typename:err_t	file:
seqlen	lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u16_t
seqlen	lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u16_t
seqlen	lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind	typeref:typename:u16_t
seqlen	lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root	typeref:typename:u16_t
seqlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u8_t
seqlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u8_t
seqlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind	typeref:typename:u8_t
seqlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root	typeref:typename:u8_t
seqno	lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	typeref:typename:u8_t	file:
seqno	lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	typeref:typename:u32_t	file:
seqno	lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr	typeref:typename:u16_t
serve	serv.c	/^serve(void) {$/;"	f	typeref:typename:void
serve_init	serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f	typeref:typename:void
serve_thread	serv.c	/^serve_thread(uint32_t a) {$/;"	f	typeref:typename:void	file:
server_ip_addr	lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:ip_addr
serverstate	lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state	typeref:typename:int
set_errno	lwip/api/sockets.c	/^#define set_errno(/;"	d	file:
set_test	lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node	typeref:typename:u8_t (*)(struct obj_def * od,u16_t len,void * value)
set_test	lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	typeref:typename:u8_t (*)(struct obj_def * od,u16_t len,void * value)
set_test	lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode	typeref:typename:u8_t (*)(struct obj_def * od,u16_t len,void * value)
set_test	lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node	typeref:typename:u8_t (*)(struct obj_def * od,u16_t len,void * value)
set_test	lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node	typeref:typename:u8_t (*)(struct obj_def * od,u16_t len,void * value)
set_test_a	lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	typeref:typename:u8_t (*)(u8_t rid,struct obj_def * od,u16_t len,void * value)
set_test_pc	lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,struct obj_def * od)
set_test_q	lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,struct obj_def * od)
set_value	lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node	typeref:typename:void (*)(struct obj_def * od,u16_t len,void * value)
set_value	lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node	typeref:typename:void (*)(struct obj_def * od,u16_t len,void * value)
set_value	lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(struct obj_def * od,u16_t len,void * value)
set_value	lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode	typeref:typename:void (*)(struct obj_def * od,u16_t len,void * value)
set_value	lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node	typeref:typename:void (*)(struct obj_def * od,u16_t len,void * value)
set_value_a	lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,struct obj_def * od,u16_t len,void * value)
set_value_pc	lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,struct obj_def * od)
set_value_q	lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	typeref:typename:void (*)(u8_t rid,struct obj_def * od,u16_t len,void * value)
setsockopt	lwip/include/lwip/sockets.h	/^#define setsockopt(/;"	d
setup_tcp	lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	typeref:typename:void	file:
shutdown	lwip/include/lwip/sockets.h	/^#define shutdown(/;"	d
sifaddr	lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f	typeref:typename:int
sifdefaultroute	lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f	typeref:typename:int
sifdown	lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f	typeref:typename:int
sifnpmode	lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f	typeref:typename:int
sifup	lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f	typeref:typename:int
sifvjcomp	lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f	typeref:typename:int
sig_hup	lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	typeref:typename:int	file:
silent	lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options	typeref:typename:u_int:1
sin_addr	lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:in_addr
sin_family	lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in	typeref:typename:u8_t
sin_len	lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in	typeref:typename:u8_t
sin_port	lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in	typeref:typename:u16_t
sin_zero	lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in	typeref:typename:char[8]
sio_fd_t	lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t	typeref:typename:void *
sip	lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:ip_addr
sip_raw	lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap	typeref:typename:u8_t[4]
slipif_init	lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f	typeref:typename:err_t
slipif_input	lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	typeref:struct:pbuf *	file:
slipif_loop	lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	typeref:typename:void	file:
slipif_output	lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f	typeref:typename:err_t
snd_buf	lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb	typeref:typename:u16_t
snd_lbb	lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
snd_max	lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
snd_nxt	lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
snd_queuelen	lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb	typeref:typename:u16_t
snd_wl1	lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
snd_wl2	lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
snd_wnd	lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb	typeref:typename:u16_t
snmp	lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:typename:const struct mib_array_node
snmp1_pcb	lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb *
snmp_add_ifinoctets	lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f	typeref:typename:void
snmp_add_ifinoctets	lwip/include/lwip/snmp.h	/^#define snmp_add_ifinoctets(/;"	d
snmp_add_ifoutoctets	lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f	typeref:typename:void
snmp_add_ifoutoctets	lwip/include/lwip/snmp.h	/^#define snmp_add_ifoutoctets(/;"	d
snmp_add_snmpintotalreqvars	lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f	typeref:typename:void
snmp_add_snmpintotalreqvars	lwip/include/lwip/snmp.h	/^#define snmp_add_snmpintotalreqvars(/;"	d
snmp_add_snmpintotalsetvars	lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f	typeref:typename:void
snmp_add_snmpintotalsetvars	lwip/include/lwip/snmp.h	/^#define snmp_add_snmpintotalsetvars(/;"	d
snmp_add_sysuptime	lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f	typeref:typename:void
snmp_add_sysuptime	lwip/include/lwip/snmp.h	/^#define snmp_add_sysuptime(/;"	d
snmp_asn1_dec_length	lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f	typeref:typename:err_t
snmp_asn1_dec_oid	lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f	typeref:typename:err_t
snmp_asn1_dec_raw	lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f	typeref:typename:err_t
snmp_asn1_dec_s32t	lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f	typeref:typename:err_t
snmp_asn1_dec_type	lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f	typeref:typename:err_t
snmp_asn1_dec_u32t	lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f	typeref:typename:err_t
snmp_asn1_enc_length	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f	typeref:typename:err_t
snmp_asn1_enc_length_cnt	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f	typeref:typename:void
snmp_asn1_enc_oid	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f	typeref:typename:err_t
snmp_asn1_enc_oid_cnt	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f	typeref:typename:void
snmp_asn1_enc_raw	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f	typeref:typename:err_t
snmp_asn1_enc_s32t	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f	typeref:typename:err_t
snmp_asn1_enc_s32t_cnt	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f	typeref:typename:void
snmp_asn1_enc_type	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f	typeref:typename:err_t
snmp_asn1_enc_u32t	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f	typeref:typename:err_t
snmp_asn1_enc_u32t_cnt	lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f	typeref:typename:void
snmp_authfail_trap	lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f	typeref:typename:void
snmp_coldstart_trap	lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f	typeref:typename:void
snmp_dec_iflist	lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f	typeref:typename:void
snmp_dec_iflist	lwip/include/lwip/snmp.h	/^#define snmp_dec_iflist(/;"	d
snmp_delete_arpidx_tree	lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f	typeref:typename:void
snmp_delete_arpidx_tree	lwip/include/lwip/snmp.h	/^#define snmp_delete_arpidx_tree(/;"	d
snmp_delete_ipaddridx_tree	lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f	typeref:typename:void
snmp_delete_ipaddridx_tree	lwip/include/lwip/snmp.h	/^#define snmp_delete_ipaddridx_tree(/;"	d
snmp_delete_iprteidx_tree	lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f	typeref:typename:void
snmp_delete_iprteidx_tree	lwip/include/lwip/snmp.h	/^#define snmp_delete_iprteidx_tree(/;"	d
snmp_delete_udpidx_tree	lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f	typeref:typename:void
snmp_delete_udpidx_tree	lwip/include/lwip/snmp.h	/^#define snmp_delete_udpidx_tree(/;"	d
snmp_error_response	lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	typeref:typename:void	file:
snmp_expand_tree	lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret/;"	f	typeref:struct:mib_node *
snmp_get_object_def	lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
snmp_get_snmpenableauthentraps	lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f	typeref:typename:void
snmp_get_snmpenableauthentraps	lwip/include/lwip/snmp.h	/^#define snmp_get_snmpenableauthentraps(/;"	d
snmp_get_snmpgrpid_ptr	lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f	typeref:typename:void
snmp_get_snmpgrpid_ptr	lwip/include/lwip/snmp.h	/^#define snmp_get_snmpgrpid_ptr(/;"	d
snmp_get_sysobjid_ptr	lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f	typeref:typename:void
snmp_get_sysobjid_ptr	lwip/include/lwip/snmp.h	/^#define snmp_get_sysobjid_ptr(/;"	d
snmp_get_sysuptime	lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f	typeref:typename:void
snmp_get_sysuptime	lwip/include/lwip/snmp.h	/^#define snmp_get_sysuptime(/;"	d
snmp_get_value	lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
snmp_ids	lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v	typeref:typename:const s32_t[28]
snmp_ifType	lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f	typeref:typename:void
snmp_inc_icmpinaddrmaskreps	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f	typeref:typename:void
snmp_inc_icmpinaddrmaskreps	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpinaddrmaskreps(/;"	d
snmp_inc_icmpinaddrmasks	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f	typeref:typename:void
snmp_inc_icmpinaddrmasks	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpinaddrmasks(/;"	d
snmp_inc_icmpindestunreachs	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f	typeref:typename:void
snmp_inc_icmpindestunreachs	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpindestunreachs(/;"	d
snmp_inc_icmpinechoreps	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f	typeref:typename:void
snmp_inc_icmpinechoreps	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpinechoreps(/;"	d
snmp_inc_icmpinechos	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f	typeref:typename:void
snmp_inc_icmpinechos	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpinechos(/;"	d
snmp_inc_icmpinerrors	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f	typeref:typename:void
snmp_inc_icmpinerrors	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpinerrors(/;"	d
snmp_inc_icmpinmsgs	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f	typeref:typename:void
snmp_inc_icmpinmsgs	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpinmsgs(/;"	d
snmp_inc_icmpinparmprobs	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f	typeref:typename:void
snmp_inc_icmpinparmprobs	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpinparmprobs(/;"	d
snmp_inc_icmpinredirects	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f	typeref:typename:void
snmp_inc_icmpinredirects	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpinredirects(/;"	d
snmp_inc_icmpinsrcquenchs	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f	typeref:typename:void
snmp_inc_icmpinsrcquenchs	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpinsrcquenchs(/;"	d
snmp_inc_icmpintimeexcds	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f	typeref:typename:void
snmp_inc_icmpintimeexcds	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpintimeexcds(/;"	d
snmp_inc_icmpintimestampreps	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f	typeref:typename:void
snmp_inc_icmpintimestampreps	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpintimestampreps(/;"	d
snmp_inc_icmpintimestamps	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f	typeref:typename:void
snmp_inc_icmpintimestamps	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpintimestamps(/;"	d
snmp_inc_icmpoutaddrmaskreps	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f	typeref:typename:void
snmp_inc_icmpoutaddrmaskreps	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpoutaddrmaskreps(/;"	d
snmp_inc_icmpoutaddrmasks	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f	typeref:typename:void
snmp_inc_icmpoutaddrmasks	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpoutaddrmasks(/;"	d
snmp_inc_icmpoutdestunreachs	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f	typeref:typename:void
snmp_inc_icmpoutdestunreachs	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpoutdestunreachs(/;"	d
snmp_inc_icmpoutechoreps	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f	typeref:typename:void
snmp_inc_icmpoutechoreps	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpoutechoreps(/;"	d
snmp_inc_icmpoutechos	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f	typeref:typename:void
snmp_inc_icmpoutechos	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpoutechos(/;"	d
snmp_inc_icmpouterrors	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f	typeref:typename:void
snmp_inc_icmpouterrors	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpouterrors(/;"	d
snmp_inc_icmpoutmsgs	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f	typeref:typename:void
snmp_inc_icmpoutmsgs	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpoutmsgs(/;"	d
snmp_inc_icmpoutparmprobs	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f	typeref:typename:void
snmp_inc_icmpoutparmprobs	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpoutparmprobs(/;"	d
snmp_inc_icmpoutredirects	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f	typeref:typename:void
snmp_inc_icmpoutredirects	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpoutredirects(/;"	d
snmp_inc_icmpoutsrcquenchs	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f	typeref:typename:void
snmp_inc_icmpoutsrcquenchs	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpoutsrcquenchs(/;"	d
snmp_inc_icmpouttimeexcds	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f	typeref:typename:void
snmp_inc_icmpouttimeexcds	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpouttimeexcds(/;"	d
snmp_inc_icmpouttimestampreps	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f	typeref:typename:void
snmp_inc_icmpouttimestampreps	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpouttimestampreps(/;"	d
snmp_inc_icmpouttimestamps	lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f	typeref:typename:void
snmp_inc_icmpouttimestamps	lwip/include/lwip/snmp.h	/^#define snmp_inc_icmpouttimestamps(/;"	d
snmp_inc_ifindiscards	lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f	typeref:typename:void
snmp_inc_ifindiscards	lwip/include/lwip/snmp.h	/^#define snmp_inc_ifindiscards(/;"	d
snmp_inc_ifinnucastpkts	lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f	typeref:typename:void
snmp_inc_ifinnucastpkts	lwip/include/lwip/snmp.h	/^#define snmp_inc_ifinnucastpkts(/;"	d
snmp_inc_ifinucastpkts	lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f	typeref:typename:void
snmp_inc_ifinucastpkts	lwip/include/lwip/snmp.h	/^#define snmp_inc_ifinucastpkts(/;"	d
snmp_inc_iflist	lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f	typeref:typename:void
snmp_inc_iflist	lwip/include/lwip/snmp.h	/^#define snmp_inc_iflist(/;"	d
snmp_inc_ifoutdiscards	lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f	typeref:typename:void
snmp_inc_ifoutdiscards	lwip/include/lwip/snmp.h	/^#define snmp_inc_ifoutdiscards(/;"	d
snmp_inc_ifoutnucastpkts	lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f	typeref:typename:void
snmp_inc_ifoutnucastpkts	lwip/include/lwip/snmp.h	/^#define snmp_inc_ifoutnucastpkts(/;"	d
snmp_inc_ifoutucastpkts	lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f	typeref:typename:void
snmp_inc_ifoutucastpkts	lwip/include/lwip/snmp.h	/^#define snmp_inc_ifoutucastpkts(/;"	d
snmp_inc_ipforwdatagrams	lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f	typeref:typename:void
snmp_inc_ipforwdatagrams	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipforwdatagrams(/;"	d
snmp_inc_ipfragcreates	lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f	typeref:typename:void
snmp_inc_ipfragcreates	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipfragcreates(/;"	d
snmp_inc_ipfragfails	lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f	typeref:typename:void
snmp_inc_ipfragfails	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipfragfails(/;"	d
snmp_inc_ipfragoks	lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f	typeref:typename:void
snmp_inc_ipfragoks	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipfragoks(/;"	d
snmp_inc_ipinaddrerrors	lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f	typeref:typename:void
snmp_inc_ipinaddrerrors	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipinaddrerrors(/;"	d
snmp_inc_ipindelivers	lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f	typeref:typename:void
snmp_inc_ipindelivers	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipindelivers(/;"	d
snmp_inc_ipindiscards	lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f	typeref:typename:void
snmp_inc_ipindiscards	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipindiscards(/;"	d
snmp_inc_ipinhdrerrors	lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f	typeref:typename:void
snmp_inc_ipinhdrerrors	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipinhdrerrors(/;"	d
snmp_inc_ipinreceives	lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f	typeref:typename:void
snmp_inc_ipinreceives	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipinreceives(/;"	d
snmp_inc_ipinunknownprotos	lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f	typeref:typename:void
snmp_inc_ipinunknownprotos	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipinunknownprotos(/;"	d
snmp_inc_ipoutdiscards	lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f	typeref:typename:void
snmp_inc_ipoutdiscards	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipoutdiscards(/;"	d
snmp_inc_ipoutnoroutes	lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f	typeref:typename:void
snmp_inc_ipoutnoroutes	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipoutnoroutes(/;"	d
snmp_inc_ipoutrequests	lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f	typeref:typename:void
snmp_inc_ipoutrequests	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipoutrequests(/;"	d
snmp_inc_ipreasmfails	lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f	typeref:typename:void
snmp_inc_ipreasmfails	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipreasmfails(/;"	d
snmp_inc_ipreasmoks	lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f	typeref:typename:void
snmp_inc_ipreasmoks	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipreasmoks(/;"	d
snmp_inc_ipreasmreqds	lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f	typeref:typename:void
snmp_inc_ipreasmreqds	lwip/include/lwip/snmp.h	/^#define snmp_inc_ipreasmreqds(/;"	d
snmp_inc_iproutingdiscards	lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f	typeref:typename:void
snmp_inc_iproutingdiscards	lwip/include/lwip/snmp.h	/^#define snmp_inc_iproutingdiscards(/;"	d
snmp_inc_snmpinasnparseerrs	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f	typeref:typename:void
snmp_inc_snmpinasnparseerrs	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpinasnparseerrs(/;"	d
snmp_inc_snmpinbadcommunitynames	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f	typeref:typename:void
snmp_inc_snmpinbadcommunitynames	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpinbadcommunitynames(/;"	d
snmp_inc_snmpinbadcommunityuses	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f	typeref:typename:void
snmp_inc_snmpinbadcommunityuses	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpinbadcommunityuses(/;"	d
snmp_inc_snmpinbadvalues	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f	typeref:typename:void
snmp_inc_snmpinbadvalues	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpinbadvalues(/;"	d
snmp_inc_snmpinbadversions	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f	typeref:typename:void
snmp_inc_snmpinbadversions	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpinbadversions(/;"	d
snmp_inc_snmpingenerrs	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f	typeref:typename:void
snmp_inc_snmpingenerrs	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpingenerrs(/;"	d
snmp_inc_snmpingetnexts	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f	typeref:typename:void
snmp_inc_snmpingetnexts	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpingetnexts(/;"	d
snmp_inc_snmpingetrequests	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f	typeref:typename:void
snmp_inc_snmpingetrequests	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpingetrequests(/;"	d
snmp_inc_snmpingetresponses	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f	typeref:typename:void
snmp_inc_snmpingetresponses	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpingetresponses(/;"	d
snmp_inc_snmpinnosuchnames	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f	typeref:typename:void
snmp_inc_snmpinnosuchnames	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpinnosuchnames(/;"	d
snmp_inc_snmpinpkts	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f	typeref:typename:void
snmp_inc_snmpinpkts	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpinpkts(/;"	d
snmp_inc_snmpinreadonlys	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f	typeref:typename:void
snmp_inc_snmpinreadonlys	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpinreadonlys(/;"	d
snmp_inc_snmpinsetrequests	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f	typeref:typename:void
snmp_inc_snmpinsetrequests	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpinsetrequests(/;"	d
snmp_inc_snmpintoobigs	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f	typeref:typename:void
snmp_inc_snmpintoobigs	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpintoobigs(/;"	d
snmp_inc_snmpintraps	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f	typeref:typename:void
snmp_inc_snmpintraps	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpintraps(/;"	d
snmp_inc_snmpoutbadvalues	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f	typeref:typename:void
snmp_inc_snmpoutbadvalues	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpoutbadvalues(/;"	d
snmp_inc_snmpoutgenerrs	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f	typeref:typename:void
snmp_inc_snmpoutgenerrs	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpoutgenerrs(/;"	d
snmp_inc_snmpoutgetnexts	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f	typeref:typename:void
snmp_inc_snmpoutgetnexts	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpoutgetnexts(/;"	d
snmp_inc_snmpoutgetrequests	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f	typeref:typename:void
snmp_inc_snmpoutgetrequests	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpoutgetrequests(/;"	d
snmp_inc_snmpoutgetresponses	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f	typeref:typename:void
snmp_inc_snmpoutgetresponses	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpoutgetresponses(/;"	d
snmp_inc_snmpoutnosuchnames	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f	typeref:typename:void
snmp_inc_snmpoutnosuchnames	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpoutnosuchnames(/;"	d
snmp_inc_snmpoutpkts	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f	typeref:typename:void
snmp_inc_snmpoutpkts	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpoutpkts(/;"	d
snmp_inc_snmpoutsetrequests	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f	typeref:typename:void
snmp_inc_snmpoutsetrequests	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpoutsetrequests(/;"	d
snmp_inc_snmpouttoobigs	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f	typeref:typename:void
snmp_inc_snmpouttoobigs	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpouttoobigs(/;"	d
snmp_inc_snmpouttraps	lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f	typeref:typename:void
snmp_inc_snmpouttraps	lwip/include/lwip/snmp.h	/^#define snmp_inc_snmpouttraps(/;"	d
snmp_inc_sysuptime	lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f	typeref:typename:void
snmp_inc_sysuptime	lwip/include/lwip/snmp.h	/^#define snmp_inc_sysuptime(/;"	d
snmp_inc_tcpactiveopens	lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f	typeref:typename:void
snmp_inc_tcpactiveopens	lwip/include/lwip/snmp.h	/^#define snmp_inc_tcpactiveopens(/;"	d
snmp_inc_tcpattemptfails	lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f	typeref:typename:void
snmp_inc_tcpattemptfails	lwip/include/lwip/snmp.h	/^#define snmp_inc_tcpattemptfails(/;"	d
snmp_inc_tcpestabresets	lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f	typeref:typename:void
snmp_inc_tcpestabresets	lwip/include/lwip/snmp.h	/^#define snmp_inc_tcpestabresets(/;"	d
snmp_inc_tcpinerrs	lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f	typeref:typename:void
snmp_inc_tcpinerrs	lwip/include/lwip/snmp.h	/^#define snmp_inc_tcpinerrs(/;"	d
snmp_inc_tcpinsegs	lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f	typeref:typename:void
snmp_inc_tcpinsegs	lwip/include/lwip/snmp.h	/^#define snmp_inc_tcpinsegs(/;"	d
snmp_inc_tcpoutrsts	lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f	typeref:typename:void
snmp_inc_tcpoutrsts	lwip/include/lwip/snmp.h	/^#define snmp_inc_tcpoutrsts(/;"	d
snmp_inc_tcpoutsegs	lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f	typeref:typename:void
snmp_inc_tcpoutsegs	lwip/include/lwip/snmp.h	/^#define snmp_inc_tcpoutsegs(/;"	d
snmp_inc_tcppassiveopens	lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f	typeref:typename:void
snmp_inc_tcppassiveopens	lwip/include/lwip/snmp.h	/^#define snmp_inc_tcppassiveopens(/;"	d
snmp_inc_tcpretranssegs	lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f	typeref:typename:void
snmp_inc_tcpretranssegs	lwip/include/lwip/snmp.h	/^#define snmp_inc_tcpretranssegs(/;"	d
snmp_inc_udpindatagrams	lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f	typeref:typename:void
snmp_inc_udpindatagrams	lwip/include/lwip/snmp.h	/^#define snmp_inc_udpindatagrams(/;"	d
snmp_inc_udpinerrors	lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f	typeref:typename:void
snmp_inc_udpinerrors	lwip/include/lwip/snmp.h	/^#define snmp_inc_udpinerrors(/;"	d
snmp_inc_udpnoports	lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f	typeref:typename:void
snmp_inc_udpnoports	lwip/include/lwip/snmp.h	/^#define snmp_inc_udpnoports(/;"	d
snmp_inc_udpoutdatagrams	lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f	typeref:typename:void
snmp_inc_udpoutdatagrams	lwip/include/lwip/snmp.h	/^#define snmp_inc_udpoutdatagrams(/;"	d
snmp_init	lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f	typeref:typename:void
snmp_insert_arpidx_tree	lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f	typeref:typename:void
snmp_insert_arpidx_tree	lwip/include/lwip/snmp.h	/^#define snmp_insert_arpidx_tree(/;"	d
snmp_insert_ipaddridx_tree	lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f	typeref:typename:void
snmp_insert_ipaddridx_tree	lwip/include/lwip/snmp.h	/^#define snmp_insert_ipaddridx_tree(/;"	d
snmp_insert_iprteidx_tree	lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f	typeref:typename:void
snmp_insert_iprteidx_tree	lwip/include/lwip/snmp.h	/^#define snmp_insert_iprteidx_tree(/;"	d
snmp_insert_udpidx_tree	lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f	typeref:typename:void
snmp_insert_udpidx_tree	lwip/include/lwip/snmp.h	/^#define snmp_insert_udpidx_tree(/;"	d
snmp_iptooid	lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f	typeref:typename:void
snmp_iso_prefix_expand	lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f	typeref:typename:u8_t
snmp_iso_prefix_tst	lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f	typeref:typename:u8_t
snmp_mib_ln_alloc	lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f	typeref:struct:mib_list_node *
snmp_mib_ln_free	lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f	typeref:typename:void
snmp_mib_lrn_alloc	lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f	typeref:struct:mib_list_rootnode *
snmp_mib_lrn_free	lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f	typeref:typename:void
snmp_mib_node_delete	lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f	typeref:struct:mib_list_rootnode *
snmp_mib_node_find	lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f	typeref:typename:s8_t
snmp_mib_node_insert	lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f	typeref:typename:s8_t
snmp_msg_event	lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f	typeref:typename:void
snmp_msg_get_event	lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	typeref:typename:void	file:
snmp_msg_getnext_event	lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	typeref:typename:void	file:
snmp_msg_pstat	lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	typeref:typename:void	file:
snmp_msg_trap	lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f	typeref:typename:void
snmp_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v	typeref:struct:mib_node * const[28]
snmp_obj_id	lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f	typeref:typename:void
snmp_ok_response	lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	typeref:typename:void	file:
snmp_pdu_dec_varbindlist	lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_sta/;"	f	typeref:typename:err_t	file:
snmp_pdu_header_check	lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_/;"	f	typeref:typename:err_t	file:
snmp_publiccommunity	lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v	typeref:typename:const char[7]
snmp_recv	lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	typeref:typename:void	file:
snmp_resp_header_enc	lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	typeref:typename:u16_t	file:
snmp_resp_header_lengths	lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	typeref:typename:u16_t	file:
snmp_scalar	lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v	typeref:typename:const mib_scalar_node
snmp_search_tree	lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f	typeref:struct:mib_node *
snmp_send_response	lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f	typeref:typename:err_t
snmp_send_trap	lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f	typeref:typename:err_t
snmp_set_snmpenableauthentraps	lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f	typeref:typename:void
snmp_set_snmpenableauthentraps	lwip/include/lwip/snmp.h	/^#define snmp_set_snmpenableauthentraps(/;"	d
snmp_set_syscontact	lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f	typeref:typename:void
snmp_set_syscontact	lwip/include/lwip/snmp.h	/^#define snmp_set_syscontact(/;"	d
snmp_set_sysdesr	lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f	typeref:typename:void
snmp_set_sysdesr	lwip/include/lwip/snmp.h	/^#define snmp_set_sysdesr(/;"	d
snmp_set_syslocation	lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f	typeref:typename:void
snmp_set_syslocation	lwip/include/lwip/snmp.h	/^#define snmp_set_syslocation(/;"	d
snmp_set_sysname	lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f	typeref:typename:void
snmp_set_sysname	lwip/include/lwip/snmp.h	/^#define snmp_set_sysname(/;"	d
snmp_set_sysobjid	lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f	typeref:typename:void
snmp_set_sysobjid	lwip/include/lwip/snmp.h	/^#define snmp_set_sysobjid(/;"	d
snmp_set_test	lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:u8_t	file:
snmp_set_value	lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
snmp_trap_dst	lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f	typeref:typename:void
snmp_trap_dst_ip_set	lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f	typeref:typename:void
snmp_trap_header_enc	lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	typeref:typename:u16_t	file:
snmp_trap_header_lengths	lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	typeref:typename:u16_t	file:
snmp_varbind	lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f	typeref:struct:snmp_varbind *
snmp_varbind_free	lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f	typeref:typename:void
snmp_varbind_list_enc	lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	typeref:typename:u16_t	file:
snmp_varbind_list_free	lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f	typeref:typename:void
snmp_varbind_list_sum	lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	typeref:typename:u16_t	file:
snmp_varbind_root	lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f	typeref:typename:void
snmp_varbind_tail_remove	lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f	typeref:struct:snmp_varbind *
snmp_version	lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v	typeref:typename:const s32_t
snmpenableauthentraps_default	lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	typeref:typename:const u8_t	file:
snmpenableauthentraps_ptr	lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	typeref:typename:u8_t *	file:
snmpgrp_id	lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	typeref:typename:u32_t	file:
snmpinbadcommunitynames	lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	typeref:typename:u32_t	file:
snmpinbadcommunityuses	lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	typeref:typename:u32_t	file:
snmpinbadvalues	lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	typeref:typename:u32_t	file:
snmpinbadversions	lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	typeref:typename:u32_t	file:
snmpingenerrs	lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	typeref:typename:u32_t	file:
snmpingetnexts	lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	typeref:typename:u32_t	file:
snmpingetrequests	lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	typeref:typename:u32_t	file:
snmpingetresponses	lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	typeref:typename:u32_t	file:
snmpinnosuchnames	lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	typeref:typename:u32_t	file:
snmpinpkts	lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	typeref:typename:u32_t	file:
snmpinreadonlys	lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	typeref:typename:u32_t	file:
snmpinsetrequests	lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	typeref:typename:u32_t	file:
snmpintoobigs	lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	typeref:typename:u32_t	file:
snmpintotalreqvars	lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	typeref:typename:u32_t	file:
snmpintotalsetvars	lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	typeref:typename:u32_t	file:
snmpintraps	lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	typeref:typename:u32_t	file:
snmpoutbadvalues	lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	typeref:typename:u32_t	file:
snmpoutgenerrs	lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	typeref:typename:u32_t	file:
snmpoutgetnexts	lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	typeref:typename:u32_t	file:
snmpoutgetrequests	lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	typeref:typename:u32_t	file:
snmpoutgetresponses	lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	typeref:typename:u32_t	file:
snmpoutnosuchnames	lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	typeref:typename:u32_t	file:
snmpoutpkts	lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	typeref:typename:u32_t	file:
snmpoutsetrequests	lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	typeref:typename:u32_t	file:
snmpouttoobigs	lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	typeref:typename:u32_t	file:
snmpouttraps	lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	typeref:typename:u32_t	file:
sock	lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_socket *	file:
sock_set_errno	lwip/api/sockets.c	/^#define sock_set_errno(/;"	d	file:
sockaddr	lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn	typeref:typename:int
socket	lwip/include/lwip/sockets.h	/^#define socket(/;"	d
sockets	lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket[]	file:
socklen_t	lwip/include/lwip/sockets.h	/^#  define socklen_t /;"	d
socksem	lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	typeref:typename:sys_sem_t	file:
sp	lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat	typeref:typename:u16_t
spc_trap	lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap	typeref:typename:u32_t
src	lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_addr
ssthresh	lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb	typeref:typename:u16_t
sswt_cb	lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	typeref:typename:void	file:
st_args	serv.c	/^struct st_args {$/;"	s	file:
stack_size	lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon57d2cc170203
start	lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	typeref:typename:u16_t	file:
start_timer	serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	typeref:typename:void	file:
starting	lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks	typeref:typename:void (*)(fsm *)
state	lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	typeref:typename:u8_t	file:
state	lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip	typeref:typename:u8_t
state	lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn_state
state	lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp	typeref:typename:u8_t
state	lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif	typeref:typename:void *
state	lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140208	typeref:typename:void *
state	lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat	typeref:typename:u8_t
state	lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_state	file:
state	lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm	typeref:typename:int
stats	lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjstat
stats_	lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	lwip/core/stats.c	/^stats_display(void)$/;"	f	typeref:typename:void
stats_display	lwip/include/lwip/stats.h	/^#define stats_display(/;"	d
stats_display_igmp	lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f	typeref:typename:void
stats_display_igmp	lwip/include/lwip/stats.h	/^#define stats_display_igmp(/;"	d
stats_display_mem	lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f	typeref:typename:void
stats_display_mem	lwip/include/lwip/stats.h	/^#define stats_display_mem(/;"	d
stats_display_memp	lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f	typeref:typename:void
stats_display_memp	lwip/include/lwip/stats.h	/^#define stats_display_memp(/;"	d
stats_display_proto	lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f	typeref:typename:void
stats_display_proto	lwip/include/lwip/stats.h	/^#define stats_display_proto(/;"	d
stats_display_sys	lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f	typeref:typename:void
stats_display_sys	lwip/include/lwip/stats.h	/^#define stats_display_sys(/;"	d
stats_igmp	lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	lwip/include/lwip/stats.h	/^#define stats_init(/;"	d
stats_mem	lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status_callback	lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif	typeref:typename:void (*)(struct netif * netif)
strplen	lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u16_t
strplenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u8_t
subnetMask	lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v	typeref:typename:u_long
sv	lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb	typeref:typename:s16_t
sys	lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_sys
sys_arch_mbox_fetch	lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f	typeref:typename:u32_t
sys_arch_mbox_tryfetch	lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f	typeref:typename:u32_t
sys_arch_sem_wait	lwip/include/lwip/sys.h	/^#define sys_arch_sem_wait(/;"	d
sys_arch_sem_wait	lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f	typeref:typename:u32_t
sys_arch_timeouts	lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f	typeref:struct:sys_timeouts *
sys_errlist	lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v	typeref:typename:const char * []
sys_init	lwip/include/lwip/sys.h	/^#define sys_init(/;"	d
sys_mbox_entry	lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f	typeref:typename:void
sys_mbox_fetch	lwip/include/lwip/sys.h	/^#define sys_mbox_fetch(/;"	d
sys_mbox_free	lwip/include/lwip/sys.h	/^#define sys_mbox_free(/;"	d
sys_mbox_free	lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f	typeref:typename:void
sys_mbox_new	lwip/include/lwip/sys.h	/^#define sys_mbox_new(/;"	d
sys_mbox_new	lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f	typeref:typename:sys_mbox_t
sys_mbox_post	lwip/include/lwip/sys.h	/^#define sys_mbox_post(/;"	d
sys_mbox_post	lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f	typeref:typename:void
sys_mbox_t	lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t	typeref:typename:u8_t
sys_mbox_t	lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t	typeref:typename:int
sys_mbox_tryfetch	lwip/include/lwip/sys.h	/^#define sys_mbox_tryfetch(/;"	d
sys_mbox_trypost	lwip/include/lwip/sys.h	/^#define sys_mbox_trypost(/;"	d
sys_mbox_trypost	lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f	typeref:typename:err_t
sys_msleep	lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f	typeref:typename:void
sys_prot_t	lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t	typeref:typename:u8_t
sys_sem_entry	lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	lwip/include/lwip/sys.h	/^#define sys_sem_free(/;"	d
sys_sem_free	lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f	typeref:typename:void
sys_sem_new	lwip/include/lwip/sys.h	/^#define sys_sem_new(/;"	d
sys_sem_new	lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f	typeref:typename:sys_sem_t
sys_sem_signal	lwip/include/lwip/sys.h	/^#define sys_sem_signal(/;"	d
sys_sem_signal	lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f	typeref:typename:void
sys_sem_t	lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t	typeref:typename:u8_t
sys_sem_t	lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t	typeref:typename:int
sys_sem_wait	lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f	typeref:typename:void
sys_sem_wait	lwip/include/lwip/sys.h	/^#define sys_sem_wait(/;"	d
sys_sem_wait_timeout	lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f	typeref:typename:int
sys_sem_wait_timeout	lwip/include/lwip/sys.h	/^#define sys_sem_wait_timeout(/;"	d
sys_tem	lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:typename:const struct mib_array_node
sys_tem_ids	lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v	typeref:typename:const s32_t[7]
sys_tem_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v	typeref:struct:mib_node * const[7]
sys_tem_scalar	lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v	typeref:typename:const mib_scalar_node
sys_thread	lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	lwip/include/lwip/sys.h	/^#define sys_thread_new(/;"	d
sys_thread_new	lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f	typeref:typename:sys_thread_t
sys_thread_t	lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t	typeref:typename:int
sys_timeo	lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f	typeref:typename:void
sys_timeout	lwip/include/lwip/sys.h	/^#define sys_timeout(/;"	d
sys_untimeout	lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f	typeref:typename:void
sys_untimeout	lwip/include/lwip/sys.h	/^#define sys_untimeout(/;"	d
syscontact_default	lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	typeref:typename:const u8_t[]	file:
syscontact_len_default	lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	typeref:typename:const u8_t	file:
syscontact_len_ptr	lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	typeref:typename:u8_t *	file:
syscontact_ptr	lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	typeref:typename:u8_t *	file:
sysdescr_default	lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	typeref:typename:const u8_t[]	file:
sysdescr_len_default	lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	typeref:typename:const u8_t	file:
sysdescr_len_ptr	lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	typeref:typename:u8_t *	file:
sysdescr_ptr	lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	typeref:typename:u8_t *	file:
syslocation_default	lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	typeref:typename:const u8_t[]	file:
syslocation_len_default	lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	typeref:typename:const u8_t	file:
syslocation_len_ptr	lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	typeref:typename:u8_t *	file:
syslocation_ptr	lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	typeref:typename:u8_t *	file:
sysname_default	lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	typeref:typename:const u8_t[]	file:
sysname_len_default	lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	typeref:typename:const u8_t	file:
sysname_len_ptr	lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	typeref:typename:u8_t *	file:
sysname_ptr	lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	typeref:typename:u8_t *	file:
sysobjid	lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	typeref:typename:const s32_t	file:
system_get_object_def	lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
system_get_value	lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
system_set_test	lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:u8_t	file:
system_set_value	lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
sysuptime	lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	typeref:typename:u32_t	file:
t1_timeout	lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp	typeref:typename:u16_t
t2_timeout	lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp	typeref:typename:u16_t
t_arp	serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind *
tail	lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_node *
tc_arg	lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context	typeref:typename:uint32_t
tc_entry	lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context	typeref:typename:void (*)(uint32_t)
tc_jb	lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:jos_jmp_buf
tc_name	lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context	typeref:typename:char[]
tc_nonhalt	lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context	typeref:typename:int
tc_onhalt	lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context	typeref:typename:void (* [THREAD_NUM_ONHALT])(thread_id_t)
tc_queue_link	lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context *
tc_stack_bottom	lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context	typeref:typename:void *
tc_tid	lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context	typeref:typename:thread_id_t
tc_wait_addr	lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context	typeref:typename:volatile uint32_t *
tc_wakeup	lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context	typeref:typename:volatile char
tclass1	lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr	typeref:typename:u8_t:4
tclass2	lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr	typeref:typename:u8_t:4
tcp	lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:typename:const struct mib_array_node
tcp	lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon1e010f7e010a	typeref:struct:tcp_pcb *
tcp	lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_proto
tcp_abort	lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f	typeref:typename:void
tcp_accept	lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f	typeref:typename:void
tcp_accept_null	lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	typeref:typename:err_t	file:
tcp_accepted	lwip/include/lwip/tcp.h	/^#define          tcp_accepted(/;"	d
tcp_ack	lwip/include/lwip/tcp.h	/^#define tcp_ack(/;"	d
tcp_ack_now	lwip/include/lwip/tcp.h	/^#define tcp_ack_now(/;"	d
tcp_active_pcbs	lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb *
tcp_alloc	lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f	typeref:struct:tcp_pcb *
tcp_arg	lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f	typeref:typename:void
tcp_backoff	lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v	typeref:typename:const u8_t[13]
tcp_bind	lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f	typeref:typename:err_t
tcp_bound_pcbs	lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb *
tcp_close	lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f	typeref:typename:err_t
tcp_connect	lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f	typeref:typename:err_t
tcp_debug_print	lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f	typeref:typename:void
tcp_debug_print	lwip/include/lwip/tcp.h	/^#  define tcp_debug_print(/;"	d
tcp_debug_print_flags	lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f	typeref:typename:void
tcp_debug_print_flags	lwip/include/lwip/tcp.h	/^#  define tcp_debug_print_flags(/;"	d
tcp_debug_print_pcbs	lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f	typeref:typename:void
tcp_debug_print_pcbs	lwip/include/lwip/tcp.h	/^#  define tcp_debug_print_pcbs(/;"	d
tcp_debug_print_state	lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f	typeref:typename:void
tcp_debug_print_state	lwip/include/lwip/tcp.h	/^#  define tcp_debug_print_state(/;"	d
tcp_do_output_nagle	lwip/include/lwip/tcp.h	/^#define tcp_do_output_nagle(/;"	d
tcp_eff_send_mss	lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f	typeref:typename:u16_t
tcp_enqueue	lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f	typeref:typename:err_t
tcp_err	lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f	typeref:typename:void
tcp_fasttmr	lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f	typeref:typename:void
tcp_get_object_def	lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
tcp_get_value	lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
tcp_hdr	lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v	typeref:typename:const s32_t[15]
tcp_init	lwip/include/lwip/tcp.h	/^#define tcp_init(/;"	d
tcp_input	lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f	typeref:typename:void
tcp_input_pcb	lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb *
tcp_keepalive	lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f	typeref:typename:void
tcp_kill_prio	lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	typeref:typename:void	file:
tcp_kill_timewait	lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	typeref:typename:void	file:
tcp_listen	lwip/include/lwip/tcp.h	/^#define          tcp_listen(/;"	d
tcp_listen_input	lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	typeref:typename:err_t	file:
tcp_listen_pcbs	lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f	typeref:struct:tcp_pcb *
tcp_mss	lwip/include/lwip/tcp.h	/^#define          tcp_mss(/;"	d
tcp_new	lwip/core/tcp.c	/^tcp_new(void)$/;"	f	typeref:struct:tcp_pcb *
tcp_new_port	lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	typeref:typename:u16_t	file:
tcp_next_iss	lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f	typeref:typename:u32_t
tcp_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v	typeref:struct:mib_node * const[15]
tcp_output	lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f	typeref:typename:err_t
tcp_output_nagle	lwip/include/lwip/tcp.h	/^#define tcp_output_nagle(/;"	d
tcp_output_segment	lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	typeref:typename:void	file:
tcp_parseopt	lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	typeref:typename:void	file:
tcp_pcb	lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f	typeref:typename:void
tcp_pcb_remove	lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f	typeref:typename:void
tcp_pcbs_sane	lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f	typeref:typename:s16_t
tcp_pcbs_sane	lwip/include/lwip/tcp.h	/^#  define tcp_pcbs_sane(/;"	d
tcp_persist_backoff	lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v	typeref:typename:const u8_t[7]
tcp_poll	lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f	typeref:typename:void
tcp_process	lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	typeref:typename:err_t	file:
tcp_receive	lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	typeref:typename:u8_t	file:
tcp_recv	lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f	typeref:typename:void
tcp_recv_null	lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	typeref:typename:err_t	file:
tcp_recved	lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f	typeref:typename:void
tcp_rexmit	lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f	typeref:typename:void
tcp_rexmit_rto	lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f	typeref:typename:void
tcp_rst	lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f	typeref:typename:void
tcp_scalar	lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v	typeref:typename:const mib_scalar_node
tcp_seg	lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f	typeref:struct:tcp_seg *
tcp_seg_free	lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f	typeref:typename:u8_t
tcp_segs_free	lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f	typeref:typename:u8_t
tcp_send_ctrl	lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f	typeref:typename:err_t
tcp_sent	lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f	typeref:typename:void
tcp_seq	lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t	typeref:typename:u32_t
tcp_setprio	lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f	typeref:typename:void
tcp_slowtmr	lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f	typeref:typename:void
tcp_sndbuf	lwip/include/lwip/tcp.h	/^#define          tcp_sndbuf(/;"	d
tcp_state	lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v	typeref:typename:u32_t
tcp_timer	lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	typeref:typename:u8_t	file:
tcp_timer_needed	lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f	typeref:typename:void
tcp_timer_needed	lwip/include/lwip/tcp.h	/^#define tcp_timer_needed(/;"	d
tcp_timewait_input	lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	typeref:typename:err_t	file:
tcp_tmp_pcb	lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb *
tcp_tmr	lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f	typeref:typename:void
tcp_tw_pcbs	lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb *
tcp_write	lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f	typeref:typename:err_t
tcp_zero_window_probe	lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f	typeref:typename:void
tcpactiveopens	lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	typeref:typename:u32_t	file:
tcpattemptfails	lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	typeref:typename:u32_t	file:
tcpconnentry	lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:typename:const struct mib_array_node
tcpconnentry_get_object_def	lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
tcpconnentry_get_value	lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
tcpconnentry_ids	lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v	typeref:typename:const s32_t[5]
tcpconnentry_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v	typeref:struct:mib_node * const[5]
tcpconntable	lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v	typeref:typename:s32_t
tcpconntable_node	lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node *
tcpconntree_root	lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	typeref:typename:u32_t	file:
tcphdr	lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr *	file:
tcphdr	lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_hdr *
tcphdr	lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcpinerrs	lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	typeref:typename:u32_t	file:
tcpinsegs	lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	typeref:typename:u32_t	file:
tcpip_apimsg	lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f	typeref:typename:err_t
tcpip_apimsg_lock	lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f	typeref:typename:err_t
tcpip_callback	lwip/include/lwip/tcpip.h	/^#define tcpip_callback(/;"	d
tcpip_callback_with_block	lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f	typeref:typename:err_t
tcpip_init	lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f	typeref:typename:void
tcpip_init_done	lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	typeref:typename:void (*)(void * arg)	file:
tcpip_init_done	serv.c	/^tcpip_init_done(void *arg)$/;"	f	typeref:typename:void	file:
tcpip_init_done_arg	lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	typeref:typename:void *	file:
tcpip_input	lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f	typeref:typename:err_t
tcpip_msg	lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f	typeref:typename:err_t
tcpip_netifapi_lock	lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f	typeref:typename:err_t
tcpip_tcp_timer	lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	typeref:typename:void	file:
tcpip_tcp_timer_active	lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	typeref:typename:int	file:
tcpip_thread	lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	typeref:typename:void	file:
tcpip_timeout	lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f	typeref:typename:err_t
tcpip_untimeout	lwip/include/lwip/tcpip.h	/^#define tcpip_untimeout(/;"	d
tcplen	lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	typeref:typename:u16_t	file:
tcpoutrsts	lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	typeref:typename:u32_t	file:
tcpoutsegs	lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	typeref:typename:u32_t	file:
tcppassiveopens	lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	typeref:typename:u32_t	file:
tcpretranssegs	lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	typeref:typename:u32_t	file:
term_reason	lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm	typeref:typename:char *
term_reason_len	lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm	typeref:typename:int
th_ack	lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr	typeref:typename:tcp_seq
th_dport	lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr	typeref:typename:u_short
th_flags	lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr	typeref:typename:u_char
th_off	lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr	typeref:typename:unsigned:4
th_off	lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr	typeref:typename:unsigned:4
th_seq	lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr	typeref:typename:tcp_seq
th_sport	lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr	typeref:typename:u_short
th_sum	lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr	typeref:typename:u_short
th_urp	lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr	typeref:typename:u_short
th_win	lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr	typeref:typename:u_short
th_x2	lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr	typeref:typename:unsigned:4
th_x2	lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr	typeref:typename:unsigned:4
th_x2_off	lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr	typeref:typename:u_char
thl	lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_trap_header_lengths
thread_clean	lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	typeref:typename:void	file:
thread_context	lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f	typeref:typename:int
thread_entry	lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	typeref:typename:void	file:
thread_halt	lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f	typeref:typename:void
thread_hash_size	lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon29c040a50303	file:
thread_id	lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f	typeref:typename:uint32_t
thread_id_t	lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t	typeref:typename:uint32_t
thread_init	lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f	typeref:typename:void
thread_onhalt	lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f	typeref:typename:int
thread_queue	lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	typeref:typename:void	file:
thread_wait	lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f	typeref:typename:void
thread_wakeup	lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f	typeref:typename:void
thread_wakeups_pending	lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f	typeref:typename:int
thread_yield	lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f	typeref:typename:void
threadq_init	lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f	typeref:typename:void
threadq_pop	lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f	typeref:struct:thread_context *
threadq_push	lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f	typeref:typename:void
tid	lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	typeref:typename:thread_id_t	file:
timeflag	lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	typeref:typename:s16_t	file:
timeout_cleanup	lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	typeref:typename:void	file:
timeouttime	lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state	typeref:typename:int
timeouttime	lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm	typeref:typename:int
timer	lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group	typeref:typename:u16_t
timer	lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata	typeref:typename:u8_t
timer	timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f	typeref:typename:void
timer_envid	serv.c	/^static envid_t timer_envid;$/;"	v	typeref:typename:envid_t	file:
timer_thread	serv.c	/^struct timer_thread {$/;"	s	file:
timeval	lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tmain	serv.c	/^tmain(uint32_t arg) {$/;"	f	typeref:typename:void	file:
tmo	lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon3b618764010a	typeref:struct:tcpip_msg::__anon3b618764010a::__anon3b6187640408
tmo	lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_timeouts	file:
tmr	lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	typeref:typename:u8_t	file:
tmr	lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb	typeref:typename:u32_t
tot_len	lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf	typeref:typename:u16_t
tq_first	lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_context *
tq_last	lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_context *
trap_dst	lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst[]
trap_msg	lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
tree_levels	lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node	typeref:typename:u8_t
tried_llipaddr	lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip	typeref:typename:u8_t
tries	lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp	typeref:typename:u8_t
ts	lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif	typeref:typename:u32_t
ts	lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap	typeref:typename:u32_t
tslen	lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u16_t
tslenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u8_t
tstate	lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:cstate[]
ttl	lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	typeref:typename:u32_t	file:
ttl	lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	typeref:typename:u32_t	file:
ttw	lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip	typeref:typename:u16_t
tv_sec	lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval	typeref:typename:long
tv_usec	lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval	typeref:typename:long
type	lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	typeref:typename:u16_t	file:
type	lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	typeref:typename:u16_t	file:
type	lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr	typeref:typename:u8_t
type	lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr	typeref:typename:u8_t
type	lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr	typeref:typename:u8_t
type	lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn_type
type	lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf	typeref:typename:u8_t
type	lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg_type
u16_t	lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t	typeref:typename:uint16_t
u32_t	lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t	typeref:typename:uint32_t
u64_t	lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t	typeref:typename:uint64_t
u8_t	lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t	typeref:typename:uint8_t
u_char	lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t	typeref:typename:unsigned char
u_int	lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t	typeref:typename:unsigned int
u_long	lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t	typeref:typename:unsigned long
u_short	lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t	typeref:typename:unsigned short
udp	lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:typename:const struct mib_array_node
udp	lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon1e010f7e010a	typeref:struct:udp_pcb *
udp	lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_proto
udp_bind	lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f	typeref:typename:err_t
udp_connect	lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f	typeref:typename:err_t
udp_debug_print	lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f	typeref:typename:void
udp_debug_print	lwip/include/lwip/udp.h	/^#define udp_debug_print(/;"	d
udp_disconnect	lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f	typeref:typename:void
udp_flags	lwip/include/lwip/udp.h	/^#define          udp_flags(/;"	d
udp_get_object_def	lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
udp_get_value	lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
udp_hdr	lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v	typeref:typename:const s32_t[5]
udp_init	lwip/include/lwip/udp.h	/^#define udp_init(/;"	d
udp_input	lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f	typeref:typename:void
udp_new	lwip/core/udp.c	/^udp_new(void)$/;"	f	typeref:struct:udp_pcb *
udp_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v	typeref:struct:mib_node * const[5]
udp_pcb	lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb *
udp_recv	lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f	typeref:typename:void
udp_remove	lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f	typeref:typename:void
udp_root	lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v	typeref:typename:const mib_scalar_node
udp_send	lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f	typeref:typename:err_t
udp_sendto	lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f	typeref:typename:err_t
udp_sendto_if	lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f	typeref:typename:err_t
udp_setflags	lwip/include/lwip/udp.h	/^#define          udp_setflags(/;"	d
udpentry	lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:typename:const struct mib_array_node
udpentry_get_object_def	lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	typeref:typename:void	file:
udpentry_get_value	lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	typeref:typename:void	file:
udpentry_ids	lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v	typeref:typename:const s32_t[2]
udpentry_nodes	lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v	typeref:struct:mib_node * const[2]
udpindatagrams	lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	typeref:typename:u32_t	file:
udpinerrors	lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	typeref:typename:u32_t	file:
udpnoports	lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	typeref:typename:u32_t	file:
udpoutdatagrams	lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	typeref:typename:u32_t	file:
udptable	lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v	typeref:typename:s32_t
udptable_node	lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node *
umain	serv.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	testinput.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	testoutput.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
unacked	lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_seg *
unicast_query	lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp	typeref:typename:STAT_COUNTER
unit	lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state	typeref:typename:int
unit	lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm	typeref:typename:int
unit	lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	typeref:typename:int	file:
unsent	lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_seg *
unused	lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr	typeref:typename:u32_t
unused	lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr	typeref:typename:u32_t
up	lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state /;"	m	struct:fsm_callbacks	typeref:typename:void (*)(fsm *)
upap	lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v	typeref:typename:upap_state[]
upap_authpeer	lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f	typeref:typename:void
upap_authwithpeer	lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f	typeref:typename:void
upap_init	lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	typeref:typename:void	file:
upap_input	lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	typeref:typename:void	file:
upap_lowerdown	lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	typeref:typename:void	file:
upap_lowerup	lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	typeref:typename:void	file:
upap_protrej	lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	typeref:typename:void	file:
upap_rauthack	lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	typeref:typename:void	file:
upap_rauthnak	lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	typeref:typename:void	file:
upap_rauthreq	lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	typeref:typename:void	file:
upap_reqtimeout	lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	typeref:typename:void	file:
upap_sauthreq	lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	typeref:typename:void	file:
upap_setloginpasswd	lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f	typeref:typename:void
upap_sresp	lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	typeref:typename:void	file:
upap_state	lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	typeref:typename:void	file:
update_arp_entry	lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t fla/;"	f	typeref:typename:err_t	file:
us_clientstate	lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state	typeref:typename:int
us_id	lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state	typeref:typename:u_char
us_maxtransmits	lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state	typeref:typename:int
us_passwd	lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state	typeref:typename:const char *
us_passwdlen	lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state	typeref:typename:int
us_reqtimeout	lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state	typeref:typename:int
us_serverstate	lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state	typeref:typename:int
us_timeouttime	lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state	typeref:typename:int
us_transmits	lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state	typeref:typename:int
us_unit	lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state	typeref:typename:int
us_user	lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state	typeref:typename:const char *
us_userlen	lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state	typeref:typename:int
use	lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group	typeref:typename:u8_t
used	lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	typeref:typename:u8_t	file:
used	lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem	typeref:typename:STAT_COUNTER
used	lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem	typeref:typename:mem_size_t
usehostname	lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings	typeref:typename:u_int:1
usepeerdns	lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings	typeref:typename:u_int:1
user	lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings	typeref:typename:char[]
v	lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr	typeref:typename:u8_t:4
v	lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon29c040a5010a	typeref:typename:uint32_t	file:
v1_rxed	lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp	typeref:typename:STAT_COUNTER
v_len	lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def	typeref:typename:u16_t
value	lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind	typeref:typename:void *
value_len	lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind	typeref:typename:u8_t
value_type	lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind	typeref:typename:u8_t
vb_idx	lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat	typeref:typename:u8_t
vb_ptr	lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_varbind *
verlen	lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u16_t
verlen	lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u16_t
verlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths	typeref:typename:u8_t
verlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths	typeref:typename:u8_t
vjComp	lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:vjcompress	file:
vjEnabled	lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	typeref:typename:int	file:
vj_compress_init	lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f	typeref:typename:void
vj_compress_tcp	lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f	typeref:typename:u_int
vj_protocol	lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options	typeref:typename:u_short
vj_uncompress_err	lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f	typeref:typename:void
vj_uncompress_tcp	lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f	typeref:typename:int
vj_uncompress_uncomp	lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f	typeref:typename:int
vjcompress	lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anonc24b80ea010a
vjs_compressed	lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat	typeref:typename:unsigned long
vjs_compressedin	lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat	typeref:typename:unsigned long
vjs_errorin	lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat	typeref:typename:unsigned long
vjs_misses	lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat	typeref:typename:unsigned long
vjs_packets	lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat	typeref:typename:unsigned long
vjs_searches	lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat	typeref:typename:unsigned long
vjs_tossed	lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat	typeref:typename:unsigned long
vjs_uncompressedin	lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat	typeref:typename:unsigned long
vjstat	lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind	typeref:typename:u16_t
vlenlen	lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind	typeref:typename:u8_t
voidfunc	lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon440d3f14010a::__anon440d3f140308	typeref:typename:void (*)(struct netif * netif)
w	lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anonc1c0abe4010a	typeref:struct:api_msg_msg::__anonc1c0abe4010a::__anonc1c0abe40508
waiters	lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon29c040a5010a::__anon29c040a50208	typeref:typename:uint16_t	file:
whom	serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	typeref:typename:uint32_t	file:
winsaddr	lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options	typeref:typename:u32_t[2]
word	lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	typeref:typename:char[1]	file:
wordlist	lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
write	lwip/include/lwip/sockets.h	/^#define write(/;"	d
write_delayed	lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn	typeref:typename:u8_t
write_msg	lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:api_msg_msg *
write_offset	lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn	typeref:typename:int
writeset	lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	typeref:typename:fd_set *	file:
xid	lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	typeref:typename:u32_t	file:
xid	lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp	typeref:typename:u32_t
xmit	lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto	typeref:typename:STAT_COUNTER
xmit_accm	lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v	typeref:typename:ext_accm[]
xmit_idle	lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle	typeref:typename:u_short
