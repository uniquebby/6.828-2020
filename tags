!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
$(OBJDIR)/.deps	GNUmakefile	/^$(OBJDIR)\/.deps: $(foreach dir, $(OBJDIRS), $(wildcard $(OBJDIR)\/$(dir)\/*.d))$/;"	t
$(OBJDIR)/.vars.%	GNUmakefile	/^$(OBJDIR)\/.vars.%: FORCE$/;"	t
.bss	kern/kernel.ld	/^	.bss : {$/;"	S
.bss	user/user.ld	/^	.bss : {$/;"	S
.data	kern/kernel.ld	/^	.data : {$/;"	S
.data	user/user.ld	/^	.data : {$/;"	S
.gdbinit	GNUmakefile	/^.gdbinit: .gdbinit.tmpl$/;"	t
.rodata	kern/kernel.ld	/^	.rodata : {$/;"	S
.rodata	user/user.ld	/^	.rodata : {$/;"	S
.stab	kern/kernel.ld	/^	.stab : {$/;"	S
.stab	user/user.ld	/^	.stab : {$/;"	S
.stab_info	user/user.ld	/^	.stab_info 0x200000 : {$/;"	S
.stabstr	kern/kernel.ld	/^	.stabstr : {$/;"	S
.stabstr	user/user.ld	/^	.stabstr : {$/;"	S
.text	kern/kernel.ld	/^	.text : AT(0x100000) {$/;"	S
.text	user/user.ld	/^	.text : {$/;"	S
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anond42707880103
ALT	kern/console.c	/^#define ALT	/;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	/^#define ARRAYSIZE /;"	d	file:
ARRAY_SIZE	inc/types.h	/^#define ARRAY_SIZE(/;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	/^#define ASM /;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM /;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM /;"	d	file:
ASM	obj/user/badsegment.asm	/^#define ASM /;"	d	file:
ASM	obj/user/breakpoint.asm	/^#define ASM /;"	d	file:
ASM	obj/user/buggyhello.asm	/^#define ASM /;"	d	file:
ASM	obj/user/buggyhello2.asm	/^#define ASM /;"	d	file:
ASM	obj/user/cat.asm	/^#define ASM /;"	d	file:
ASM	obj/user/divzero.asm	/^#define ASM /;"	d	file:
ASM	obj/user/dumbfork.asm	/^#define ASM /;"	d	file:
ASM	obj/user/echo.asm	/^#define ASM /;"	d	file:
ASM	obj/user/evilhello.asm	/^#define ASM /;"	d	file:
ASM	obj/user/fairness.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultalloc.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultallocbad.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultbadhandler.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultdie.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultevilhandler.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultio.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultnostack.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultread.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultreadkernel.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultregs.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultwrite.asm	/^#define ASM /;"	d	file:
ASM	obj/user/faultwritekernel.asm	/^#define ASM /;"	d	file:
ASM	obj/user/forktree.asm	/^#define ASM /;"	d	file:
ASM	obj/user/hello.asm	/^#define ASM /;"	d	file:
ASM	obj/user/icode.asm	/^#define ASM /;"	d	file:
ASM	obj/user/idle.asm	/^#define ASM /;"	d	file:
ASM	obj/user/init.asm	/^#define ASM /;"	d	file:
ASM	obj/user/ls.asm	/^#define ASM /;"	d	file:
ASM	obj/user/lsfd.asm	/^#define ASM /;"	d	file:
ASM	obj/user/num.asm	/^#define ASM /;"	d	file:
ASM	obj/user/pingpong.asm	/^#define ASM /;"	d	file:
ASM	obj/user/pingpongs.asm	/^#define ASM /;"	d	file:
ASM	obj/user/primes.asm	/^#define ASM /;"	d	file:
ASM	obj/user/primespipe.asm	/^#define ASM /;"	d	file:
ASM	obj/user/sendpage.asm	/^#define ASM /;"	d	file:
ASM	obj/user/sh.asm	/^#define ASM /;"	d	file:
ASM	obj/user/softint.asm	/^#define ASM /;"	d	file:
ASM	obj/user/spawnfaultio.asm	/^#define ASM /;"	d	file:
ASM	obj/user/spawnhello.asm	/^#define ASM /;"	d	file:
ASM	obj/user/spin.asm	/^#define ASM /;"	d	file:
ASM	obj/user/stresssched.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testbss.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testfdsharing.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testfile.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testkbd.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testpipe.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testpiperace.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testpiperace2.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testpteshare.asm	/^#define ASM /;"	d	file:
ASM	obj/user/testshell.asm	/^#define ASM /;"	d	file:
ASM	obj/user/yield.asm	/^#define ASM /;"	d	file:
ASSERT	kern/lapic.c	/^	#define ASSERT /;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	/^	#define BCAST /;"	d	file:
BLKBITSIZE	inc/fs.h	/^#define BLKBITSIZE	/;"	d
BLKFILES	inc/fs.h	/^#define BLKFILES	/;"	d
BLKSECTS	fs/fs.h	/^#define BLKSECTS	/;"	d
BLKSIZE	inc/fs.h	/^#define BLKSIZE	/;"	d
BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/user/sh.asm	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN /;"	d	file:
BUFSIZ	user/sh.c	/^#define BUFSIZ /;"	d	file:
BUSY	kern/lapic.c	/^	#define BUSY /;"	d	file:
C	kern/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
CHECK	user/faultregs.c	/^#define CHECK(/;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM /;"	d	file:
CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	/^#define COM1	/;"	d	file:
COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon98e956820103
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon98e956820103
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon98e956820103
CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
CR0_PE_ON	boot/boot.S	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PE_ON	obj/boot/boot.asm	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
CTL	kern/console.c	/^#define CTL	/;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	/^	#define DEASSERT /;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	/^#define DEBUG_SPINLOCK$/;"	d
DELIVS	kern/lapic.c	/^	#define DELIVS /;"	d	file:
DEPTH	user/forktree.c	/^#define DEPTH /;"	d	file:
DISKMAP	fs/fs.h	/^#define DISKMAP	/;"	d
DISKSIZE	fs/fs.h	/^#define DISKSIZE	/;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnfaultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
ENABLE	kern/lapic.c	/^	#define ENABLE /;"	d	file:
ENVGENSHIFT	kern/env.c	/^#define ENVGENSHIFT	/;"	d	file:
ENVX	inc/env.h	/^#define ENVX(/;"	d
ENV_CREATE	kern/env.h	/^#define ENV_CREATE(/;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon773a49cd0103
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon773a49cd0103
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon773a49cd0103
ENV_PASTE3	kern/env.h	/^#define ENV_PASTE3(/;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon773a49cd0103
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon773a49cd0103
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	/^#define EOI /;"	d	file:
ERROR	kern/lapic.c	/^#define ERROR /;"	d	file:
ESR	kern/lapic.c	/^#define ESR /;"	d	file:
EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3824070e0103
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon3824070e0103
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon3824070e0103
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3824070e0103
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon3824070e0103
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3824070e0103
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon3824070e0103
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon3824070e0103
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon3824070e0103
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon3824070e0103
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon3824070e0103
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon3824070e0103
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3824070e0103
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3824070e0103
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3824070e0103
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	/^#define FDTABLE	/;"	d	file:
FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
FILEDATA	lib/fd.c	/^#define FILEDATA	/;"	d	file:
FILEVA	fs/serv.c	/^#define FILEVA	/;"	d	file:
FIXED	kern/lapic.c	/^	#define FIXED /;"	d	file:
FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon60b4c95d0103
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon60b4c95d0103
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon60b4c95d0103
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon60b4c95d0103
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon60b4c95d0103
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon60b4c95d0103
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon60b4c95d0103
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon60b4c95d0103
FS_MAGIC	inc/fs.h	/^#define FS_MAGIC	/;"	d
FTYPE_DIR	inc/fs.h	/^#define FTYPE_DIR	/;"	d
FTYPE_REG	inc/fs.h	/^#define FTYPE_REG	/;"	d
FVA	obj/user/testfile.asm	/^#define FVA /;"	d	file:
FVA	user/testfile.c	/^#define FVA /;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	/^#define ICRHI /;"	d	file:
ICRLO	kern/lapic.c	/^#define ICRLO /;"	d	file:
ID	kern/lapic.c	/^#define ID /;"	d	file:
IDE_BSY	fs/ide.c	/^#define IDE_BSY	/;"	d	file:
IDE_DF	fs/ide.c	/^#define IDE_DF	/;"	d	file:
IDE_DRDY	fs/ide.c	/^#define IDE_DRDY	/;"	d	file:
IDE_ERR	fs/ide.c	/^#define IDE_ERR	/;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	/^#define INDEX2DATA(/;"	d	file:
INDEX2FD	lib/fd.c	/^#define INDEX2FD(/;"	d	file:
INIT	kern/lapic.c	/^	#define INIT /;"	d	file:
IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
IO_PIC1	kern/picirq.h	/^#define IO_PIC1	/;"	d
IO_PIC2	kern/picirq.h	/^#define IO_PIC2	/;"	d
IO_RTC	kern/kclock.h	/^#define	IO_RTC	/;"	d
IO_RTC	kern/lapic.c	/^#define IO_RTC /;"	d	file:
IRQ_ERROR	inc/trap.h	/^#define IRQ_ERROR /;"	d
IRQ_IDE	inc/trap.h	/^#define IRQ_IDE /;"	d
IRQ_KBD	inc/trap.h	/^#define IRQ_KBD /;"	d
IRQ_OFFSET	inc/trap.h	/^#define IRQ_OFFSET	/;"	d
IRQ_SERIAL	inc/trap.h	/^#define IRQ_SERIAL /;"	d
IRQ_SLAVE	kern/picirq.h	/^#define IRQ_SLAVE	/;"	d
IRQ_SPURIOUS	inc/trap.h	/^#define IRQ_SPURIOUS /;"	d
IRQ_TIMER	inc/trap.h	/^#define IRQ_TIMER /;"	d
JOS_INC_ARGS_H	inc/args.h	/^#define JOS_INC_ARGS_H$/;"	d
JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
JOS_INC_CPU_H	kern/cpu.h	/^#define JOS_INC_CPU_H$/;"	d
JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
JOS_INC_ENV_H	inc/env.h	/^#define JOS_INC_ENV_H$/;"	d
JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
JOS_INC_FD_H	inc/fd.h	/^#define JOS_INC_FD_H$/;"	d
JOS_INC_FS_H	inc/fs.h	/^#define JOS_INC_FS_H$/;"	d
JOS_INC_LIB_H	inc/lib.h	/^#define JOS_INC_LIB_H /;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
JOS_INC_PARTITION_H	inc/partition.h	/^#define JOS_INC_PARTITION_H$/;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	/^#define JOS_INC_SPINLOCK_H$/;"	d
JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	/^#define JOS_INC_SYSCALL_H$/;"	d
JOS_INC_TRAP_H	inc/trap.h	/^#define JOS_INC_TRAP_H$/;"	d
JOS_INC_TYPES_H	fs/fsformat.c	/^#define JOS_INC_TYPES_H$/;"	d	file:
JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
JOS_KERN_ENV_H	kern/env.h	/^#define JOS_KERN_ENV_H$/;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	/^#define JOS_KERN_KCLOCK_H$/;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	/^#define JOS_KERN_PICIRQ_H$/;"	d
JOS_KERN_PMAP_H	kern/pmap.h	/^#define JOS_KERN_PMAP_H$/;"	d
JOS_KERN_SCHED_H	kern/sched.h	/^#define JOS_KERN_SCHED_H$/;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	/^#define JOS_KERN_SYSCALL_H$/;"	d
JOS_KERN_TRAP_H	kern/trap.h	/^#define JOS_KERN_TRAP_H$/;"	d
JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
KADDR	kern/pmap.h	/^#define KADDR(/;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(/;"	d	file:
KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	/^	#define LEVEL /;"	d	file:
LINT0	kern/lapic.c	/^#define LINT0 /;"	d	file:
LINT1	kern/lapic.c	/^#define LINT1 /;"	d	file:
LOAD_REGS	user/faultregs.c	/^#define LOAD_REGS(/;"	d	file:
LOG2NENV	inc/env.h	/^#define LOG2NENV	/;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	/^	#define MASKED /;"	d	file:
MAX	inc/types.h	/^#define MAX(/;"	d
MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
MAXARGS	user/sh.c	/^#define MAXARGS /;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3824070e0103
MAXFD	lib/fd.c	/^#define MAXFD	/;"	d	file:
MAXFILESIZE	inc/fs.h	/^#define MAXFILESIZE	/;"	d
MAXNAMELEN	inc/fs.h	/^#define MAXNAMELEN	/;"	d
MAXOPEN	fs/serv.c	/^#define MAXOPEN	/;"	d	file:
MAXPATHLEN	inc/fs.h	/^#define MAXPATHLEN	/;"	d
MAX_DIR_ENTS	fs/fsformat.c	/^#define MAX_DIR_ENTS /;"	d	file:
MAX_IRQS	kern/picirq.h	/^#define MAX_IRQS	/;"	d
MC_NVRAM_SIZE	kern/kclock.h	/^#define	MC_NVRAM_SIZE	/;"	d
MC_NVRAM_START	kern/kclock.h	/^#define	MC_NVRAM_START	/;"	d
MIN	inc/types.h	/^#define MIN(/;"	d
MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(/;"	d	file:
MPBUS	kern/mpconfig.c	/^#define MPBUS /;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	/^#define MPENTRY_PADDR	/;"	d
MPIOAPIC	kern/mpconfig.c	/^#define MPIOAPIC /;"	d	file:
MPIOINTR	kern/mpconfig.c	/^#define MPIOINTR /;"	d	file:
MPLINTR	kern/mpconfig.c	/^#define MPLINTR /;"	d	file:
MPPROC	kern/mpconfig.c	/^#define MPPROC /;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	/^#define MPPROC_BOOT /;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS /;"	d	file:
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC /;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	/^#define NCPU /;"	d
NDIRECT	inc/fs.h	/^#define NDIRECT	/;"	d
NENV	inc/env.h	/^#define NENV	/;"	d
NINDIRECT	inc/fs.h	/^#define NINDIRECT	/;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	/^#define NO	/;"	d	file:
NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anond5c7ce3f0103
NULL	inc/stdio.h	/^#define NULL	/;"	d
NULL	inc/types.h	/^#define NULL /;"	d
NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
NVRAM_BASEHI	kern/kclock.h	/^#define NVRAM_BASEHI	/;"	d
NVRAM_BASELO	kern/kclock.h	/^#define NVRAM_BASELO	/;"	d
NVRAM_EXT16HI	kern/kclock.h	/^#define NVRAM_EXT16HI	/;"	d
NVRAM_EXT16LO	kern/kclock.h	/^#define NVRAM_EXT16LO	/;"	d
NVRAM_EXTHI	kern/kclock.h	/^#define NVRAM_EXTHI	/;"	d
NVRAM_EXTLO	kern/kclock.h	/^#define NVRAM_EXTLO	/;"	d
N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
N_PC	inc/stab.h	/^#define	N_PC	/;"	d
N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
N_SO	inc/stab.h	/^#define	N_SO	/;"	d
N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	/^	#define OTHERS /;"	d	file:
O_ACCMODE	inc/lib.h	/^#define	O_ACCMODE	/;"	d
O_CREAT	inc/lib.h	/^#define	O_CREAT	/;"	d
O_EXCL	inc/lib.h	/^#define	O_EXCL	/;"	d
O_MKDIR	inc/lib.h	/^#define O_MKDIR	/;"	d
O_RDONLY	inc/lib.h	/^#define	O_RDONLY	/;"	d
O_RDWR	inc/lib.h	/^#define	O_RDWR	/;"	d
O_TRUNC	inc/lib.h	/^#define	O_TRUNC	/;"	d
O_WRONLY	inc/lib.h	/^#define	O_WRONLY	/;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 24 20:44:37 EDT 2018$/;"	m
PADDR	kern/pmap.h	/^#define PADDR(/;"	d
PART_TOTAL	gradelib.py	/^PART_TOTAL = PART_POSSIBLE = 0$/;"	v
PCINT	kern/lapic.c	/^#define PCINT /;"	d	file:
PDX	inc/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
PERIODIC	kern/lapic.c	/^	#define PERIODIC /;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
PIPEBUFSIZ	lib/pipe.c	/^#define PIPEBUFSIZ /;"	d	file:
PROT_MODE_CSEG	boot/boot.S	/^.set PROT_MODE_CSEG, 0x8         # kernel code segment selector$/;"	d
PROT_MODE_CSEG	kern/mpentry.S	/^.set PROT_MODE_CSEG, 0x8	# kernel code segment selector$/;"	d
PROT_MODE_DSEG	boot/boot.S	/^.set PROT_MODE_DSEG, 0x10        # kernel data segment selector$/;"	d
PROT_MODE_DSEG	kern/mpentry.S	/^.set PROT_MODE_DSEG, 0x10	# kernel data segment selector$/;"	d
PROT_MODE_DSEG	obj/kern/kernel.asm	/^.set PROT_MODE_DSEG, 0x10	# kernel data segment selector$/;"	d
PTABLE_MAGIC	inc/partition.h	/^#define PTABLE_MAGIC	/;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	/^#define PTABLE_MAGIC_OFFSET	/;"	d
PTABLE_OFFSET	inc/partition.h	/^#define PTABLE_OFFSET	/;"	d
PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
PTE_COW	lib/fork.c	/^#define PTE_COW	/;"	d	file:
PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
PTE_SHARE	inc/lib.h	/^#define	PTE_SHARE	/;"	d
PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
PTX	inc/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	/^#define PTYPE_DOS_EXTENDED	/;"	d
PTYPE_JOSFS	inc/partition.h	/^#define PTYPE_JOSFS	/;"	d
PTYPE_JOS_KERN	inc/partition.h	/^#define PTYPE_JOS_KERN	/;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	/^#define PTYPE_LINUX_EXTENDED	/;"	d
PTYPE_W95_EXTENDED	inc/partition.h	/^#define PTYPE_W95_EXTENDED	/;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:std/;"	m
RELOC	kern/entry.S	/^#define	RELOC(/;"	d	file:
RELOC	kern/mpentry.S	/^#define RELOC(/;"	d	file:
ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	fs/fsformat.c	/^#define ROUNDUP(/;"	d	file:
ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	/^#define SAVE_REGS(/;"	d	file:
SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
SECTSIZE	fs/fs.h	/^#define SECTSIZE	/;"	d
SEG	inc/mmu.h	/^#define SEG(/;"	d
SEG16	inc/mmu.h	/^#define SEG16(/;"	d
SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
SRL	kern/entry.S	/^#define SRL(/;"	d	file:
STARTUP	kern/lapic.c	/^	#define STARTUP /;"	d	file:
STA_A	inc/mmu.h	/^#define STA_A	/;"	d
STA_C	inc/mmu.h	/^#define STA_C	/;"	d
STA_E	inc/mmu.h	/^#define STA_E	/;"	d
STA_R	inc/mmu.h	/^#define STA_R	/;"	d
STA_W	inc/mmu.h	/^#define STA_W	/;"	d
STA_X	inc/mmu.h	/^#define STA_X	/;"	d
STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
SVR	kern/lapic.c	/^#define SVR /;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS /;"	d	file:
SYMBOLS	user/sh.c	/^#define SYMBOLS /;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anond5c7ce3f0103
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anond5c7ce3f0103
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anond5c7ce3f0103
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anond5c7ce3f0103
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anond5c7ce3f0103
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anond5c7ce3f0103
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anond5c7ce3f0103
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anond5c7ce3f0103
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anond5c7ce3f0103
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anond5c7ce3f0103
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	/^#define TCCR /;"	d	file:
TDCR	kern/lapic.c	/^#define TDCR /;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	/^#define TICR /;"	d	file:
TIMER	kern/lapic.c	/^#define TIMER /;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TOTAL	gradelib.py	/^TOTAL = POSSIBLE = 0$/;"	v
TPR	kern/lapic.c	/^#define TPR /;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(/;"	d	file:
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(/;"	d	file:
T_ALIGN	inc/trap.h	/^#define T_ALIGN /;"	d
T_BOUND	inc/trap.h	/^#define T_BOUND /;"	d
T_BRKPT	inc/trap.h	/^#define T_BRKPT /;"	d
T_DBLFLT	inc/trap.h	/^#define T_DBLFLT /;"	d
T_DEBUG	inc/trap.h	/^#define T_DEBUG /;"	d
T_DEFAULT	inc/trap.h	/^#define T_DEFAULT /;"	d
T_DEVICE	inc/trap.h	/^#define T_DEVICE /;"	d
T_DIVIDE	inc/trap.h	/^#define T_DIVIDE /;"	d
T_FPERR	inc/trap.h	/^#define T_FPERR /;"	d
T_GPFLT	inc/trap.h	/^#define T_GPFLT /;"	d
T_ILLOP	inc/trap.h	/^#define T_ILLOP /;"	d
T_MCHK	inc/trap.h	/^#define T_MCHK /;"	d
T_NMI	inc/trap.h	/^#define T_NMI /;"	d
T_OFLOW	inc/trap.h	/^#define T_OFLOW /;"	d
T_PGFLT	inc/trap.h	/^#define T_PGFLT /;"	d
T_SEGNP	inc/trap.h	/^#define T_SEGNP /;"	d
T_SIMDERR	inc/trap.h	/^#define T_SIMDERR /;"	d
T_STACK	inc/trap.h	/^#define T_STACK /;"	d
T_SYSCALL	inc/trap.h	/^#define T_SYSCALL /;"	d
T_TSS	inc/trap.h	/^#define T_TSS /;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | aw/;"	m
USED	inc/lib.h	/^#define USED(/;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
UTEMP2	lib/spawn.c	/^#define UTEMP2	/;"	d	file:
UTEMP2USTACK	lib/spawn.c	/^#define UTEMP2USTACK(/;"	d	file:
UTEMP3	lib/spawn.c	/^#define UTEMP3	/;"	d	file:
UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	/^#define VA /;"	d	file:
VA	user/testpteshare.c	/^#define VA	/;"	d	file:
VER	kern/lapic.c	/^#define VER /;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE /;"	d	file:
WHITESPACE	user/sh.c	/^#define WHITESPACE /;"	d	file:
X1	kern/lapic.c	/^	#define X1 /;"	d	file:
_Bool	inc/types.h	/^typedef _Bool bool;$/;"	t	typeref:typename:bool
_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__STABSTR_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STABSTR_BEGIN__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_BEGIN__	user/user.ld	/^		__STABSTR_BEGIN__ = DEFINED(__STABSTR_BEGIN__) ? __STABSTR_BEGIN__ : .;$/;"	s	section:.stabstr
__STABSTR_END__	kern/kernel.ld	/^		PROVIDE(__STABSTR_END__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_END__	user/user.ld	/^		__STABSTR_END__ = DEFINED(__STABSTR_END__) ? __STABSTR_END__ : .;$/;"	s	section:.stabstr
__STAB_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STAB_BEGIN__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_BEGIN__	user/user.ld	/^		__STAB_BEGIN__ = DEFINED(__STAB_BEGIN__) ? __STAB_BEGIN__ : .;$/;"	s	section:.stab
__STAB_END__	kern/kernel.ld	/^		PROVIDE(__STAB_END__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_END__	user/user.ld	/^		__STAB_END__ = DEFINED(__STAB_END__) ? __STAB_END__ : .;$/;"	s	section:.stab
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon3824070e0103	inc/error.h	/^enum {$/;"	g
__anon60b4898e010a	inc/fd.h	/^	union {$/;"	u	struct:Fd
__anon60b4c95d0103	inc/fs.h	/^enum {$/;"	g
__anon773a49cd0103	inc/env.h	/^enum {$/;"	g
__anon98e956820103	kern/cpu.h	/^enum {$/;"	g
__anon9d6ad5280108	kern/console.c	/^static struct {$/;"	s	file:
__anoncaf80a390103	inc/types.h	/^enum { false, true };$/;"	g
__anond42707880103	kern/pmap.h	/^enum {$/;"	g
__anond5c7ce3f0103	inc/syscall.h	/^enum {$/;"	g
__anonf8d212780108	user/init.c	/^struct {$/;"	s	file:
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	typeref:typename:void
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f	typeref:typename:int
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	typeref:typename:void *
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc	typeref:typename:char[]
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	typeref:typename:physaddr_t
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	typeref:typename:void
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v	typeref:typename:void (*)(struct UTrapframe * utf)
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	typeref:typename:int	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultio.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnfaultio.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
addr	obj/fs/fs.asm	/^  addr = (void*)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/forktree.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpongs.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primespipe.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sendpage.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sh.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/spin.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/stresssched.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testfdsharing.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpipe.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace2.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpteshare.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testshell.asm	/^  addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	typeref:typename:unsigned	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
all	GNUmakefile	/^all:$/;"	t
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f	typeref:typename:void *
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f	typeref:typename:int
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
always	GNUmakefile	/^always:$/;"	t
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate	typeref:typename:int *
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f	typeref:typename:int
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f	typeref:typename:char *
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnfaultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f	typeref:typename:void
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate	typeref:typename:const char **
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnfaultio.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate	typeref:typename:const char *
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f	typeref:typename:char *
assert	inc/assert.h	/^#define assert(/;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	file:
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^  base = ROUNDDOWN(base, PGSIZE) + ROUNDUP(size, PGSIZE);$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 16;$/;"	d
base	obj/user/faultio.asm	/^			base = 8;$/;"	d
base	obj/user/faultio.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 16;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 8;$/;"	d
base	obj/user/spawnfaultio.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f	typeref:typename:void
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	typeref:typename:void	file:
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v	typeref:typename:uint32_t[]
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v	typeref:typename:const char *
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnfaultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v	typeref:typename:uint32_t *
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v	typeref:typename:uint32_t *
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f	typeref:typename:bool
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f	typeref:typename:uint32_t
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v	typeref:typename:int
bool	fs/fsformat.c	/^#define bool /;"	d	file:
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc	typeref:typename:uint8_t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	typeref:typename:void *	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	typeref:typename:void	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	typeref:typename:void	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo *
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	typeref:typename:void
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	typeref:typename:void
bss	user/init.c	/^char bss[6000];$/;"	v	typeref:typename:char[6000]
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint8_t[]	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	typeref:typename:char[256]	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	typeref:typename:char[256]	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	typeref:typename:char[]	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v	typeref:typename:char[8192]
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v	typeref:typename:char[512]
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v	typeref:typename:char[512][512]
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnfaultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int f, char *s)$/;"	f	typeref:typename:void
cga_init	kern/console.c	/^cga_init(void)$/;"	f	typeref:typename:void	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	typeref:typename:void	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnfaultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultio.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnfaultio.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	typeref:typename:uint8_t * [4]	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	typeref:typename:void	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f	typeref:typename:void
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	typeref:typename:void	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	typeref:typename:void	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	typeref:typename:void	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	typeref:typename:void	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	typeref:typename:void	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	typeref:typename:void	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f	typeref:typename:void
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	typeref:typename:physaddr_t	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	typeref:typename:uint8_t	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnfaultio.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnfaultio.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f	typeref:typename:void
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f	typeref:typename:void
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc	typeref:typename:uint8_t[3]
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc	typeref:typename:uint8_t[3]
clean	GNUmakefile	/^clean:$/;"	t
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	lib/fd.c	/^close(int fdnum)$/;"	f	typeref:typename:int
close_all	lib/fd.c	/^close_all(void)$/;"	f	typeref:typename:void
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	typeref:typename:int	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	typeref:typename:int	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnfaultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command[]	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon9d6ad5280108
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	typeref:typename:int
cons_init	kern/console.c	/^cons_init(void)$/;"	f	typeref:typename:void
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	typeref:typename:void	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	typeref:typename:void	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultio.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnfaultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnfaultio.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	typeref:typename:int	file:
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v	typeref:typename:volatile int
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:CpuInfo *
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:Env *
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	typeref:typename:uint8_t
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	typeref:typename:volatile unsigned
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	typeref:typename:void
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	typeref:typename:int
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo[]
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	typeref:typename:void
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	typeref:typename:void
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	typeref:typename:uint16_t *	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	typeref:typename:uint16_t	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate	typeref:typename:const char *
curenv	kern/env.h	/^#define curenv /;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^  curenv = e;$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultio.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnfaultio.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anonf8d212780108
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	/^#define debug /;"	d	file:
debug	lib/fd.c	/^#define debug	/;"	d	file:
debug	lib/file.c	/^#define debug /;"	d	file:
debug	lib/pipe.c	/^#define debug /;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v	typeref:typename:int
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	typeref:typename:int
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	  default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	typeref:typename:void	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	typeref:typename:const char *	file:
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev	typeref:typename:int (*)(struct Fd * fd)
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev	typeref:typename:int
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f	typeref:typename:int
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev	typeref:typename:const char *
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev	typeref:typename:ssize_t (*)(struct Fd * fd,void * buf,size_t len)
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev	typeref:typename:int (*)(struct Fd * fd,struct Stat * stat)
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev	typeref:typename:int (*)(struct Fd * fd,off_t length)
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev	typeref:typename:ssize_t (*)(struct Fd * fd,const void * buf,size_t len)
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	typeref:typename:int	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	typeref:typename:ssize_t	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	typeref:typename:int	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	typeref:typename:ssize_t	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	typeref:typename:int	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	typeref:typename:ssize_t	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	typeref:typename:int	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	typeref:typename:int	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	typeref:typename:ssize_t	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	typeref:typename:int	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	typeref:typename:ssize_t	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	typeref:typename:int	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	typeref:typename:ssize_t	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev * []	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	typeref:typename:bool	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	typeref:typename:int	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	typeref:typename:int	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f	typeref:struct:File *
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f	typeref:typename:void *
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v	typeref:typename:char *
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	typeref:typename:int	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v	typeref:typename:char **
distclean	GNUmakefile	/^distclean: realclean$/;"	t
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest	file:
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnfaultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	typeref:typename:envid_t
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f	typeref:typename:int
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	typeref:typename:int	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	typeref:typename:void
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	typeref:typename:uint8_t[12]
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	typeref:typename:uint32_t
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	typeref:typename:uint32_t
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp_ptr	obj/kern/kernel.asm	/^    ebp_ptr = (uint32_t*)ebp_ptr[0];$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
edata	kern/kernel.ld	/^		PROVIDE(edata = .);$/;"	s	section:.bss	assignment:provide
edata	user/user.ld	/^	PROVIDE(edata = .);$/;"	s	assignment:provide
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	typeref:typename:uint32_t	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	typeref:typename:uintptr_t	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	typeref:typename:uintptr_t
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:int
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnfaultio.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
end	kern/kernel.ld	/^		PROVIDE(end = .);$/;"	s	section:.bss	assignment:provide
end	user/user.ld	/^	PROVIDE(end = .);$/;"	s	assignment:provide
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	typeref:typename:uint8_t[0]	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v	typeref:typename:pde_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v	typeref:typename:pte_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v	typeref:typename:pte_t[]
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:File *	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	typeref:typename:int
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	typeref:typename:int
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f	typeref:typename:void
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	typeref:typename:void
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	typeref:typename:void
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env *	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^    env_free_list = &envs[i]; $/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	typeref:typename:envid_t
env_init	kern/env.c	/^env_init(void)$/;"	f	typeref:typename:void
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	typeref:typename:void
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	typeref:typename:void *
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	typeref:typename:envid_t
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	typeref:typename:int
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	typeref:typename:bool
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	typeref:typename:uint32_t
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env *
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	typeref:typename:envid_t
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	typeref:typename:pde_t *
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	typeref:typename:void *
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	typeref:typename:void
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	typeref:typename:void
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	typeref:typename:uint32_t
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	typeref:typename:int	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	typeref:typename:unsigned
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	typeref:typename:int
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t	typeref:typename:int32_t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultio.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnfaultio.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env *
envs	lib/entry.S	/^	.set envs, UENVS$/;"	d
envs	obj/kern/kernel.asm	/^  envs = (struct Env *)boot_alloc(bytes_to_alloc);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^  eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/kern/kernel.asm	/^    err = user_mem_check(curenv, (void*)stabs, stab_end-stabs, 0);$/;"	d
err	obj/kern/kernel.asm	/^    err = user_mem_check(curenv, (void*)stabstr, stabstr_end-stabstr, 0);$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnfaultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnfaultio.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	typeref:typename:int	file:
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	typeref:typename:const char * const[]	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	typeref:typename:uintptr_t	file:
etext	kern/kernel.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
etext	user/user.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
exit	lib/exit.c	/^exit(void)$/;"	f	typeref:typename:void
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:File *	file:
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^  f = of->o_file;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 12 f0       	mov    $0xf0121000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5e 00 00 00       	call   f010009c <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d 80 de 32 f0 00 	cmpl   $0x0,0xf032de80$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	74 0f                	je     f0100060 <_panic+0x20>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	6a 00                	push   $0x0$/;"	l
f0100056	obj/kern/kernel.asm	/^f0100056:	e8 26 09 00 00       	call   f0100981 <monitor>$/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	eb f1                	jmp    f0100051 <_panic+0x11>$/;"	l
f0100060	obj/kern/kernel.asm	/^f0100060:	89 35 80 de 32 f0    	mov    %esi,0xf032de80$/;"	l
f0100066	obj/kern/kernel.asm	/^f0100066:	fa                   	cli    $/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	fc                   	cld    $/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	e8 2a 5d 00 00       	call   f0105d9a <cpunum>$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	50                   	push   %eax$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	68 e0 63 10 f0       	push   $0xf01063e0$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	e8 35 39 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	53                   	push   %ebx$/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085:	56                   	push   %esi$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	e8 05 39 00 00       	call   f0103990 <vcprintf>$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	c7 04 24 83 76 10 f0 	movl   $0xf0107683,(%esp)$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	e8 1f 39 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	83 c4 10             	add    $0x10,%esp$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	eb b5                	jmp    f0100051 <_panic+0x11>$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c <i386_init>:$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	55                   	push   %ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	89 e5                	mov    %esp,%ebp$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	53                   	push   %ebx$/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000a3	obj/kern/kernel.asm	/^f01000a3:	e8 ca 05 00 00       	call   f0100672 <cons_init>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	68 4c 64 10 f0       	push   $0xf010644c$/;"	l
f01000b5	obj/kern/kernel.asm	/^f01000b5:	e8 fc 38 00 00       	call   f01039b6 <cprintf>$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	e8 2a 13 00 00       	call   f01013e9 <mem_init>$/;"	l
f01000bf	obj/kern/kernel.asm	/^f01000bf:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	68 4c 64 10 f0       	push   $0xf010644c$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 e5 38 00 00       	call   f01039b6 <cprintf>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 1a 31 00 00       	call   f01031f0 <env_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	e8 bd 39 00 00       	call   f0103a98 <trap_init>$/;"	l
f01000db	obj/kern/kernel.asm	/^f01000db:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000de	obj/kern/kernel.asm	/^f01000de:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	68 4c 64 10 f0       	push   $0xf010644c$/;"	l
f01000e8	obj/kern/kernel.asm	/^f01000e8:	e8 c9 38 00 00       	call   f01039b6 <cprintf>$/;"	l
f01000ed	obj/kern/kernel.asm	/^f01000ed:	e8 b1 59 00 00       	call   f0105aa3 <mp_init>$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 b9 5c 00 00       	call   f0105db0 <lapic_init>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	e8 db 37 00 00       	call   f01038d7 <pic_init>$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	c7 04 24 c0 33 12 f0 	movl   $0xf01233c0,(%esp)$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	e8 02 5f 00 00       	call   f010600a <spin_lock>$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	83 c4 10             	add    $0x10,%esp$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	83 3d 88 de 32 f0 07 	cmpl   $0x7,0xf032de88$/;"	l
f0100112	obj/kern/kernel.asm	/^f0100112:	76 27                	jbe    f010013b <i386_init+0x9f>$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	b8 06 5a 10 f0       	mov    $0xf0105a06,%eax$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	2d 8c 59 10 f0       	sub    $0xf010598c,%eax$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	50                   	push   %eax$/;"	l
f0100122	obj/kern/kernel.asm	/^f0100122:	68 8c 59 10 f0       	push   $0xf010598c$/;"	l
f0100127	obj/kern/kernel.asm	/^f0100127:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f010012c	obj/kern/kernel.asm	/^f010012c:	e8 b1 56 00 00       	call   f01057e2 <memmove>$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	bb 20 e0 32 f0       	mov    $0xf032e020,%ebx$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	eb 19                	jmp    f0100154 <i386_init+0xb8>$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0100145	obj/kern/kernel.asm	/^f0100145:	6a 5c                	push   $0x5c$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	68 67 64 10 f0       	push   $0xf0106467$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	e8 ef fe ff ff       	call   f0100040 <_panic>$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	6b 05 c4 e3 32 f0 74 	imul   $0x74,0xf032e3c4,%eax$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	05 20 e0 32 f0       	add    $0xf032e020,%eax$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	73 4d                	jae    f01001b1 <i386_init+0x115>$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	e8 31 5c 00 00       	call   f0105d9a <cpunum>$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010016c	obj/kern/kernel.asm	/^f010016c:	05 20 e0 32 f0       	add    $0xf032e020,%eax$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	74 dc                	je     f0100151 <i386_init+0xb5>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	89 d8                	mov    %ebx,%eax$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	2d 20 e0 32 f0       	sub    $0xf032e020,%eax$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	8d 80 00 70 33 f0    	lea    -0xfcc9000(%eax),%eax$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	a3 84 de 32 f0       	mov    %eax,0xf032de84$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	68 00 70 00 00       	push   $0x7000$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010019e	obj/kern/kernel.asm	/^f010019e:	50                   	push   %eax$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	e8 5e 5d 00 00       	call   f0105f02 <lapic_startap>$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	75 f8                	jne    f01001a7 <i386_init+0x10b>$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	eb a0                	jmp    f0100151 <i386_init+0xb5>$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	6a 01                	push   $0x1$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	68 04 83 29 f0       	push   $0xf0298304$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	e8 00 32 00 00       	call   f01033c0 <env_create>$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	83 c4 08             	add    $0x8,%esp$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	6a 00                	push   $0x0$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	68 6c d4 2f f0       	push   $0xf02fd46c$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	e8 f1 31 00 00       	call   f01033c0 <env_create>$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	83 c4 08             	add    $0x8,%esp$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	ff 35 48 d2 32 f0    	pushl  0xf032d248$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	68 73 64 10 f0       	push   $0xf0106473$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	e8 d4 37 00 00       	call   f01039b6 <cprintf>$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	83 c4 04             	add    $0x4,%esp$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	ff 35 48 d2 32 f0    	pushl  0xf032d248$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	e8 9e 35 00 00       	call   f010378e <env_run>$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0 <mp_main>:$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	55                   	push   %ebp$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100200	obj/kern/kernel.asm	/^f0100200:	76 52                	jbe    f0100254 <mp_main+0x64>$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	e8 8b 5b 00 00       	call   f0105d9a <cpunum>$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	50                   	push   %eax$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	68 7d 64 10 f0       	push   $0xf010647d$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	e8 99 37 00 00       	call   f01039b6 <cprintf>$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	e8 8e 5b 00 00       	call   f0105db0 <lapic_init>$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	e8 9d 2f 00 00       	call   f01031c4 <env_init_percpu>$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	e8 9e 37 00 00       	call   f01039ca <trap_init_percpu>$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	e8 69 5b 00 00       	call   f0105d9a <cpunum>$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	83 c2 04             	add    $0x4,%edx$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	f0 87 82 20 e0 32 f0 	lock xchg %eax,-0xfcd1fe0(%edx)$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	c7 04 24 c0 33 12 f0 	movl   $0xf01233c0,(%esp)$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	e8 bb 5d 00 00       	call   f010600a <spin_lock>$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	e8 af 43 00 00       	call   f0104603 <sched_yield>$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	50                   	push   %eax$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	6a 73                	push   $0x73$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	68 67 64 10 f0       	push   $0xf0106467$/;"	l
f0100261	obj/kern/kernel.asm	/^f0100261:	e8 da fd ff ff       	call   f0100040 <_panic>$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266 <_warn>:$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	55                   	push   %ebp$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	89 e5                	mov    %esp,%ebp$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	53                   	push   %ebx$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010026d	obj/kern/kernel.asm	/^f010026d:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	68 93 64 10 f0       	push   $0xf0106493$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	e8 36 37 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	53                   	push   %ebx$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	e8 04 37 00 00       	call   f0103990 <vcprintf>$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	c7 04 24 83 76 10 f0 	movl   $0xf0107683,(%esp)$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	e8 1e 37 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	83 c4 10             	add    $0x10,%esp$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	c9                   	leave  $/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	c3                   	ret    $/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0 <serial_proc_data>:$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	ec                   	in     (%dx),%al$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	a8 01                	test   $0x1,%al$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	74 0a                	je     f01002b4 <serial_proc_data+0x14>$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	ec                   	in     (%dx),%al$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	c3                   	ret    $/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	c3                   	ret    $/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba <cons_intr>:$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	55                   	push   %ebp$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	53                   	push   %ebx$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	89 c3                	mov    %eax,%ebx$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	ff d3                	call   *%ebx$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	74 29                	je     f01002f3 <cons_intr+0x39>$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	85 c0                	test   %eax,%eax$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	74 f5                	je     f01002c3 <cons_intr+0x9>$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	8b 0d 24 d2 32 f0    	mov    0xf032d224,%ecx$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	88 81 20 d0 32 f0    	mov    %al,-0xfcd2fe0(%ecx)$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	89 15 24 d2 32 f0    	mov    %edx,0xf032d224$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	eb d0                	jmp    f01002c3 <cons_intr+0x9>$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	83 c4 04             	add    $0x4,%esp$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	5b                   	pop    %ebx$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	5d                   	pop    %ebp$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	c3                   	ret    $/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9 <kbd_proc_data>:$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	55                   	push   %ebp$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	89 e5                	mov    %esp,%ebp$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	53                   	push   %ebx$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	ec                   	in     (%dx),%al$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	a8 01                	test   $0x1,%al$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	0f 84 f2 00 00 00    	je     f0100400 <kbd_proc_data+0x107>$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	a8 20                	test   $0x20,%al$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	0f 85 f1 00 00 00    	jne    f0100407 <kbd_proc_data+0x10e>$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	ec                   	in     (%dx),%al$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	89 c2                	mov    %eax,%edx$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	74 61                	je     f0100383 <kbd_proc_data+0x8a>$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	84 c0                	test   %al,%al$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	78 70                	js     f0100396 <kbd_proc_data+0x9d>$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	8b 0d 00 d0 32 f0    	mov    0xf032d000,%ecx$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	74 0e                	je     f010033f <kbd_proc_data+0x46>$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	89 c2                	mov    %eax,%edx$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	89 0d 00 d0 32 f0    	mov    %ecx,0xf032d000$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	0f b6 82 00 66 10 f0 	movzbl -0xfef9a00(%edx),%eax$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	0b 05 00 d0 32 f0    	or     0xf032d000,%eax$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	0f b6 8a 00 65 10 f0 	movzbl -0xfef9b00(%edx),%ecx$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	31 c8                	xor    %ecx,%eax$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	a3 00 d0 32 f0       	mov    %eax,0xf032d000$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	89 c1                	mov    %eax,%ecx$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	8b 0c 8d e0 64 10 f0 	mov    -0xfef9b20(,%ecx,4),%ecx$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	a8 08                	test   $0x8,%al$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	74 61                	je     f01003d5 <kbd_proc_data+0xdc>$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	89 da                	mov    %ebx,%edx$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	77 4b                	ja     f01003c9 <kbd_proc_data+0xd0>$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	eb 0c                	jmp    f010038f <kbd_proc_data+0x96>$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	83 0d 00 d0 32 f0 40 	orl    $0x40,0xf032d000$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	c9                   	leave  $/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	c3                   	ret    $/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	8b 0d 00 d0 32 f0    	mov    0xf032d000,%ecx$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	89 cb                	mov    %ecx,%ebx$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	85 db                	test   %ebx,%ebx$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	0f b6 82 00 66 10 f0 	movzbl -0xfef9a00(%edx),%eax$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	83 c8 40             	or     $0x40,%eax$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	f7 d0                	not    %eax$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	21 c8                	and    %ecx,%eax$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	a3 00 d0 32 f0       	mov    %eax,0xf032d000$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	eb c6                	jmp    f010038f <kbd_proc_data+0x96>$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	83 fa 1a             	cmp    $0x1a,%edx$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	0f 42 d9             	cmovb  %ecx,%ebx$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	f7 d0                	not    %eax$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	a8 06                	test   $0x6,%al$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	75 b4                	jne    f010038f <kbd_proc_data+0x96>$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	75 ac                	jne    f010038f <kbd_proc_data+0x96>$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	68 ad 64 10 f0       	push   $0xf01064ad$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	e8 c6 35 00 00       	call   f01039b6 <cprintf>$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	ee                   	out    %al,(%dx)$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	eb 8f                	jmp    f010038f <kbd_proc_data+0x96>$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	eb 88                	jmp    f010038f <kbd_proc_data+0x96>$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	eb 81                	jmp    f010038f <kbd_proc_data+0x96>$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e <cons_putc>:$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	55                   	push   %ebp$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	57                   	push   %edi$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	56                   	push   %esi$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	53                   	push   %ebx$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	89 c1                	mov    %eax,%ecx$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	bb 84 00 00 00       	mov    $0x84,%ebx$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	89 fa                	mov    %edi,%edx$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	ec                   	in     (%dx),%al$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	a8 20                	test   $0x20,%al$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	75 13                	jne    f0100442 <cons_putc+0x34>$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	7f 0b                	jg     f0100442 <cons_putc+0x34>$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	89 da                	mov    %ebx,%edx$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	ec                   	in     (%dx),%al$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	ec                   	in     (%dx),%al$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	ec                   	in     (%dx),%al$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	ec                   	in     (%dx),%al$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	eb e6                	jmp    f0100428 <cons_putc+0x1a>$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	88 4d e7             	mov    %cl,-0x19(%ebp)$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	89 c8                	mov    %ecx,%eax$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	ee                   	out    %al,(%dx)$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	bb 84 00 00 00       	mov    $0x84,%ebx$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	89 fa                	mov    %edi,%edx$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	ec                   	in     (%dx),%al$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	7f 0f                	jg     f0100476 <cons_putc+0x68>$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	84 c0                	test   %al,%al$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	78 0b                	js     f0100476 <cons_putc+0x68>$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	89 da                	mov    %ebx,%edx$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	ec                   	in     (%dx),%al$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	ec                   	in     (%dx),%al$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	ec                   	in     (%dx),%al$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	ec                   	in     (%dx),%al$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	eb e6                	jmp    f010045c <cons_putc+0x4e>$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	ee                   	out    %al,(%dx)$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	ee                   	out    %al,(%dx)$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	ee                   	out    %al,(%dx)$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	89 ca                	mov    %ecx,%edx$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	89 c8                	mov    %ecx,%eax$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	80 cc 07             	or     $0x7,%ah$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	85 d2                	test   %edx,%edx$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	0f 44 c8             	cmove  %eax,%ecx$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	0f 84 b0 00 00 00    	je     f010055f <cons_putc+0x151>$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	7e 73                	jle    f0100524 <cons_putc+0x116>$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	0f 84 98 00 00 00    	je     f0100552 <cons_putc+0x144>$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	0f 85 d3 00 00 00    	jne    f0100596 <cons_putc+0x188>$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	0f b7 05 28 d2 32 f0 	movzwl 0xf032d228,%eax$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	66 a3 28 d2 32 f0    	mov    %ax,0xf032d228$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	66 81 3d 28 d2 32 f0 	cmpw   $0x7cf,0xf032d228$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	cf 07 $/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	0f 87 cb 00 00 00    	ja     f01005b9 <cons_putc+0x1ab>$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	8b 0d 30 d2 32 f0    	mov    0xf032d230,%ecx$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	89 ca                	mov    %ecx,%edx$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	ee                   	out    %al,(%dx)$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	0f b7 1d 28 d2 32 f0 	movzwl 0xf032d228,%ebx$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	89 d8                	mov    %ebx,%eax$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	89 f2                	mov    %esi,%edx$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	ee                   	out    %al,(%dx)$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100514	obj/kern/kernel.asm	/^f0100514:	89 ca                	mov    %ecx,%edx$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	ee                   	out    %al,(%dx)$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	89 d8                	mov    %ebx,%eax$/;"	l
f0100519	obj/kern/kernel.asm	/^f0100519:	89 f2                	mov    %esi,%edx$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	ee                   	out    %al,(%dx)$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	5b                   	pop    %ebx$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	5e                   	pop    %esi$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	5f                   	pop    %edi$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	5d                   	pop    %ebp$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	c3                   	ret    $/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	75 6d                	jne    f0100596 <cons_putc+0x188>$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	0f b7 05 28 d2 32 f0 	movzwl 0xf032d228,%eax$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	66 85 c0             	test   %ax,%ax$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	74 b9                	je     f01004ee <cons_putc+0xe0>$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	66 a3 28 d2 32 f0    	mov    %ax,0xf032d228$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	b1 00                	mov    $0x0,%cl$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	83 c9 20             	or     $0x20,%ecx$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	8b 15 2c d2 32 f0    	mov    0xf032d22c,%edx$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	66 89 0c 42          	mov    %cx,(%edx,%eax,2)$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	eb 8d                	jmp    f01004df <cons_putc+0xd1>$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	66 83 05 28 d2 32 f0 	addw   $0x50,0xf032d228$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	50 $/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	e9 64 ff ff ff       	jmp    f01004c3 <cons_putc+0xb5>$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	e8 a5 fe ff ff       	call   f010040e <cons_putc>$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	e8 9b fe ff ff       	call   f010040e <cons_putc>$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100578	obj/kern/kernel.asm	/^f0100578:	e8 91 fe ff ff       	call   f010040e <cons_putc>$/;"	l
f010057d	obj/kern/kernel.asm	/^f010057d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	e8 87 fe ff ff       	call   f010040e <cons_putc>$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010058c	obj/kern/kernel.asm	/^f010058c:	e8 7d fe ff ff       	call   f010040e <cons_putc>$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	e9 49 ff ff ff       	jmp    f01004df <cons_putc+0xd1>$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	0f b7 05 28 d2 32 f0 	movzwl 0xf032d228,%eax$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	66 89 15 28 d2 32 f0 	mov    %dx,0xf032d228$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	8b 15 2c d2 32 f0    	mov    0xf032d22c,%edx$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	66 89 0c 42          	mov    %cx,(%edx,%eax,2)$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	e9 26 ff ff ff       	jmp    f01004df <cons_putc+0xd1>$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	a1 2c d2 32 f0       	mov    0xf032d22c,%eax$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	68 00 0f 00 00       	push   $0xf00$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	52                   	push   %edx$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	50                   	push   %eax$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	e8 0f 52 00 00       	call   f01057e2 <memmove>$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	8b 15 2c d2 32 f0    	mov    0xf032d22c,%edx$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	83 c0 02             	add    $0x2,%eax$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	39 d0                	cmp    %edx,%eax$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	75 f4                	jne    f01005e8 <cons_putc+0x1da>$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	66 83 2d 28 d2 32 f0 	subw   $0x50,0xf032d228$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	50 $/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	e9 ed fe ff ff       	jmp    f01004ee <cons_putc+0xe0>$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601 <serial_intr>:$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	80 3d 34 d2 32 f0 00 	cmpb   $0x0,0xf032d234$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	75 01                	jne    f010060b <serial_intr+0xa>$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	c3                   	ret    $/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	55                   	push   %ebp$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	89 e5                	mov    %esp,%ebp$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	b8 a0 02 10 f0       	mov    $0xf01002a0,%eax$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	e8 9f fc ff ff       	call   f01002ba <cons_intr>$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	c9                   	leave  $/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	c3                   	ret    $/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d <kbd_intr>:$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	55                   	push   %ebp$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	b8 f9 02 10 f0       	mov    $0xf01002f9,%eax$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	e8 8d fc ff ff       	call   f01002ba <cons_intr>$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	c9                   	leave  $/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	c3                   	ret    $/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f <cons_getc>:$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	55                   	push   %ebp$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	89 e5                	mov    %esp,%ebp$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	e8 c7 ff ff ff       	call   f0100601 <serial_intr>$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	e8 de ff ff ff       	call   f010061d <kbd_intr>$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	8b 15 20 d2 32 f0    	mov    0xf032d220,%edx$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	3b 15 24 d2 32 f0    	cmp    0xf032d224,%edx$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	74 1e                	je     f0100670 <cons_getc+0x41>$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	0f b6 82 20 d0 32 f0 	movzbl -0xfcd2fe0(%edx),%eax$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	89 0d 20 d2 32 f0    	mov    %ecx,0xf032d220$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	c9                   	leave  $/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	c3                   	ret    $/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672 <cons_init>:$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	55                   	push   %ebp$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	89 e5                	mov    %esp,%ebp$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	57                   	push   %edi$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	56                   	push   %esi$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	53                   	push   %ebx$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	5a a5 $/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	0f 84 de 00 00 00    	je     f010077a <cons_init+0x108>$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	c7 05 30 d2 32 f0 b4 	movl   $0x3b4,0xf032d230$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	03 00 00 $/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	8b 3d 30 d2 32 f0    	mov    0xf032d230,%edi$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	89 fa                	mov    %edi,%edx$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	ee                   	out    %al,(%dx)$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	89 ca                	mov    %ecx,%edx$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	ec                   	in     (%dx),%al$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	89 c3                	mov    %eax,%ebx$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	89 fa                	mov    %edi,%edx$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	ee                   	out    %al,(%dx)$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	89 ca                	mov    %ecx,%edx$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	ec                   	in     (%dx),%al$/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	89 35 2c d2 32 f0    	mov    %esi,0xf032d22c$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	09 d8                	or     %ebx,%eax$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	66 a3 28 d2 32 f0    	mov    %ax,0xf032d228$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	e8 35 ff ff ff       	call   f010061d <kbd_intr>$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	50                   	push   %eax$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	e8 5c 31 00 00       	call   f0103859 <irq_setmask_8259A>$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	b9 fa 03 00 00       	mov    $0x3fa,%ecx$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	89 d8                	mov    %ebx,%eax$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	89 ca                	mov    %ecx,%edx$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	ee                   	out    %al,(%dx)$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	89 fa                	mov    %edi,%edx$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	ee                   	out    %al,(%dx)$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	ee                   	out    %al,(%dx)$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	89 d8                	mov    %ebx,%eax$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	89 f2                	mov    %esi,%edx$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	ee                   	out    %al,(%dx)$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	89 fa                	mov    %edi,%edx$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	ee                   	out    %al,(%dx)$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	89 d8                	mov    %ebx,%eax$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	ee                   	out    %al,(%dx)$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	89 f2                	mov    %esi,%edx$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	ee                   	out    %al,(%dx)$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	ec                   	in     (%dx),%al$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	89 c3                	mov    %eax,%ebx$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	3c ff                	cmp    $0xff,%al$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	0f 95 05 34 d2 32 f0 	setne  0xf032d234$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	89 ca                	mov    %ecx,%edx$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	ec                   	in     (%dx),%al$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	ec                   	in     (%dx),%al$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	80 fb ff             	cmp    $0xff,%bl$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	75 2d                	jne    f0100795 <cons_init+0x123>$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	68 b9 64 10 f0       	push   $0xf01064b9$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	e8 41 32 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	eb 3c                	jmp    f01007b6 <cons_init+0x144>$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	c7 05 30 d2 32 f0 d4 	movl   $0x3d4,0xf032d230$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	03 00 00 $/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	e9 16 ff ff ff       	jmp    f01006ab <cons_init+0x39>$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	50                   	push   %eax$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	e8 af 30 00 00       	call   f0103859 <irq_setmask_8259A>$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	80 3d 34 d2 32 f0 00 	cmpb   $0x0,0xf032d234$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	74 b2                	je     f0100768 <cons_init+0xf6>$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	5b                   	pop    %ebx$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	5e                   	pop    %esi$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	5f                   	pop    %edi$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	5d                   	pop    %ebp$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	c3                   	ret    $/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be <cputchar>:$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	55                   	push   %ebp$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	e8 42 fc ff ff       	call   f010040e <cons_putc>$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	c9                   	leave  $/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	c3                   	ret    $/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce <getchar>:$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	55                   	push   %ebp$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	e8 56 fe ff ff       	call   f010062f <cons_getc>$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	85 c0                	test   %eax,%eax$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	74 f7                	je     f01007d4 <getchar+0x6>$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	c9                   	leave  $/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	c3                   	ret    $/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df <iscons>:$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	c3                   	ret    $/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5 <mon_help>:$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	55                   	push   %ebp$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	68 00 67 10 f0       	push   $0xf0106700$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	68 1e 67 10 f0       	push   $0xf010671e$/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	68 23 67 10 f0       	push   $0xf0106723$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	e8 b7 31 00 00       	call   f01039b6 <cprintf>$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	68 c0 67 10 f0       	push   $0xf01067c0$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	68 2c 67 10 f0       	push   $0xf010672c$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	68 23 67 10 f0       	push   $0xf0106723$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	e8 a0 31 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	68 e8 67 10 f0       	push   $0xf01067e8$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	68 35 67 10 f0       	push   $0xf0106735$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	68 23 67 10 f0       	push   $0xf0106723$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	e8 89 31 00 00       	call   f01039b6 <cprintf>$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	c9                   	leave  $/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	c3                   	ret    $/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834 <mon_kerninfo>:$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	55                   	push   %ebp$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	89 e5                	mov    %esp,%ebp$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	68 3f 67 10 f0       	push   $0xf010673f$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	e8 72 31 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f010084c	obj/kern/kernel.asm	/^f010084c:	68 0c 68 10 f0       	push   $0xf010680c$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	e8 60 31 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100856	obj/kern/kernel.asm	/^f0100856:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	68 34 68 10 f0       	push   $0xf0106834$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	e8 49 31 00 00       	call   f01039b6 <cprintf>$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	68 df 63 10 00       	push   $0x1063df$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	68 df 63 10 f0       	push   $0xf01063df$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	68 58 68 10 f0       	push   $0xf0106858$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	e8 32 31 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	68 00 d0 32 00       	push   $0x32d000$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	68 00 d0 32 f0       	push   $0xf032d000$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	68 7c 68 10 f0       	push   $0xf010687c$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	e8 1b 31 00 00       	call   f01039b6 <cprintf>$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	68 08 f0 36 00       	push   $0x36f008$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	68 08 f0 36 f0       	push   $0xf036f008$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	68 a0 68 10 f0       	push   $0xf01068a0$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	e8 04 31 00 00       	call   f01039b6 <cprintf>$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	b8 08 f0 36 f0       	mov    $0xf036f008,%eax$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	2d 0d fc 0f f0       	sub    $0xf00ffc0d,%eax$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	50                   	push   %eax$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	68 c4 68 10 f0       	push   $0xf01068c4$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	e8 e9 30 00 00       	call   f01039b6 <cprintf>$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	c9                   	leave  $/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	c3                   	ret    $/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4 <mon_backtrace>:$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	55                   	push   %ebp$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	56                   	push   %esi$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	53                   	push   %ebx$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	89 eb                	mov    %ebp,%ebx$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	68 58 67 10 f0       	push   $0xf0106758$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	e8 ce 30 00 00       	call   f01039b6 <cprintf>$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	8d 75 e0             	lea    -0x20(%ebp),%esi$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	eb 12                	jmp    f0100902 <mon_backtrace+0x2e>$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	68 20 69 10 f0       	push   $0xf0106920$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	e8 b9 30 00 00       	call   f01039b6 <cprintf>$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	85 db                	test   %ebx,%ebx$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	74 6f                	je     f0100975 <mon_backtrace+0xa1>$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	53                   	push   %ebx$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	68 f0 68 10 f0       	push   $0xf01068f0$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	e8 93 30 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	56                   	push   %esi$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	e8 7f 43 00 00       	call   f0104cae <debuginfo_eip>$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	85 c0                	test   %eax,%eax$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	75 ba                	jne    f01008f0 <mon_backtrace+0x1c>$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	68 6a 67 10 f0       	push   $0xf010676a$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	e8 6d 30 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	68 78 67 10 f0       	push   $0xf0106778$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	e8 5a 30 00 00       	call   f01039b6 <cprintf>$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	2b 45 f0             	sub    -0x10(%ebp),%eax$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	50                   	push   %eax$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	68 7e 67 10 f0       	push   $0xf010677e$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	e8 46 30 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	eb 8b                	jmp    f0100900 <mon_backtrace+0x2c>$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	5b                   	pop    %ebx$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	5e                   	pop    %esi$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	5d                   	pop    %ebp$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	c3                   	ret    $/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981 <monitor>:$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	55                   	push   %ebp$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	89 e5                	mov    %esp,%ebp$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	57                   	push   %edi$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	56                   	push   %esi$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	53                   	push   %ebx$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	83 ec 58             	sub    $0x58,%esp$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	68 50 69 10 f0       	push   $0xf0106950$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	e8 22 30 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	c7 04 24 74 69 10 f0 	movl   $0xf0106974,(%esp)$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	e8 16 30 00 00       	call   f01039b6 <cprintf>$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	0f 84 d9 00 00 00    	je     f0100a86 <monitor+0x105>$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	e8 d9 35 00 00       	call   f0103f91 <print_trapframe>$/;"	l
f01009b8	obj/kern/kernel.asm	/^f01009b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	e9 c6 00 00 00       	jmp    f0100a86 <monitor+0x105>$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	0f be c0             	movsbl %al,%eax$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	50                   	push   %eax$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	68 87 67 10 f0       	push   $0xf0106787$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	e8 8c 4d 00 00       	call   f010575d <strchr>$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	85 c0                	test   %eax,%eax$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	74 63                	je     f0100a3b <monitor+0xba>$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	89 f7                	mov    %esi,%edi$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	89 fe                	mov    %edi,%esi$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	84 c0                	test   %al,%al$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	75 d7                	jne    f01009c0 <monitor+0x3f>$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	00 $/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	85 f6                	test   %esi,%esi$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	0f 84 8d 00 00 00    	je     f0100a86 <monitor+0x105>$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	ff 34 85 a0 69 10 f0 	pushl  -0xfef9660(,%eax,4)$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	e8 ec 4c 00 00       	call   f01056ff <strcmp>$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	85 c0                	test   %eax,%eax$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	0f 84 8f 00 00 00    	je     f0100aad <monitor+0x12c>$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	75 d8                	jne    f01009fe <monitor+0x7d>$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	68 a9 67 10 f0       	push   $0xf01067a9$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	e8 80 2f 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	eb 4b                	jmp    f0100a86 <monitor+0x105>$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	74 a9                	je     f01009e9 <monitor+0x68>$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	74 2f                	je     f0100a74 <monitor+0xf3>$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	84 c0                	test   %al,%al$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	74 8d                	je     f01009e0 <monitor+0x5f>$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	50                   	push   %eax$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	68 87 67 10 f0       	push   $0xf0106787$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	e8 f9 4c 00 00       	call   f010575d <strchr>$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	85 c0                	test   %eax,%eax$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	0f 85 71 ff ff ff    	jne    f01009e0 <monitor+0x5f>$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	eb d8                	jmp    f0100a4c <monitor+0xcb>$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	6a 10                	push   $0x10$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	68 8c 67 10 f0       	push   $0xf010678c$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	e8 33 2f 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	68 83 67 10 f0       	push   $0xf0106783$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	e8 9a 4a 00 00       	call   f010552d <readline>$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	85 c0                	test   %eax,%eax$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	74 ea                	je     f0100a86 <monitor+0x105>$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	e9 35 ff ff ff       	jmp    f01009e2 <monitor+0x61>$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100ab6	obj/kern/kernel.asm	/^f0100ab6:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	52                   	push   %edx$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	56                   	push   %esi$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	ff 14 85 a8 69 10 f0 	call   *-0xfef9658(,%eax,4)$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	85 c0                	test   %eax,%eax$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	79 bd                	jns    f0100a86 <monitor+0x105>$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	5b                   	pop    %ebx$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	5e                   	pop    %esi$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	5f                   	pop    %edi$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	5d                   	pop    %ebp$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	c3                   	ret    $/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1 <nvram_read>:$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	55                   	push   %ebp$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	56                   	push   %esi$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	53                   	push   %ebx$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	89 c6                	mov    %eax,%esi$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	50                   	push   %eax$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	e8 4a 2d 00 00       	call   f010382b <mc146818_read>$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	e8 3d 2d 00 00       	call   f010382b <mc146818_read>$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	09 d8                	or     %ebx,%eax$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	5b                   	pop    %ebx$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	5e                   	pop    %esi$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	5d                   	pop    %ebp$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	c3                   	ret    $/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa <check_va2pa>:$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	89 d1                	mov    %edx,%ecx$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	a8 01                	test   $0x1,%al$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	74 52                	je     f0100b58 <check_va2pa+0x5e>$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	3b 0d 88 de 32 f0    	cmp    0xf032de88,%ecx$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	73 25                	jae    f0100b3d <check_va2pa+0x43>$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	89 c2                	mov    %eax,%edx$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	85 d2                	test   %edx,%edx$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	c3                   	ret    $/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	55                   	push   %ebp$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	50                   	push   %eax$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	68 94 03 00 00       	push   $0x394$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	e8 e8 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	c3                   	ret    $/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e <boot_alloc>:$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	55                   	push   %ebp$/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	53                   	push   %ebx$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	89 c2                	mov    %eax,%edx$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	83 3d 38 d2 32 f0 00 	cmpl   $0x0,0xf032d238$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	74 39                	je     f0100ba9 <boot_alloc+0x4b>$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	a1 38 d2 32 f0       	mov    0xf032d238,%eax$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	8b 0d 88 de 32 f0    	mov    0xf032de88,%ecx$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	76 35                	jbe    f0100bba <boot_alloc+0x5c>$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	8d 9c 10 00 00 00 10 	lea    0x10000000(%eax,%edx,1),%ebx$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	76 3c                	jbe    f0100bcc <boot_alloc+0x6e>$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	01 c2                	add    %eax,%edx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	89 15 38 d2 32 f0    	mov    %edx,0xf032d238$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	c9                   	leave  $/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	c3                   	ret    $/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	b8 07 00 37 f0       	mov    $0xf0370007,%eax$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	a3 38 d2 32 f0       	mov    %eax,0xf032d238$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	eb b6                	jmp    f0100b70 <boot_alloc+0x12>$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	50                   	push   %eax$/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	6a 70                	push   $0x70$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	e8 74 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	68 39 73 10 f0       	push   $0xf0107339$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	6a 71                	push   $0x71$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	e8 60 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0 <check_page_free_list>:$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	55                   	push   %ebp$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	57                   	push   %edi$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	56                   	push   %esi$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	53                   	push   %ebx$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	84 c0                	test   %al,%al$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	0f 85 77 02 00 00    	jne    f0100e68 <check_page_free_list+0x288>$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	83 3d 40 d2 32 f0 00 	cmpl   $0x0,0xf032d240$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	74 0a                	je     f0100c04 <check_page_free_list+0x24>$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	e9 bf 02 00 00       	jmp    f0100ec3 <check_page_free_list+0x2e3>$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	68 c4 69 10 f0       	push   $0xf01069c4$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	68 c7 02 00 00       	push   $0x2c7$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	e8 25 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	50                   	push   %eax$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	6a 58                	push   $0x58$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	e8 13 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	85 db                	test   %ebx,%ebx$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	74 41                	je     f0100c74 <check_page_free_list+0x94>$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	89 c2                	mov    %eax,%edx$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	39 f2                	cmp    %esi,%edx$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	73 e3                	jae    f0100c2d <check_page_free_list+0x4d>$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	89 c2                	mov    %eax,%edx$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	73 c4                	jae    f0100c1b <check_page_free_list+0x3b>$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	68 80 00 00 00       	push   $0x80$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	68 97 00 00 00       	push   $0x97$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	50                   	push   %eax$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	e8 2b 4b 00 00       	call   f010579a <memset>$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	eb b9                	jmp    f0100c2d <check_page_free_list+0x4d>$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	e8 e0 fe ff ff       	call   f0100b5e <boot_alloc>$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	8b 15 40 d2 32 f0    	mov    0xf032d240,%edx$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	8b 0d 90 de 32 f0    	mov    0xf032de90,%ecx$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	a1 88 de 32 f0       	mov    0xf032de88,%eax$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	8d 34 c1             	lea    (%ecx,%eax,8),%esi$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	e9 f9 00 00 00       	jmp    f0100d9e <check_page_free_list+0x1be>$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	68 62 73 10 f0       	push   $0xf0107362$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	68 e1 02 00 00       	push   $0x2e1$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	e8 82 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	68 83 73 10 f0       	push   $0xf0107383$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	68 e2 02 00 00       	push   $0x2e2$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	e8 69 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	68 e8 69 10 f0       	push   $0xf01069e8$/;"	l
f0100cdc	obj/kern/kernel.asm	/^f0100cdc:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	68 e3 02 00 00       	push   $0x2e3$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	e8 50 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	68 97 73 10 f0       	push   $0xf0107397$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	68 e6 02 00 00       	push   $0x2e6$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	e8 37 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	68 a8 73 10 f0       	push   $0xf01073a8$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	68 e7 02 00 00       	push   $0x2e7$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	e8 1e f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	68 1c 6a 10 f0       	push   $0xf0106a1c$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	68 e8 02 00 00       	push   $0x2e8$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	e8 05 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	68 c1 73 10 f0       	push   $0xf01073c1$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	68 e9 02 00 00       	push   $0x2e9$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	e8 ec f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	89 c3                	mov    %eax,%ebx$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	76 0f                	jbe    f0100d6d <check_page_free_list+0x18d>$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	77 17                	ja     f0100d7f <check_page_free_list+0x19f>$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	eb 2f                	jmp    f0100d9c <check_page_free_list+0x1bc>$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	50                   	push   %eax$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	6a 58                	push   $0x58$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	e8 c1 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	68 40 6a 10 f0       	push   $0xf0106a40$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	68 ea 02 00 00       	push   $0x2ea$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	e8 a8 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	8b 12                	mov    (%edx),%edx$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	85 d2                	test   %edx,%edx$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	74 74                	je     f0100e16 <check_page_free_list+0x236>$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	0f 87 fb fe ff ff    	ja     f0100ca5 <check_page_free_list+0xc5>$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	39 d6                	cmp    %edx,%esi$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	0f 86 0c ff ff ff    	jbe    f0100cbe <check_page_free_list+0xde>$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	89 d0                	mov    %edx,%eax$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	29 c8                	sub    %ecx,%eax$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	a8 07                	test   $0x7,%al$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	0f 85 19 ff ff ff    	jne    f0100cd7 <check_page_free_list+0xf7>$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	0f 84 26 ff ff ff    	je     f0100cf0 <check_page_free_list+0x110>$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	0f 84 34 ff ff ff    	je     f0100d09 <check_page_free_list+0x129>$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	0f 84 42 ff ff ff    	je     f0100d22 <check_page_free_list+0x142>$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	0f 84 50 ff ff ff    	je     f0100d3b <check_page_free_list+0x15b>$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	0f 87 5e ff ff ff    	ja     f0100d54 <check_page_free_list+0x174>$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	75 9b                	jne    f0100d98 <check_page_free_list+0x1b8>$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	68 db 73 10 f0       	push   $0xf01073db$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100e07	obj/kern/kernel.asm	/^f0100e07:	68 ec 02 00 00       	push   $0x2ec$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	e8 2a f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	85 db                	test   %ebx,%ebx$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	7e 19                	jle    f0100e36 <check_page_free_list+0x256>$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	85 ff                	test   %edi,%edi$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	7e 2e                	jle    f0100e4f <check_page_free_list+0x26f>$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	68 88 6a 10 f0       	push   $0xf0106a88$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	e8 88 2b 00 00       	call   f01039b6 <cprintf>$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	5b                   	pop    %ebx$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	5e                   	pop    %esi$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	5f                   	pop    %edi$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	5d                   	pop    %ebp$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	c3                   	ret    $/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	68 f8 73 10 f0       	push   $0xf01073f8$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	68 f4 02 00 00       	push   $0x2f4$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	e8 f1 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	68 0a 74 10 f0       	push   $0xf010740a$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	68 f5 02 00 00       	push   $0x2f5$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	e8 d8 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	a1 40 d2 32 f0       	mov    0xf032d240,%eax$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	85 c0                	test   %eax,%eax$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	0f 84 8f fd ff ff    	je     f0100c04 <check_page_free_list+0x24>$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	89 c2                	mov    %eax,%edx$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	0f 95 c2             	setne  %dl$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	85 c0                	test   %eax,%eax$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	75 dc                	jne    f0100e81 <check_page_free_list+0x2a1>$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	89 10                	mov    %edx,(%eax)$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	a3 40 d2 32 f0       	mov    %eax,0xf032d240$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	8b 1d 40 d2 32 f0    	mov    0xf032d240,%ebx$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	e9 61 fd ff ff       	jmp    f0100c2f <check_page_free_list+0x4f>$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece <page_init>:$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	55                   	push   %ebp$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	57                   	push   %edi$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	56                   	push   %esi$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	53                   	push   %ebx$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	8b 35 44 d2 32 f0    	mov    0xf032d244,%esi$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	8b 1d 40 d2 32 f0    	mov    0xf032d240,%ebx$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	eb 03                	jmp    f0100ef7 <page_init+0x29>$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	39 c6                	cmp    %eax,%esi$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	76 28                	jbe    f0100f23 <page_init+0x55>$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	74 f4                	je     f0100ef4 <page_init+0x26>$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	89 d1                	mov    %edx,%ecx$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	03 0d 90 de 32 f0    	add    0xf032de90,%ecx$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	89 d3                	mov    %edx,%ebx$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	03 1d 90 de 32 f0    	add    0xf032de90,%ebx$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	89 fa                	mov    %edi,%edx$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	eb d1                	jmp    f0100ef4 <page_init+0x26>$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	84 d2                	test   %dl,%dl$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	74 06                	je     f0100f2d <page_init+0x5f>$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	89 1d 40 d2 32 f0    	mov    %ebx,0xf032d240$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	e8 27 fc ff ff       	call   f0100b5e <boot_alloc>$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	76 1a                	jbe    f0100f58 <page_init+0x8a>$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	8b 1d 40 d2 32 f0    	mov    0xf032d240,%ebx$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	eb 39                	jmp    f0100f91 <page_init+0xc3>$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	50                   	push   %eax$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	68 5b 01 00 00       	push   $0x15b$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	e8 d3 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	89 d1                	mov    %edx,%ecx$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	03 0d 90 de 32 f0    	add    0xf032de90,%ecx$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	89 d3                	mov    %edx,%ebx$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	03 1d 90 de 32 f0    	add    0xf032de90,%ebx$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	89 f2                	mov    %esi,%edx$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	39 05 88 de 32 f0    	cmp    %eax,0xf032de88$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	77 d4                	ja     f0100f6d <page_init+0x9f>$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	84 d2                	test   %dl,%dl$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	74 06                	je     f0100fa3 <page_init+0xd5>$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	89 1d 40 d2 32 f0    	mov    %ebx,0xf032d240$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	5b                   	pop    %ebx$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	5e                   	pop    %esi$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	5f                   	pop    %edi$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	5d                   	pop    %ebp$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	c3                   	ret    $/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab <page_alloc>:$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	55                   	push   %ebp$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	53                   	push   %ebx$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	8b 1d 40 d2 32 f0    	mov    0xf032d240,%ebx$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	85 db                	test   %ebx,%ebx$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	74 13                	je     f0100fcf <page_alloc+0x24>$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	a3 40 d2 32 f0       	mov    %eax,0xf032d240$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	75 07                	jne    f0100fd6 <page_alloc+0x2b>$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	89 d8                	mov    %ebx,%eax$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	c9                   	leave  $/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	c3                   	ret    $/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	89 d8                	mov    %ebx,%eax$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	89 c2                	mov    %eax,%edx$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	73 1a                	jae    f010100b <page_alloc+0x60>$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	6a 00                	push   $0x0$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	50                   	push   %eax$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	e8 94 47 00 00       	call   f010579a <memset>$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	eb c4                	jmp    f0100fcf <page_alloc+0x24>$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	50                   	push   %eax$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	6a 58                	push   $0x58$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	e8 23 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d <page_free>:$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	55                   	push   %ebp$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	75 14                	jne    f0101041 <page_free+0x24>$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	75 0f                	jne    f0101041 <page_free+0x24>$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	8b 15 40 d2 32 f0    	mov    0xf032d240,%edx$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	89 10                	mov    %edx,(%eax)$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	a3 40 d2 32 f0       	mov    %eax,0xf032d240$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	c9                   	leave  $/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	c3                   	ret    $/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	68 ac 6a 10 f0       	push   $0xf0106aac$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	68 88 01 00 00       	push   $0x188$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	e8 e8 ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058 <page_decref>:$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	55                   	push   %ebp$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	89 e5                	mov    %esp,%ebp$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	66 85 c0             	test   %ax,%ax$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	74 02                	je     f0101073 <page_decref+0x1b>$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	c9                   	leave  $/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	c3                   	ret    $/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	52                   	push   %edx$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	e8 a1 ff ff ff       	call   f010101d <page_free>$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	eb f0                	jmp    f0101071 <page_decref+0x19>$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081 <pgdir_walk>:$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	55                   	push   %ebp$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	89 e5                	mov    %esp,%ebp$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	56                   	push   %esi$/;"	l
f0101085	obj/kern/kernel.asm	/^f0101085:	53                   	push   %ebx$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	89 f3                	mov    %esi,%ebx$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	a8 01                	test   $0x1,%al$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	75 68                	jne    f0101102 <pgdir_walk+0x81>$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	0f 84 9c 00 00 00    	je     f0101140 <pgdir_walk+0xbf>$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	6a 01                	push   $0x1$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	e8 fd fe ff ff       	call   f0100fab <page_alloc>$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	85 c0                	test   %eax,%eax$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	0f 84 8e 00 00 00    	je     f0101147 <pgdir_walk+0xc6>$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	89 c2                	mov    %eax,%edx$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	73 19                	jae    f01010f0 <pgdir_walk+0x6f>$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	89 c2                	mov    %eax,%edx$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	83 ca 07             	or     $0x7,%edx$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	89 13                	mov    %edx,(%ebx)$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	eb 34                	jmp    f0101124 <pgdir_walk+0xa3>$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	50                   	push   %eax$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	6a 58                	push   $0x58$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	e8 3e ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	89 c2                	mov    %eax,%edx$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	73 17                	jae    f010112b <pgdir_walk+0xaa>$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	5b                   	pop    %ebx$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	5e                   	pop    %esi$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	5d                   	pop    %ebp$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	c3                   	ret    $/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	50                   	push   %eax$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	68 c6 01 00 00       	push   $0x1c6$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	e8 00 ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101140	obj/kern/kernel.asm	/^f0101140:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	eb dd                	jmp    f0101124 <pgdir_walk+0xa3>$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	eb d6                	jmp    f0101124 <pgdir_walk+0xa3>$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e <boot_map_region>:$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	55                   	push   %ebp$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	57                   	push   %edi$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	56                   	push   %esi$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	53                   	push   %ebx$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	75 4f                	jne    f01011b1 <boot_map_region+0x63>$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	89 d7                	mov    %edx,%edi$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	81 e6 ff 0f 00 00    	and    $0xfff,%esi$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	75 5b                	jne    f01011ca <boot_map_region+0x7c>$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	f7 45 08 ff 0f 00 00 	testl  $0xfff,0x8(%ebp)$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	75 6b                	jne    f01011e3 <boot_map_region+0x95>$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	89 f3                	mov    %esi,%ebx$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	0f 83 8f 00 00 00    	jae    f0101215 <boot_map_region+0xc7>$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	6a 01                	push   $0x1$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	8d 04 3e             	lea    (%esi,%edi,1),%eax$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	50                   	push   %eax$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	e8 e7 fe ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	85 c0                	test   %eax,%eax$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	74 5b                	je     f01011fc <boot_map_region+0xae>$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	0b 5d 0c             	or     0xc(%ebp),%ebx$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	83 cb 01             	or     $0x1,%ebx$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	89 18                	mov    %ebx,(%eax)$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	eb c7                	jmp    f0101178 <boot_map_region+0x2a>$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	68 1b 74 10 f0       	push   $0xf010741b$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	68 dc 01 00 00       	push   $0x1dc$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	e8 76 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	68 2c 74 10 f0       	push   $0xf010742c$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	68 dd 01 00 00       	push   $0x1dd$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	e8 5d ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	68 3f 74 10 f0       	push   $0xf010743f$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	68 de 01 00 00       	push   $0x1de$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	e8 44 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	68 50 74 10 f0       	push   $0xf0107450$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	68 e1 01 00 00       	push   $0x1e1$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	e8 2b ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	5b                   	pop    %ebx$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	5e                   	pop    %esi$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	5f                   	pop    %edi$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	5d                   	pop    %ebp$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	c3                   	ret    $/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d <page_lookup>:$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	55                   	push   %ebp$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	53                   	push   %ebx$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	6a 00                	push   $0x0$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	e8 4d fe ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	85 c0                	test   %eax,%eax$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	74 3d                	je     f0101278 <page_lookup+0x5b>$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	f7 00 00 f0 ff ff    	testl  $0xfffff000,(%eax)$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	74 3c                	je     f010127f <page_lookup+0x62>$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	85 db                	test   %ebx,%ebx$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	74 02                	je     f0101249 <page_lookup+0x2c>$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	8b 00                	mov    (%eax),%eax$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	39 05 88 de 32 f0    	cmp    %eax,0xf032de88$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	76 0e                	jbe    f0101264 <page_lookup+0x47>$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	8b 15 90 de 32 f0    	mov    0xf032de90,%edx$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	c9                   	leave  $/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	c3                   	ret    $/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	68 d0 6a 10 f0       	push   $0xf0106ad0$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	6a 51                	push   $0x51$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	e8 c8 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	eb e0                	jmp    f010125f <page_lookup+0x42>$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	eb d9                	jmp    f010125f <page_lookup+0x42>$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286 <tlb_invalidate>:$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	55                   	push   %ebp$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	89 e5                	mov    %esp,%ebp$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	e8 09 4b 00 00       	call   f0105d9a <cpunum>$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	83 b8 28 e0 32 f0 00 	cmpl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	74 16                	je     f01012b3 <tlb_invalidate+0x2d>$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	e8 f8 4a 00 00       	call   f0105d9a <cpunum>$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	75 06                	jne    f01012b9 <tlb_invalidate+0x33>$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	0f 01 38             	invlpg (%eax)$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	c9                   	leave  $/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	c3                   	ret    $/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb <page_remove>:$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	55                   	push   %ebp$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	56                   	push   %esi$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	53                   	push   %ebx$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	50                   	push   %eax$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	56                   	push   %esi$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	53                   	push   %ebx$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	e8 49 ff ff ff       	call   f010121d <page_lookup>$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	85 c0                	test   %eax,%eax$/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	74 1f                	je     f01012fa <page_remove+0x3f>$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	50                   	push   %eax$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	e8 74 fd ff ff       	call   f0101058 <page_decref>$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	83 c4 08             	add    $0x8,%esp$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	56                   	push   %esi$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	53                   	push   %ebx$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	e8 8f ff ff ff       	call   f0101286 <tlb_invalidate>$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	5b                   	pop    %ebx$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	5e                   	pop    %esi$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	5d                   	pop    %ebp$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	c3                   	ret    $/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301 <page_insert>:$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	55                   	push   %ebp$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	89 e5                	mov    %esp,%ebp$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	57                   	push   %edi$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	56                   	push   %esi$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	53                   	push   %ebx$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	6a 01                	push   $0x1$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	57                   	push   %edi$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	e8 66 fd ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	85 c0                	test   %eax,%eax$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	74 41                	je     f0101363 <page_insert+0x62>$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	89 c6                	mov    %eax,%esi$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	f7 00 00 f0 ff ff    	testl  $0xfffff000,(%eax)$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	75 21                	jne    f0101352 <page_insert+0x51>$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	2b 1d 90 de 32 f0    	sub    0xf032de90,%ebx$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	0b 5d 14             	or     0x14(%ebp),%ebx$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	83 cb 01             	or     $0x1,%ebx$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	5b                   	pop    %ebx$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	5e                   	pop    %esi$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	5f                   	pop    %edi$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	5d                   	pop    %ebp$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	c3                   	ret    $/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	57                   	push   %edi$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	e8 5d ff ff ff       	call   f01012bb <page_remove>$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	eb ce                	jmp    f0101331 <page_insert+0x30>$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	eb e0                	jmp    f010134a <page_insert+0x49>$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a <mmio_map_region>:$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	55                   	push   %ebp$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	89 e5                	mov    %esp,%ebp$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	56                   	push   %esi$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	53                   	push   %ebx$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	8b 1d 00 33 12 f0    	mov    0xf0123300,%ebx$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	8d 84 0b ff 0f 00 00 	lea    0xfff(%ebx,%ecx,1),%eax$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	77 47                	ja     f01013d2 <mmio_map_region+0x68>$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	89 ce                	mov    %ecx,%esi$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	89 da                	mov    %ebx,%edx$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	6a 1a                	push   $0x1a$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01013a9	obj/kern/kernel.asm	/^f01013a9:	89 f1                	mov    %esi,%ecx$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	e8 99 fd ff ff       	call   f010114e <boot_map_region>$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	8b 0d 00 33 12 f0    	mov    0xf0123300,%ecx$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	01 f1                	add    %esi,%ecx$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	89 0d 00 33 12 f0    	mov    %ecx,0xf0123300$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	89 d8                	mov    %ebx,%eax$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	5b                   	pop    %ebx$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	5e                   	pop    %esi$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	5d                   	pop    %ebp$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	c3                   	ret    $/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	68 f0 6a 10 f0       	push   $0xf0106af0$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	68 6e 02 00 00       	push   $0x26e$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	e8 57 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9 <mem_init>:$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	55                   	push   %ebp$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	57                   	push   %edi$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	56                   	push   %esi$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	53                   	push   %ebx$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	e8 d5 f6 ff ff       	call   f0100ad1 <nvram_read>$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	89 c3                	mov    %eax,%ebx$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	e8 c9 f6 ff ff       	call   f0100ad1 <nvram_read>$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	89 c6                	mov    %eax,%esi$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	e8 bd f6 ff ff       	call   f0100ad1 <nvram_read>$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	0f 84 08 01 00 00    	je     f0101525 <mem_init+0x13c>$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	89 c2                	mov    %eax,%edx$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	89 15 88 de 32 f0    	mov    %edx,0xf032de88$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	89 da                	mov    %ebx,%edx$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	89 15 44 d2 32 f0    	mov    %edx,0xf032d244$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	89 c2                	mov    %eax,%edx$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	29 da                	sub    %ebx,%edx$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	52                   	push   %edx$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	53                   	push   %ebx$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	50                   	push   %eax$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	68 14 6b 10 f0       	push   $0xf0106b14$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	e8 6d 25 00 00       	call   f01039b6 <cprintf>$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	e8 0b f7 ff ff       	call   f0100b5e <boot_alloc>$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	a3 8c de 32 f0       	mov    %eax,0xf032de8c$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	6a 00                	push   $0x0$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	50                   	push   %eax$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	e8 32 43 00 00       	call   f010579a <memset>$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	0f 86 ba 00 00 00    	jbe    f0101535 <mem_init+0x14c>$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	8b 35 88 de 32 f0    	mov    0xf032de88,%esi$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	8d 1c f5 00 00 00 00 	lea    0x0(,%esi,8),%ebx$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	89 d8                	mov    %ebx,%eax$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	e8 c0 f6 ff ff       	call   f0100b5e <boot_alloc>$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	a3 90 de 32 f0       	mov    %eax,0xf032de90$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	c1 e6 06             	shl    $0x6,%esi$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	01 f0                	add    %esi,%eax$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	50                   	push   %eax$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	68 60 74 10 f0       	push   $0xf0107460$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	e8 00 25 00 00       	call   f01039b6 <cprintf>$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	81 c3 ff 0f 00 00    	add    $0xfff,%ebx$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	53                   	push   %ebx$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	6a 00                	push   $0x0$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	ff 35 90 de 32 f0    	pushl  0xf032de90$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	e8 c7 42 00 00       	call   f010579a <memset>$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	e8 81 f6 ff ff       	call   f0100b5e <boot_alloc>$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	a3 48 d2 32 f0       	mov    %eax,0xf032d248$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01014e5	obj/kern/kernel.asm	/^f01014e5:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	6a 00                	push   $0x0$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	50                   	push   %eax$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	e8 a8 42 00 00       	call   f010579a <memset>$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	e8 d7 f9 ff ff       	call   f0100ece <page_init>$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	e8 df f6 ff ff       	call   f0100be0 <check_page_free_list>$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	83 3d 90 de 32 f0 00 	cmpl   $0x0,0xf032de90$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	74 3d                	je     f010154a <mem_init+0x161>$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	a1 40 d2 32 f0       	mov    0xf032d240,%eax$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	85 c0                	test   %eax,%eax$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	74 44                	je     f0101561 <mem_init+0x178>$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	8b 00                	mov    (%eax),%eax$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	eb f4                	jmp    f0101519 <mem_init+0x130>$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	85 f6                	test   %esi,%esi$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	e9 ed fe ff ff       	jmp    f0101422 <mem_init+0x39>$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	50                   	push   %eax$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	68 99 00 00 00       	push   $0x99$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	e8 f6 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	68 76 74 10 f0       	push   $0xf0107476$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	68 08 03 00 00       	push   $0x308$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	e8 df ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	6a 00                	push   $0x0$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	e8 40 fa ff ff       	call   f0100fab <page_alloc>$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	89 c3                	mov    %eax,%ebx$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	85 c0                	test   %eax,%eax$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	0f 84 00 02 00 00    	je     f0101778 <mem_init+0x38f>$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	6a 00                	push   $0x0$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	e8 29 fa ff ff       	call   f0100fab <page_alloc>$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	89 c6                	mov    %eax,%esi$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	85 c0                	test   %eax,%eax$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	0f 84 02 02 00 00    	je     f0101791 <mem_init+0x3a8>$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	6a 00                	push   $0x0$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	e8 12 fa ff ff       	call   f0100fab <page_alloc>$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	89 c7                	mov    %eax,%edi$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	85 c0                	test   %eax,%eax$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	0f 84 04 02 00 00    	je     f01017aa <mem_init+0x3c1>$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	39 f3                	cmp    %esi,%ebx$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	0f 84 15 02 00 00    	je     f01017c3 <mem_init+0x3da>$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	39 c6                	cmp    %eax,%esi$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	0f 84 26 02 00 00    	je     f01017dc <mem_init+0x3f3>$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	39 c3                	cmp    %eax,%ebx$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	0f 84 1e 02 00 00    	je     f01017dc <mem_init+0x3f3>$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	8b 0d 90 de 32 f0    	mov    0xf032de90,%ecx$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	8b 15 88 de 32 f0    	mov    0xf032de88,%edx$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	89 d8                	mov    %ebx,%eax$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	29 c8                	sub    %ecx,%eax$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	39 d0                	cmp    %edx,%eax$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	0f 83 16 02 00 00    	jae    f01017f5 <mem_init+0x40c>$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	89 f0                	mov    %esi,%eax$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	29 c8                	sub    %ecx,%eax$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	39 c2                	cmp    %eax,%edx$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	0f 86 1d 02 00 00    	jbe    f010180e <mem_init+0x425>$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	89 f8                	mov    %edi,%eax$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	29 c8                	sub    %ecx,%eax$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	39 c2                	cmp    %eax,%edx$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	0f 86 24 02 00 00    	jbe    f0101827 <mem_init+0x43e>$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	a1 40 d2 32 f0       	mov    0xf032d240,%eax$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	c7 05 40 d2 32 f0 00 	movl   $0x0,0xf032d240$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	00 00 00 $/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	6a 00                	push   $0x0$/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	e8 8c f9 ff ff       	call   f0100fab <page_alloc>$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	85 c0                	test   %eax,%eax$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	0f 85 16 02 00 00    	jne    f0101840 <mem_init+0x457>$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	53                   	push   %ebx$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	e8 ea f9 ff ff       	call   f010101d <page_free>$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	e8 e2 f9 ff ff       	call   f010101d <page_free>$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	e8 da f9 ff ff       	call   f010101d <page_free>$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	e8 5c f9 ff ff       	call   f0100fab <page_alloc>$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	89 c3                	mov    %eax,%ebx$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	85 c0                	test   %eax,%eax$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	0f 84 fd 01 00 00    	je     f0101859 <mem_init+0x470>$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	6a 00                	push   $0x0$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	e8 45 f9 ff ff       	call   f0100fab <page_alloc>$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	89 c6                	mov    %eax,%esi$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	83 c4 10             	add    $0x10,%esp$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	85 c0                	test   %eax,%eax$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	0f 84 ff 01 00 00    	je     f0101872 <mem_init+0x489>$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	6a 00                	push   $0x0$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	e8 2e f9 ff ff       	call   f0100fab <page_alloc>$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	89 c7                	mov    %eax,%edi$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	85 c0                	test   %eax,%eax$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	0f 84 01 02 00 00    	je     f010188b <mem_init+0x4a2>$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	39 f3                	cmp    %esi,%ebx$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	0f 84 12 02 00 00    	je     f01018a4 <mem_init+0x4bb>$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	0f 84 23 02 00 00    	je     f01018bd <mem_init+0x4d4>$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	39 c6                	cmp    %eax,%esi$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	0f 84 1b 02 00 00    	je     f01018bd <mem_init+0x4d4>$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	6a 00                	push   $0x0$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	e8 ff f8 ff ff       	call   f0100fab <page_alloc>$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	85 c0                	test   %eax,%eax$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	0f 85 1f 02 00 00    	jne    f01018d6 <mem_init+0x4ed>$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	89 d8                	mov    %ebx,%eax$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	89 c2                	mov    %eax,%edx$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	0f 83 19 02 00 00    	jae    f01018ef <mem_init+0x506>$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	68 00 10 00 00       	push   $0x1000$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	6a 01                	push   $0x1$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	50                   	push   %eax$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	e8 af 40 00 00       	call   f010579a <memset>$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	e8 2a f9 ff ff       	call   f010101d <page_free>$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	e8 ac f8 ff ff       	call   f0100fab <page_alloc>$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	85 c0                	test   %eax,%eax$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	0f 84 f7 01 00 00    	je     f0101901 <mem_init+0x518>$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	39 c3                	cmp    %eax,%ebx$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	0f 85 08 02 00 00    	jne    f010191a <mem_init+0x531>$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	89 c2                	mov    %eax,%edx$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	0f 83 04 02 00 00    	jae    f0101933 <mem_init+0x54a>$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	2d 00 f0 ff 0f       	sub    $0xffff000,%eax$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	0f 85 02 02 00 00    	jne    f0101945 <mem_init+0x55c>$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	39 c2                	cmp    %eax,%edx$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	75 f0                	jne    f010173a <mem_init+0x351>$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	a3 40 d2 32 f0       	mov    %eax,0xf032d240$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	53                   	push   %ebx$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	e8 c2 f8 ff ff       	call   f010101d <page_free>$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	e8 ba f8 ff ff       	call   f010101d <page_free>$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	e8 b2 f8 ff ff       	call   f010101d <page_free>$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	a1 40 d2 32 f0       	mov    0xf032d240,%eax$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101773	obj/kern/kernel.asm	/^f0101773:	e9 ec 01 00 00       	jmp    f0101964 <mem_init+0x57b>$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	68 91 74 10 f0       	push   $0xf0107491$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	68 10 03 00 00       	push   $0x310$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	e8 af e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	68 a7 74 10 f0       	push   $0xf01074a7$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	68 11 03 00 00       	push   $0x311$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01017a5	obj/kern/kernel.asm	/^f01017a5:	e8 96 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	68 bd 74 10 f0       	push   $0xf01074bd$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	68 12 03 00 00       	push   $0x312$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	e8 7d e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	68 d3 74 10 f0       	push   $0xf01074d3$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	68 15 03 00 00       	push   $0x315$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	e8 64 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	68 50 6b 10 f0       	push   $0xf0106b50$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	68 16 03 00 00       	push   $0x316$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	e8 4b e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	68 e5 74 10 f0       	push   $0xf01074e5$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	68 17 03 00 00       	push   $0x317$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	e8 32 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	68 02 75 10 f0       	push   $0xf0107502$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	68 18 03 00 00       	push   $0x318$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	e8 19 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	68 1f 75 10 f0       	push   $0xf010751f$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	68 19 03 00 00       	push   $0x319$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	e8 00 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	68 3c 75 10 f0       	push   $0xf010753c$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	68 20 03 00 00       	push   $0x320$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	e8 e7 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	68 91 74 10 f0       	push   $0xf0107491$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	68 27 03 00 00       	push   $0x327$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	e8 ce e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	68 a7 74 10 f0       	push   $0xf01074a7$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	68 28 03 00 00       	push   $0x328$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	e8 b5 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	68 bd 74 10 f0       	push   $0xf01074bd$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	68 29 03 00 00       	push   $0x329$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	e8 9c e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	68 d3 74 10 f0       	push   $0xf01074d3$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	68 2b 03 00 00       	push   $0x32b$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	e8 83 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	68 50 6b 10 f0       	push   $0xf0106b50$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	68 2c 03 00 00       	push   $0x32c$/;"	l
f01018cc	obj/kern/kernel.asm	/^f01018cc:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	e8 6a e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	68 3c 75 10 f0       	push   $0xf010753c$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	68 2d 03 00 00       	push   $0x32d$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	e8 51 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	50                   	push   %eax$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	6a 58                	push   $0x58$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	e8 3f e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	68 4b 75 10 f0       	push   $0xf010754b$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	68 32 03 00 00       	push   $0x332$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	e8 26 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	68 69 75 10 f0       	push   $0xf0107569$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	68 33 03 00 00       	push   $0x333$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	e8 0d e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	50                   	push   %eax$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	6a 58                	push   $0x58$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	e8 fb e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	68 79 75 10 f0       	push   $0xf0107579$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	68 36 03 00 00       	push   $0x336$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	e8 e2 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	83 6d d4 01          	subl   $0x1,-0x2c(%ebp)$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	8b 00                	mov    (%eax),%eax$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	85 c0                	test   %eax,%eax$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	75 f6                	jne    f010195e <mem_init+0x575>$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	0f 85 6f 09 00 00    	jne    f01022e1 <mem_init+0xef8>$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	68 70 6b 10 f0       	push   $0xf0106b70$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	e8 37 20 00 00       	call   f01039b6 <cprintf>$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	e8 20 f6 ff ff       	call   f0100fab <page_alloc>$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	85 c0                	test   %eax,%eax$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	0f 84 61 09 00 00    	je     f01022fa <mem_init+0xf11>$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	6a 00                	push   $0x0$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	e8 08 f6 ff ff       	call   f0100fab <page_alloc>$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	89 c7                	mov    %eax,%edi$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	85 c0                	test   %eax,%eax$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	0f 84 63 09 00 00    	je     f0102313 <mem_init+0xf2a>$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	6a 00                	push   $0x0$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	e8 f1 f5 ff ff       	call   f0100fab <page_alloc>$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	89 c3                	mov    %eax,%ebx$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	85 c0                	test   %eax,%eax$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	0f 84 65 09 00 00    	je     f010232c <mem_init+0xf43>$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	39 7d d4             	cmp    %edi,-0x2c(%ebp)$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	0f 84 75 09 00 00    	je     f0102345 <mem_init+0xf5c>$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	0f 84 85 09 00 00    	je     f010235e <mem_init+0xf75>$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	39 c7                	cmp    %eax,%edi$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	0f 84 7d 09 00 00    	je     f010235e <mem_init+0xf75>$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	a1 40 d2 32 f0       	mov    0xf032d240,%eax$/;"	l
f01019e6	obj/kern/kernel.asm	/^f01019e6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	c7 05 40 d2 32 f0 00 	movl   $0x0,0xf032d240$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	00 00 00 $/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	6a 00                	push   $0x0$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	e8 ae f5 ff ff       	call   f0100fab <page_alloc>$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	85 c0                	test   %eax,%eax$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	0f 85 6f 09 00 00    	jne    f0102377 <mem_init+0xf8e>$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	50                   	push   %eax$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	6a 00                	push   $0x0$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	e8 01 f8 ff ff       	call   f010121d <page_lookup>$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	85 c0                	test   %eax,%eax$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	0f 85 69 09 00 00    	jne    f0102390 <mem_init+0xfa7>$/;"	l
f0101a27	obj/kern/kernel.asm	/^f0101a27:	6a 02                	push   $0x2$/;"	l
f0101a29	obj/kern/kernel.asm	/^f0101a29:	6a 00                	push   $0x0$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	57                   	push   %edi$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	e8 ca f8 ff ff       	call   f0101301 <page_insert>$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	85 c0                	test   %eax,%eax$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	0f 89 67 09 00 00    	jns    f01023a9 <mem_init+0xfc0>$/;"	l
f0101a42	obj/kern/kernel.asm	/^f0101a42:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	e8 d0 f5 ff ff       	call   f010101d <page_free>$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	6a 02                	push   $0x2$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	6a 00                	push   $0x0$/;"	l
f0101a51	obj/kern/kernel.asm	/^f0101a51:	57                   	push   %edi$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	e8 a4 f8 ff ff       	call   f0101301 <page_insert>$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	85 c0                	test   %eax,%eax$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	0f 85 5a 09 00 00    	jne    f01023c2 <mem_init+0xfd9>$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	8b 35 8c de 32 f0    	mov    0xf032de8c,%esi$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	8b 0d 90 de 32 f0    	mov    0xf032de90,%ecx$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	8b 16                	mov    (%esi),%edx$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	29 c8                	sub    %ecx,%eax$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a87	obj/kern/kernel.asm	/^f0101a87:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	39 c2                	cmp    %eax,%edx$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	0f 85 49 09 00 00    	jne    f01023db <mem_init+0xff2>$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	89 f0                	mov    %esi,%eax$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	e8 5c f0 ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	89 fa                	mov    %edi,%edx$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	39 d0                	cmp    %edx,%eax$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	0f 85 43 09 00 00    	jne    f01023f4 <mem_init+0x100b>$/;"	l
f0101ab1	obj/kern/kernel.asm	/^f0101ab1:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	0f 85 51 09 00 00    	jne    f010240d <mem_init+0x1024>$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101ac4	obj/kern/kernel.asm	/^f0101ac4:	0f 85 5c 09 00 00    	jne    f0102426 <mem_init+0x103d>$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	6a 02                	push   $0x2$/;"	l
f0101acc	obj/kern/kernel.asm	/^f0101acc:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	53                   	push   %ebx$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	56                   	push   %esi$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	e8 29 f8 ff ff       	call   f0101301 <page_insert>$/;"	l
f0101ad8	obj/kern/kernel.asm	/^f0101ad8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	85 c0                	test   %eax,%eax$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	0f 85 5c 09 00 00    	jne    f010243f <mem_init+0x1056>$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	e8 08 f0 ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	89 da                	mov    %ebx,%edx$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b02	obj/kern/kernel.asm	/^f0101b02:	0f 85 50 09 00 00    	jne    f0102458 <mem_init+0x106f>$/;"	l
f0101b08	obj/kern/kernel.asm	/^f0101b08:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	0f 85 5e 09 00 00    	jne    f0102471 <mem_init+0x1088>$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	6a 00                	push   $0x0$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	e8 8e f4 ff ff       	call   f0100fab <page_alloc>$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	85 c0                	test   %eax,%eax$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	0f 85 62 09 00 00    	jne    f010248a <mem_init+0x10a1>$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	6a 02                	push   $0x2$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	53                   	push   %ebx$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	e8 c6 f7 ff ff       	call   f0101301 <page_insert>$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	85 c0                	test   %eax,%eax$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	0f 85 5d 09 00 00    	jne    f01024a3 <mem_init+0x10ba>$/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	e8 a5 ef ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	89 da                	mov    %ebx,%edx$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	0f 85 51 09 00 00    	jne    f01024bc <mem_init+0x10d3>$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	0f 85 5f 09 00 00    	jne    f01024d5 <mem_init+0x10ec>$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b79	obj/kern/kernel.asm	/^f0101b79:	6a 00                	push   $0x0$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	e8 2b f4 ff ff       	call   f0100fab <page_alloc>$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	85 c0                	test   %eax,%eax$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	0f 85 63 09 00 00    	jne    f01024ee <mem_init+0x1105>$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	8b 15 8c de 32 f0    	mov    0xf032de8c,%edx$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	8b 02                	mov    (%edx),%eax$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	89 c1                	mov    %eax,%ecx$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	3b 0d 88 de 32 f0    	cmp    0xf032de88,%ecx$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	0f 83 5e 09 00 00    	jae    f0102507 <mem_init+0x111e>$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101bb1	obj/kern/kernel.asm	/^f0101bb1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	6a 00                	push   $0x0$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	52                   	push   %edx$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	e8 c0 f4 ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	0f 85 4a 09 00 00    	jne    f010251c <mem_init+0x1133>$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	6a 06                	push   $0x6$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	53                   	push   %ebx$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	e8 1c f7 ff ff       	call   f0101301 <page_insert>$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	85 c0                	test   %eax,%eax$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	0f 85 45 09 00 00    	jne    f0102535 <mem_init+0x114c>$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	8b 35 8c de 32 f0    	mov    0xf032de8c,%esi$/;"	l
f0101bf6	obj/kern/kernel.asm	/^f0101bf6:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	89 f0                	mov    %esi,%eax$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	e8 f8 ee ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	89 da                	mov    %ebx,%edx$/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	0f 85 36 09 00 00    	jne    f010254e <mem_init+0x1165>$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	0f 85 44 09 00 00    	jne    f0102567 <mem_init+0x117e>$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	6a 00                	push   $0x0$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	56                   	push   %esi$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	e8 4e f4 ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	0f 84 41 09 00 00    	je     f0102580 <mem_init+0x1197>$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101c44	obj/kern/kernel.asm	/^f0101c44:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	0f 84 4c 09 00 00    	je     f0102599 <mem_init+0x11b0>$/;"	l
f0101c4d	obj/kern/kernel.asm	/^f0101c4d:	6a 02                	push   $0x2$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	53                   	push   %ebx$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	50                   	push   %eax$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	e8 a6 f6 ff ff       	call   f0101301 <page_insert>$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	85 c0                	test   %eax,%eax$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	0f 85 4c 09 00 00    	jne    f01025b2 <mem_init+0x11c9>$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	6a 00                	push   $0x0$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101c76	obj/kern/kernel.asm	/^f0101c76:	e8 06 f4 ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c7e	obj/kern/kernel.asm	/^f0101c7e:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	0f 84 44 09 00 00    	je     f01025cb <mem_init+0x11e2>$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	6a 00                	push   $0x0$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	e8 e5 f3 ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101ca2	obj/kern/kernel.asm	/^f0101ca2:	0f 85 3c 09 00 00    	jne    f01025e4 <mem_init+0x11fb>$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	6a 02                	push   $0x2$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101cb8	obj/kern/kernel.asm	/^f0101cb8:	e8 44 f6 ff ff       	call   f0101301 <page_insert>$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	85 c0                	test   %eax,%eax$/;"	l
f0101cc2	obj/kern/kernel.asm	/^f0101cc2:	0f 89 35 09 00 00    	jns    f01025fd <mem_init+0x1214>$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	6a 02                	push   $0x2$/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ccf	obj/kern/kernel.asm	/^f0101ccf:	57                   	push   %edi$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	e8 26 f6 ff ff       	call   f0101301 <page_insert>$/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cde	obj/kern/kernel.asm	/^f0101cde:	85 c0                	test   %eax,%eax$/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	0f 85 30 09 00 00    	jne    f0102616 <mem_init+0x122d>$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	6a 00                	push   $0x0$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	e8 86 f3 ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	0f 85 28 09 00 00    	jne    f010262f <mem_init+0x1246>$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	e8 e1 ed ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	89 fe                	mov    %edi,%esi$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	2b 35 90 de 32 f0    	sub    0xf032de90,%esi$/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	39 f0                	cmp    %esi,%eax$/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	0f 85 19 09 00 00    	jne    f0102648 <mem_init+0x125f>$/;"	l
f0101d2f	obj/kern/kernel.asm	/^f0101d2f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101d34	obj/kern/kernel.asm	/^f0101d34:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	e8 be ed ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	39 c6                	cmp    %eax,%esi$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	0f 85 1d 09 00 00    	jne    f0102661 <mem_init+0x1278>$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	0f 85 2b 09 00 00    	jne    f010267a <mem_init+0x1291>$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	0f 85 39 09 00 00    	jne    f0102693 <mem_init+0x12aa>$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	6a 00                	push   $0x0$/;"	l
f0101d5f	obj/kern/kernel.asm	/^f0101d5f:	e8 47 f2 ff ff       	call   f0100fab <page_alloc>$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	85 c0                	test   %eax,%eax$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	0f 84 3d 09 00 00    	je     f01026ac <mem_init+0x12c3>$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	0f 85 35 09 00 00    	jne    f01026ac <mem_init+0x12c3>$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	6a 00                	push   $0x0$/;"	l
f0101d7c	obj/kern/kernel.asm	/^f0101d7c:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	e8 34 f5 ff ff       	call   f01012bb <page_remove>$/;"	l
f0101d87	obj/kern/kernel.asm	/^f0101d87:	8b 35 8c de 32 f0    	mov    0xf032de8c,%esi$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	89 f0                	mov    %esi,%eax$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	e8 61 ed ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101d9f	obj/kern/kernel.asm	/^f0101d9f:	0f 85 20 09 00 00    	jne    f01026c5 <mem_init+0x12dc>$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	89 f0                	mov    %esi,%eax$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	e8 49 ed ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	89 fa                	mov    %edi,%edx$/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	39 d0                	cmp    %edx,%eax$/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	0f 85 17 09 00 00    	jne    f01026de <mem_init+0x12f5>$/;"	l
f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101dcc	obj/kern/kernel.asm	/^f0101dcc:	0f 85 25 09 00 00    	jne    f01026f7 <mem_init+0x130e>$/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0101dd7	obj/kern/kernel.asm	/^f0101dd7:	0f 85 33 09 00 00    	jne    f0102710 <mem_init+0x1327>$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	6a 00                	push   $0x0$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	57                   	push   %edi$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	56                   	push   %esi$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	e8 16 f5 ff ff       	call   f0101301 <page_insert>$/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	85 c0                	test   %eax,%eax$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	0f 85 33 09 00 00    	jne    f0102729 <mem_init+0x1340>$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	0f 84 41 09 00 00    	je     f0102742 <mem_init+0x1359>$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	83 3f 00             	cmpl   $0x0,(%edi)$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	0f 85 51 09 00 00    	jne    f010275b <mem_init+0x1372>$/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	e8 9e f4 ff ff       	call   f01012bb <page_remove>$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	8b 35 8c de 32 f0    	mov    0xf032de8c,%esi$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	89 f0                	mov    %esi,%eax$/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	e8 cb ec ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	0f 85 39 09 00 00    	jne    f0102774 <mem_init+0x138b>$/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	89 f0                	mov    %esi,%eax$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	e8 b3 ec ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	0f 85 3d 09 00 00    	jne    f010278d <mem_init+0x13a4>$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0101e55	obj/kern/kernel.asm	/^f0101e55:	0f 85 4b 09 00 00    	jne    f01027a6 <mem_init+0x13bd>$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	0f 85 59 09 00 00    	jne    f01027bf <mem_init+0x13d6>$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	6a 00                	push   $0x0$/;"	l
f0101e6b	obj/kern/kernel.asm	/^f0101e6b:	e8 3b f1 ff ff       	call   f0100fab <page_alloc>$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	39 c7                	cmp    %eax,%edi$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	0f 85 5d 09 00 00    	jne    f01027d8 <mem_init+0x13ef>$/;"	l
f0101e7b	obj/kern/kernel.asm	/^f0101e7b:	85 c0                	test   %eax,%eax$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	0f 84 55 09 00 00    	je     f01027d8 <mem_init+0x13ef>$/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	6a 00                	push   $0x0$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	e8 1e f1 ff ff       	call   f0100fab <page_alloc>$/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e90	obj/kern/kernel.asm	/^f0101e90:	85 c0                	test   %eax,%eax$/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	0f 85 59 09 00 00    	jne    f01027f1 <mem_init+0x1408>$/;"	l
f0101e98	obj/kern/kernel.asm	/^f0101e98:	8b 0d 8c de 32 f0    	mov    0xf032de8c,%ecx$/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	8b 11                	mov    (%ecx),%edx$/;"	l
f0101ea0	obj/kern/kernel.asm	/^f0101ea0:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101eb5	obj/kern/kernel.asm	/^f0101eb5:	39 c2                	cmp    %eax,%edx$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	0f 85 4d 09 00 00    	jne    f010280a <mem_init+0x1421>$/;"	l
f0101ebd	obj/kern/kernel.asm	/^f0101ebd:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101ecb	obj/kern/kernel.asm	/^f0101ecb:	0f 85 52 09 00 00    	jne    f0102823 <mem_init+0x143a>$/;"	l
f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0101eda	obj/kern/kernel.asm	/^f0101eda:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	50                   	push   %eax$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	e8 3a f1 ff ff       	call   f010101d <page_free>$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	6a 01                	push   $0x1$/;"	l
f0101ee8	obj/kern/kernel.asm	/^f0101ee8:	68 00 10 40 00       	push   $0x401000$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	e8 89 f1 ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0101ef8	obj/kern/kernel.asm	/^f0101ef8:	89 c1                	mov    %eax,%ecx$/;"	l
f0101efa	obj/kern/kernel.asm	/^f0101efa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101f02	obj/kern/kernel.asm	/^f0101f02:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	8b 35 88 de 32 f0    	mov    0xf032de88,%esi$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	89 c2                	mov    %eax,%edx$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f1b	obj/kern/kernel.asm	/^f0101f1b:	39 f2                	cmp    %esi,%edx$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	0f 83 19 09 00 00    	jae    f010283c <mem_init+0x1453>$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	0f 85 21 09 00 00    	jne    f0102851 <mem_init+0x1468>$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0101f49	obj/kern/kernel.asm	/^f0101f49:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101f4c	obj/kern/kernel.asm	/^f0101f4c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	89 c2                	mov    %eax,%edx$/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	39 d6                	cmp    %edx,%esi$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	0f 86 0e 09 00 00    	jbe    f010286a <mem_init+0x1481>$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	68 ff 00 00 00       	push   $0xff$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	50                   	push   %eax$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	e8 26 38 00 00       	call   f010579a <memset>$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	e8 9e f0 ff ff       	call   f010101d <page_free>$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	6a 01                	push   $0x1$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	6a 00                	push   $0x0$/;"	l
f0101f86	obj/kern/kernel.asm	/^f0101f86:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0101f8c	obj/kern/kernel.asm	/^f0101f8c:	e8 f0 f0 ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	89 f0                	mov    %esi,%eax$/;"	l
f0101f93	obj/kern/kernel.asm	/^f0101f93:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	89 c2                	mov    %eax,%edx$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fa7	obj/kern/kernel.asm	/^f0101fa7:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	0f 83 c9 08 00 00    	jae    f010287c <mem_init+0x1493>$/;"	l
f0101fb3	obj/kern/kernel.asm	/^f0101fb3:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	2d 00 f0 ff 0f       	sub    $0xffff000,%eax$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	f6 02 01             	testb  $0x1,(%edx)$/;"	l
f0101fc4	obj/kern/kernel.asm	/^f0101fc4:	0f 85 c4 08 00 00    	jne    f010288e <mem_init+0x14a5>$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	83 c2 04             	add    $0x4,%edx$/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	39 c2                	cmp    %eax,%edx$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	75 f0                	jne    f0101fc1 <mem_init+0xbd8>$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101fd6	obj/kern/kernel.asm	/^f0101fd6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0101fe8	obj/kern/kernel.asm	/^f0101fe8:	89 0d 40 d2 32 f0    	mov    %ecx,0xf032d240$/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	50                   	push   %eax$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	e8 26 f0 ff ff       	call   f010101d <page_free>$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	e8 1e f0 ff ff       	call   f010101d <page_free>$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	e8 16 f0 ff ff       	call   f010101d <page_free>$/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	83 c4 08             	add    $0x8,%esp$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	68 01 10 00 00       	push   $0x1001$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	6a 00                	push   $0x0$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	e8 54 f3 ff ff       	call   f010136a <mmio_map_region>$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	89 c3                	mov    %eax,%ebx$/;"	l
f0102018	obj/kern/kernel.asm	/^f0102018:	83 c4 08             	add    $0x8,%esp$/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	6a 00                	push   $0x0$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	e8 43 f3 ff ff       	call   f010136a <mmio_map_region>$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	89 c6                	mov    %eax,%esi$/;"	l
f0102029	obj/kern/kernel.asm	/^f0102029:	8d 83 00 20 00 00    	lea    0x2000(%ebx),%eax$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	0f 86 69 08 00 00    	jbe    f01028a7 <mem_init+0x14be>$/;"	l
f010203e	obj/kern/kernel.asm	/^f010203e:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	0f 87 5e 08 00 00    	ja     f01028a7 <mem_init+0x14be>$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	8d 96 00 20 00 00    	lea    0x2000(%esi),%edx$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	0f 87 65 08 00 00    	ja     f01028c0 <mem_init+0x14d7>$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	0f 86 59 08 00 00    	jbe    f01028c0 <mem_init+0x14d7>$/;"	l
f0102067	obj/kern/kernel.asm	/^f0102067:	89 da                	mov    %ebx,%edx$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	09 f2                	or     %esi,%edx$/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	0f 85 62 08 00 00    	jne    f01028d9 <mem_init+0x14f0>$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	39 c6                	cmp    %eax,%esi$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	0f 82 73 08 00 00    	jb     f01028f2 <mem_init+0x1509>$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	8b 3d 8c de 32 f0    	mov    0xf032de8c,%edi$/;"	l
f0102085	obj/kern/kernel.asm	/^f0102085:	89 da                	mov    %ebx,%edx$/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	89 f8                	mov    %edi,%eax$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	e8 6c ea ff ff       	call   f0100afa <check_va2pa>$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	85 c0                	test   %eax,%eax$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	0f 85 75 08 00 00    	jne    f010290b <mem_init+0x1522>$/;"	l
f0102096	obj/kern/kernel.asm	/^f0102096:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	89 c2                	mov    %eax,%edx$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	89 f8                	mov    %edi,%eax$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	e8 52 ea ff ff       	call   f0100afa <check_va2pa>$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	0f 85 71 08 00 00    	jne    f0102924 <mem_init+0x153b>$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	89 f2                	mov    %esi,%edx$/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	89 f8                	mov    %edi,%eax$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	e8 3e ea ff ff       	call   f0100afa <check_va2pa>$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	85 c0                	test   %eax,%eax$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	0f 85 79 08 00 00    	jne    f010293d <mem_init+0x1554>$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	89 f8                	mov    %edi,%eax$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	e8 29 ea ff ff       	call   f0100afa <check_va2pa>$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01020d4	obj/kern/kernel.asm	/^f01020d4:	0f 85 7c 08 00 00    	jne    f0102956 <mem_init+0x156d>$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	6a 00                	push   $0x0$/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	53                   	push   %ebx$/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	57                   	push   %edi$/;"	l
f01020e1	obj/kern/kernel.asm	/^f01020e1:	e8 9b ef ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f01020e6	obj/kern/kernel.asm	/^f01020e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	0f 84 7d 08 00 00    	je     f010296f <mem_init+0x1586>$/;"	l
f01020f2	obj/kern/kernel.asm	/^f01020f2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01020f5	obj/kern/kernel.asm	/^f01020f5:	6a 00                	push   $0x0$/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7:	53                   	push   %ebx$/;"	l
f01020f8	obj/kern/kernel.asm	/^f01020f8:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	e8 7e ef ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	0f 85 79 08 00 00    	jne    f0102988 <mem_init+0x159f>$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	6a 00                	push   $0x0$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	53                   	push   %ebx$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	e8 61 ef ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102126	obj/kern/kernel.asm	/^f0102126:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102129	obj/kern/kernel.asm	/^f0102129:	6a 00                	push   $0x0$/;"	l
f010212b	obj/kern/kernel.asm	/^f010212b:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	e8 48 ef ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	6a 00                	push   $0x0$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	56                   	push   %esi$/;"	l
f0102145	obj/kern/kernel.asm	/^f0102145:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	e8 31 ef ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	c7 04 24 6c 76 10 f0 	movl   $0xf010766c,(%esp)$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	e8 54 18 00 00       	call   f01039b6 <cprintf>$/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	a1 90 de 32 f0       	mov    0xf032de90,%eax$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	83 c4 10             	add    $0x10,%esp$/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	0f 86 2c 08 00 00    	jbe    f01029a1 <mem_init+0x15b8>$/;"	l
f0102175	obj/kern/kernel.asm	/^f0102175:	8b 15 88 de 32 f0    	mov    0xf032de88,%edx$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	6a 05                	push   $0x5$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	50                   	push   %eax$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102198	obj/kern/kernel.asm	/^f0102198:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f010219d	obj/kern/kernel.asm	/^f010219d:	e8 ac ef ff ff       	call   f010114e <boot_map_region>$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	a1 48 d2 32 f0       	mov    0xf032d248,%eax$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01021af	obj/kern/kernel.asm	/^f01021af:	0f 86 01 08 00 00    	jbe    f01029b6 <mem_init+0x15cd>$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	6a 05                	push   $0x5$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	50                   	push   %eax$/;"	l
f01021c0	obj/kern/kernel.asm	/^f01021c0:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	e8 7a ef ff ff       	call   f010114e <boot_map_region>$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	b8 00 90 11 f0       	mov    $0xf0119000,%eax$/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	0f 86 e4 07 00 00    	jbe    f01029cb <mem_init+0x15e2>$/;"	l
f01021e7	obj/kern/kernel.asm	/^f01021e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	6a 03                	push   $0x3$/;"	l
f01021ec	obj/kern/kernel.asm	/^f01021ec:	68 00 90 11 00       	push   $0x119000$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01021f6	obj/kern/kernel.asm	/^f01021f6:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f01021fb	obj/kern/kernel.asm	/^f01021fb:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	e8 49 ef ff ff       	call   f010114e <boot_map_region>$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	6a 03                	push   $0x3$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	6a 00                	push   $0x0$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102211	obj/kern/kernel.asm	/^f0102211:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	e8 2e ef ff ff       	call   f010114e <boot_map_region>$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c7 45 d0 00 f0 32 f0 	movl   $0xf032f000,-0x30(%ebp)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	83 c4 10             	add    $0x10,%esp$/;"	l
f010222a	obj/kern/kernel.asm	/^f010222a:	bb 00 f0 32 f0       	mov    $0xf032f000,%ebx$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	0f 86 a0 07 00 00    	jbe    f01029e0 <mem_init+0x15f7>$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	6a 03                	push   $0x3$/;"	l
f0102245	obj/kern/kernel.asm	/^f0102245:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	50                   	push   %eax$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	89 f2                	mov    %esi,%edx$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	e8 f1 ee ff ff       	call   f010114e <boot_map_region>$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	83 c4 10             	add    $0x10,%esp$/;"	l
f010226c	obj/kern/kernel.asm	/^f010226c:	81 fb 00 f0 36 f0    	cmp    $0xf036f000,%ebx$/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	75 c0                	jne    f0102234 <mem_init+0xe4b>$/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274:	8b 3d 8c de 32 f0    	mov    0xf032de8c,%edi$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	a1 88 de 32 f0       	mov    0xf032de88,%eax$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0102282	obj/kern/kernel.asm	/^f0102282:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	8b 35 90 de 32 f0    	mov    0xf032de90,%esi$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	0f 86 72 07 00 00    	jbe    f0102a23 <mem_init+0x163a>$/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f01022b7	obj/kern/kernel.asm	/^f01022b7:	89 f8                	mov    %edi,%eax$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	e8 3c e8 ff ff       	call   f0100afa <check_va2pa>$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	0f 86 2a 07 00 00    	jbe    f01029f5 <mem_init+0x160c>$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	8d 14 0b             	lea    (%ebx,%ecx,1),%edx$/;"	l
f01022d1	obj/kern/kernel.asm	/^f01022d1:	39 d0                	cmp    %edx,%eax$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	0f 85 31 07 00 00    	jne    f0102a0a <mem_init+0x1621>$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	eb c7                	jmp    f01022a8 <mem_init+0xebf>$/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	68 83 75 10 f0       	push   $0xf0107583$/;"	l
f01022e6	obj/kern/kernel.asm	/^f01022e6:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	68 43 03 00 00       	push   $0x343$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	e8 46 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022fa	obj/kern/kernel.asm	/^f01022fa:	68 91 74 10 f0       	push   $0xf0107491$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	68 a9 03 00 00       	push   $0x3a9$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	e8 2d dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	68 a7 74 10 f0       	push   $0xf01074a7$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	68 aa 03 00 00       	push   $0x3aa$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	e8 14 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	68 bd 74 10 f0       	push   $0xf01074bd$/;"	l
f0102331	obj/kern/kernel.asm	/^f0102331:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102336	obj/kern/kernel.asm	/^f0102336:	68 ab 03 00 00       	push   $0x3ab$/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	e8 fb dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	68 d3 74 10 f0       	push   $0xf01074d3$/;"	l
f010234a	obj/kern/kernel.asm	/^f010234a:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	68 ae 03 00 00       	push   $0x3ae$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	e8 e2 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	68 50 6b 10 f0       	push   $0xf0106b50$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	68 af 03 00 00       	push   $0x3af$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102372	obj/kern/kernel.asm	/^f0102372:	e8 c9 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	68 3c 75 10 f0       	push   $0xf010753c$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	68 b6 03 00 00       	push   $0x3b6$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010238b	obj/kern/kernel.asm	/^f010238b:	e8 b0 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	68 90 6b 10 f0       	push   $0xf0106b90$/;"	l
f0102395	obj/kern/kernel.asm	/^f0102395:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010239a	obj/kern/kernel.asm	/^f010239a:	68 b9 03 00 00       	push   $0x3b9$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	e8 97 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	68 c8 6b 10 f0       	push   $0xf0106bc8$/;"	l
f01023ae	obj/kern/kernel.asm	/^f01023ae:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	68 bc 03 00 00       	push   $0x3bc$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	e8 7e dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023c2	obj/kern/kernel.asm	/^f01023c2:	68 f8 6b 10 f0       	push   $0xf0106bf8$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	68 c0 03 00 00       	push   $0x3c0$/;"	l
f01023d1	obj/kern/kernel.asm	/^f01023d1:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	e8 65 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	68 28 6c 10 f0       	push   $0xf0106c28$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	68 c1 03 00 00       	push   $0x3c1$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	e8 4c dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	68 50 6c 10 f0       	push   $0xf0106c50$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	68 c2 03 00 00       	push   $0x3c2$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	e8 33 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	68 8e 75 10 f0       	push   $0xf010758e$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	68 c3 03 00 00       	push   $0x3c3$/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102421	obj/kern/kernel.asm	/^f0102421:	e8 1a dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102426	obj/kern/kernel.asm	/^f0102426:	68 9f 75 10 f0       	push   $0xf010759f$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	68 c4 03 00 00       	push   $0x3c4$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	e8 01 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	68 80 6c 10 f0       	push   $0xf0106c80$/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102449	obj/kern/kernel.asm	/^f0102449:	68 c7 03 00 00       	push   $0x3c7$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	e8 e8 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	68 c8 03 00 00       	push   $0x3c8$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	e8 cf db ff ff       	call   f0100040 <_panic>$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	68 b0 75 10 f0       	push   $0xf01075b0$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	68 c9 03 00 00       	push   $0x3c9$/;"	l
f0102480	obj/kern/kernel.asm	/^f0102480:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	e8 b6 db ff ff       	call   f0100040 <_panic>$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	68 3c 75 10 f0       	push   $0xf010753c$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	68 cc 03 00 00       	push   $0x3cc$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	e8 9d db ff ff       	call   f0100040 <_panic>$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	68 80 6c 10 f0       	push   $0xf0106c80$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	68 cf 03 00 00       	push   $0x3cf$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	e8 84 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	68 d0 03 00 00       	push   $0x3d0$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	e8 6b db ff ff       	call   f0100040 <_panic>$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	68 b0 75 10 f0       	push   $0xf01075b0$/;"	l
f01024da	obj/kern/kernel.asm	/^f01024da:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	68 d1 03 00 00       	push   $0x3d1$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	e8 52 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	68 3c 75 10 f0       	push   $0xf010753c$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	68 d5 03 00 00       	push   $0x3d5$/;"	l
f01024fd	obj/kern/kernel.asm	/^f01024fd:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102502	obj/kern/kernel.asm	/^f0102502:	e8 39 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	50                   	push   %eax$/;"	l
f0102508	obj/kern/kernel.asm	/^f0102508:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	68 d8 03 00 00       	push   $0x3d8$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	e8 24 db ff ff       	call   f0100040 <_panic>$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	68 ec 6c 10 f0       	push   $0xf0106cec$/;"	l
f0102521	obj/kern/kernel.asm	/^f0102521:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102526	obj/kern/kernel.asm	/^f0102526:	68 d9 03 00 00       	push   $0x3d9$/;"	l
f010252b	obj/kern/kernel.asm	/^f010252b:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	e8 0b db ff ff       	call   f0100040 <_panic>$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	68 2c 6d 10 f0       	push   $0xf0106d2c$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	68 dc 03 00 00       	push   $0x3dc$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102549	obj/kern/kernel.asm	/^f0102549:	e8 f2 da ff ff       	call   f0100040 <_panic>$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	68 dd 03 00 00       	push   $0x3dd$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	e8 d9 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	68 b0 75 10 f0       	push   $0xf01075b0$/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102571	obj/kern/kernel.asm	/^f0102571:	68 de 03 00 00       	push   $0x3de$/;"	l
f0102576	obj/kern/kernel.asm	/^f0102576:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	e8 c0 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102580	obj/kern/kernel.asm	/^f0102580:	68 6c 6d 10 f0       	push   $0xf0106d6c$/;"	l
f0102585	obj/kern/kernel.asm	/^f0102585:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010258a	obj/kern/kernel.asm	/^f010258a:	68 df 03 00 00       	push   $0x3df$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	e8 a7 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	68 c1 75 10 f0       	push   $0xf01075c1$/;"	l
f010259e	obj/kern/kernel.asm	/^f010259e:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	68 e0 03 00 00       	push   $0x3e0$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	e8 8e da ff ff       	call   f0100040 <_panic>$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	68 80 6c 10 f0       	push   $0xf0106c80$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	68 e3 03 00 00       	push   $0x3e3$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01025c6	obj/kern/kernel.asm	/^f01025c6:	e8 75 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	68 a0 6d 10 f0       	push   $0xf0106da0$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	68 e4 03 00 00       	push   $0x3e4$/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	e8 5c da ff ff       	call   f0100040 <_panic>$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	68 d4 6d 10 f0       	push   $0xf0106dd4$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	68 e5 03 00 00       	push   $0x3e5$/;"	l
f01025f3	obj/kern/kernel.asm	/^f01025f3:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	e8 43 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	68 0c 6e 10 f0       	push   $0xf0106e0c$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102607	obj/kern/kernel.asm	/^f0102607:	68 e8 03 00 00       	push   $0x3e8$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	e8 2a da ff ff       	call   f0100040 <_panic>$/;"	l
f0102616	obj/kern/kernel.asm	/^f0102616:	68 44 6e 10 f0       	push   $0xf0106e44$/;"	l
f010261b	obj/kern/kernel.asm	/^f010261b:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	68 eb 03 00 00       	push   $0x3eb$/;"	l
f0102625	obj/kern/kernel.asm	/^f0102625:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	e8 11 da ff ff       	call   f0100040 <_panic>$/;"	l
f010262f	obj/kern/kernel.asm	/^f010262f:	68 d4 6d 10 f0       	push   $0xf0106dd4$/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102639	obj/kern/kernel.asm	/^f0102639:	68 ec 03 00 00       	push   $0x3ec$/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	e8 f8 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	68 80 6e 10 f0       	push   $0xf0106e80$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	e8 df d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	68 ac 6e 10 f0       	push   $0xf0106eac$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	e8 c6 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	68 d7 75 10 f0       	push   $0xf01075d7$/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102684	obj/kern/kernel.asm	/^f0102684:	68 f2 03 00 00       	push   $0x3f2$/;"	l
f0102689	obj/kern/kernel.asm	/^f0102689:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010268e	obj/kern/kernel.asm	/^f010268e:	e8 ad d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102693	obj/kern/kernel.asm	/^f0102693:	68 e8 75 10 f0       	push   $0xf01075e8$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	68 f3 03 00 00       	push   $0x3f3$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	e8 94 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	68 dc 6e 10 f0       	push   $0xf0106edc$/;"	l
f01026b1	obj/kern/kernel.asm	/^f01026b1:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	68 f6 03 00 00       	push   $0x3f6$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	e8 7b d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	68 00 6f 10 f0       	push   $0xf0106f00$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	e8 62 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	68 ac 6e 10 f0       	push   $0xf0106eac$/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	68 fb 03 00 00       	push   $0x3fb$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	e8 49 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	68 8e 75 10 f0       	push   $0xf010758e$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102701	obj/kern/kernel.asm	/^f0102701:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	e8 30 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	68 e8 75 10 f0       	push   $0xf01075e8$/;"	l
f0102715	obj/kern/kernel.asm	/^f0102715:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	e8 17 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102729	obj/kern/kernel.asm	/^f0102729:	68 24 6f 10 f0       	push   $0xf0106f24$/;"	l
f010272e	obj/kern/kernel.asm	/^f010272e:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	68 00 04 00 00       	push   $0x400$/;"	l
f0102738	obj/kern/kernel.asm	/^f0102738:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	e8 fe d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	68 f9 75 10 f0       	push   $0xf01075f9$/;"	l
f0102747	obj/kern/kernel.asm	/^f0102747:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010274c	obj/kern/kernel.asm	/^f010274c:	68 01 04 00 00       	push   $0x401$/;"	l
f0102751	obj/kern/kernel.asm	/^f0102751:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102756	obj/kern/kernel.asm	/^f0102756:	e8 e5 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	68 05 76 10 f0       	push   $0xf0107605$/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102765	obj/kern/kernel.asm	/^f0102765:	68 02 04 00 00       	push   $0x402$/;"	l
f010276a	obj/kern/kernel.asm	/^f010276a:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	e8 cc d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	68 00 6f 10 f0       	push   $0xf0106f00$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	68 06 04 00 00       	push   $0x406$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	e8 b3 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010278d	obj/kern/kernel.asm	/^f010278d:	68 5c 6f 10 f0       	push   $0xf0106f5c$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	68 07 04 00 00       	push   $0x407$/;"	l
f010279c	obj/kern/kernel.asm	/^f010279c:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	e8 9a d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	68 1a 76 10 f0       	push   $0xf010761a$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01027b0	obj/kern/kernel.asm	/^f01027b0:	68 08 04 00 00       	push   $0x408$/;"	l
f01027b5	obj/kern/kernel.asm	/^f01027b5:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01027ba	obj/kern/kernel.asm	/^f01027ba:	e8 81 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	68 e8 75 10 f0       	push   $0xf01075e8$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	68 09 04 00 00       	push   $0x409$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	e8 68 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	68 84 6f 10 f0       	push   $0xf0106f84$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	68 0c 04 00 00       	push   $0x40c$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	e8 4f d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	68 3c 75 10 f0       	push   $0xf010753c$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	68 0f 04 00 00       	push   $0x40f$/;"	l
f0102800	obj/kern/kernel.asm	/^f0102800:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102805	obj/kern/kernel.asm	/^f0102805:	e8 36 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	68 28 6c 10 f0       	push   $0xf0106c28$/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	68 12 04 00 00       	push   $0x412$/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	e8 1d d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	68 9f 75 10 f0       	push   $0xf010759f$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	68 14 04 00 00       	push   $0x414$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	e8 04 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	50                   	push   %eax$/;"	l
f010283d	obj/kern/kernel.asm	/^f010283d:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	68 1b 04 00 00       	push   $0x41b$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	e8 ef d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	68 2b 76 10 f0       	push   $0xf010762b$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	68 1c 04 00 00       	push   $0x41c$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	e8 d6 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	50                   	push   %eax$/;"	l
f010286b	obj/kern/kernel.asm	/^f010286b:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0102870	obj/kern/kernel.asm	/^f0102870:	6a 58                	push   $0x58$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	e8 c4 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010287c	obj/kern/kernel.asm	/^f010287c:	50                   	push   %eax$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	6a 58                	push   $0x58$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	e8 b2 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	68 43 76 10 f0       	push   $0xf0107643$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	68 26 04 00 00       	push   $0x426$/;"	l
f010289d	obj/kern/kernel.asm	/^f010289d:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	e8 99 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028a7	obj/kern/kernel.asm	/^f01028a7:	68 a8 6f 10 f0       	push   $0xf0106fa8$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	68 36 04 00 00       	push   $0x436$/;"	l
f01028b6	obj/kern/kernel.asm	/^f01028b6:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	e8 80 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	68 d0 6f 10 f0       	push   $0xf0106fd0$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	68 37 04 00 00       	push   $0x437$/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	e8 67 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	68 f8 6f 10 f0       	push   $0xf0106ff8$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	68 39 04 00 00       	push   $0x439$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	e8 4e d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	68 5a 76 10 f0       	push   $0xf010765a$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	68 3b 04 00 00       	push   $0x43b$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	e8 35 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010290b	obj/kern/kernel.asm	/^f010290b:	68 20 70 10 f0       	push   $0xf0107020$/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	68 3d 04 00 00       	push   $0x43d$/;"	l
f010291a	obj/kern/kernel.asm	/^f010291a:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	e8 1c d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	68 44 70 10 f0       	push   $0xf0107044$/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	68 3e 04 00 00       	push   $0x43e$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	e8 03 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	68 74 70 10 f0       	push   $0xf0107074$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102947	obj/kern/kernel.asm	/^f0102947:	68 3f 04 00 00       	push   $0x43f$/;"	l
f010294c	obj/kern/kernel.asm	/^f010294c:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	e8 ea d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102956	obj/kern/kernel.asm	/^f0102956:	68 98 70 10 f0       	push   $0xf0107098$/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	68 40 04 00 00       	push   $0x440$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	e8 d1 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	68 c4 70 10 f0       	push   $0xf01070c4$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	68 42 04 00 00       	push   $0x442$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	e8 b8 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	68 08 71 10 f0       	push   $0xf0107108$/;"	l
f010298d	obj/kern/kernel.asm	/^f010298d:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102992	obj/kern/kernel.asm	/^f0102992:	68 43 04 00 00       	push   $0x443$/;"	l
f0102997	obj/kern/kernel.asm	/^f0102997:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f010299c	obj/kern/kernel.asm	/^f010299c:	e8 9f d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	50                   	push   %eax$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f01029a7	obj/kern/kernel.asm	/^f01029a7:	68 cc 00 00 00       	push   $0xcc$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	e8 8a d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	50                   	push   %eax$/;"	l
f01029b7	obj/kern/kernel.asm	/^f01029b7:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	68 d6 00 00 00       	push   $0xd6$/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	e8 75 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029cb	obj/kern/kernel.asm	/^f01029cb:	50                   	push   %eax$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f01029d1	obj/kern/kernel.asm	/^f01029d1:	68 e3 00 00 00       	push   $0xe3$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	e8 60 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029e0	obj/kern/kernel.asm	/^f01029e0:	53                   	push   %ebx$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	68 26 01 00 00       	push   $0x126$/;"	l
f01029eb	obj/kern/kernel.asm	/^f01029eb:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	e8 4b d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	56                   	push   %esi$/;"	l
f01029f6	obj/kern/kernel.asm	/^f01029f6:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f01029fb	obj/kern/kernel.asm	/^f01029fb:	68 5b 03 00 00       	push   $0x35b$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	e8 36 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	68 3c 71 10 f0       	push   $0xf010713c$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	68 5b 03 00 00       	push   $0x35b$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102a1e	obj/kern/kernel.asm	/^f0102a1e:	e8 1d d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a23	obj/kern/kernel.asm	/^f0102a23:	a1 48 d2 32 f0       	mov    0xf032d248,%eax$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	8d b0 00 00 40 21    	lea    0x21400000(%eax),%esi$/;"	l
f0102a39	obj/kern/kernel.asm	/^f0102a39:	89 da                	mov    %ebx,%edx$/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	89 f8                	mov    %edi,%eax$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	e8 b8 e0 ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	76 3d                	jbe    f0102a88 <mem_init+0x169f>$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	75 4d                	jne    f0102a9f <mem_init+0x16b6>$/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102a58	obj/kern/kernel.asm	/^f0102a58:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f0102a5e	obj/kern/kernel.asm	/^f0102a5e:	75 d9                	jne    f0102a39 <mem_init+0x1650>$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102a6d	obj/kern/kernel.asm	/^f0102a6d:	73 62                	jae    f0102ad1 <mem_init+0x16e8>$/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	89 f8                	mov    %edi,%eax$/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	e8 7e e0 ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0102a7c	obj/kern/kernel.asm	/^f0102a7c:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	75 38                	jne    f0102ab8 <mem_init+0x16cf>$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	eb e3                	jmp    f0102a6b <mem_init+0x1682>$/;"	l
f0102a88	obj/kern/kernel.asm	/^f0102a88:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f0102a8b	obj/kern/kernel.asm	/^f0102a8b:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	68 60 03 00 00       	push   $0x360$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	e8 a1 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	68 70 71 10 f0       	push   $0xf0107170$/;"	l
f0102aa4	obj/kern/kernel.asm	/^f0102aa4:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	68 60 03 00 00       	push   $0x360$/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	e8 88 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	68 a4 71 10 f0       	push   $0xf01071a4$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	68 64 03 00 00       	push   $0x364$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	e8 6f d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	b8 00 f0 32 f0       	mov    $0xf032f000,%eax$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102adb	obj/kern/kernel.asm	/^f0102adb:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0102ade	obj/kern/kernel.asm	/^f0102ade:	89 c7                	mov    %eax,%edi$/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f0102ae3	obj/kern/kernel.asm	/^f0102ae3:	89 f3                	mov    %esi,%ebx$/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0102aed	obj/kern/kernel.asm	/^f0102aed:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	8d 86 00 80 00 00    	lea    0x8000(%esi),%eax$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	89 da                	mov    %ebx,%edx$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	e8 f7 df ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	81 ff ff ff ff ef    	cmp    $0xefffffff,%edi$/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	76 59                	jbe    f0102b64 <mem_init+0x177b>$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	8d 14 19             	lea    (%ecx,%ebx,1),%edx$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	39 d0                	cmp    %edx,%eax$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	75 66                	jne    f0102b7b <mem_init+0x1792>$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	3b 5d c8             	cmp    -0x38(%ebp),%ebx$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	75 d9                	jne    f0102af9 <mem_init+0x1710>$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	8d 9e 00 80 ff ff    	lea    -0x8000(%esi),%ebx$/;"	l
f0102b26	obj/kern/kernel.asm	/^f0102b26:	89 da                	mov    %ebx,%edx$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	e8 ca df ff ff       	call   f0100afa <check_va2pa>$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102b33	obj/kern/kernel.asm	/^f0102b33:	75 5f                	jne    f0102b94 <mem_init+0x17ab>$/;"	l
f0102b35	obj/kern/kernel.asm	/^f0102b35:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102b3b	obj/kern/kernel.asm	/^f0102b3b:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102b3d	obj/kern/kernel.asm	/^f0102b3d:	75 e7                	jne    f0102b26 <mem_init+0x173d>$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102b45	obj/kern/kernel.asm	/^f0102b45:	81 45 d0 00 80 01 00 	addl   $0x18000,-0x30(%ebp)$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	81 c7 00 80 00 00    	add    $0x8000,%edi$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	81 ff 00 f0 36 f0    	cmp    $0xf036f000,%edi$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	75 86                	jne    f0102ae0 <mem_init+0x16f7>$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102b62	obj/kern/kernel.asm	/^f0102b62:	eb 7f                	jmp    f0102be3 <mem_init+0x17fa>$/;"	l
f0102b64	obj/kern/kernel.asm	/^f0102b64:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f0102b6c	obj/kern/kernel.asm	/^f0102b6c:	68 6c 03 00 00       	push   $0x36c$/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102b76	obj/kern/kernel.asm	/^f0102b76:	e8 c5 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	68 cc 71 10 f0       	push   $0xf01071cc$/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	68 6c 03 00 00       	push   $0x36c$/;"	l
f0102b8a	obj/kern/kernel.asm	/^f0102b8a:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	e8 ac d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	68 14 72 10 f0       	push   $0xf0107214$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	68 6e 03 00 00       	push   $0x36e$/;"	l
f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	e8 93 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	75 48                	jne    f0102bfb <mem_init+0x1812>$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	68 85 76 10 f0       	push   $0xf0107685$/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	68 79 03 00 00       	push   $0x379$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102bc7	obj/kern/kernel.asm	/^f0102bc7:	e8 74 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	74 2c                	je     f0102c00 <mem_init+0x1817>$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	74 40                	je     f0102c19 <mem_init+0x1830>$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	74 68                	je     f0102c4b <mem_init+0x1862>$/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	76 bf                	jbe    f0102bad <mem_init+0x17c4>$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	77 d7                	ja     f0102bcc <mem_init+0x17e3>$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	75 37                	jne    f0102c32 <mem_init+0x1849>$/;"	l
f0102bfb	obj/kern/kernel.asm	/^f0102bfb:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102bfe	obj/kern/kernel.asm	/^f0102bfe:	eb e3                	jmp    f0102be3 <mem_init+0x17fa>$/;"	l
f0102c00	obj/kern/kernel.asm	/^f0102c00:	68 85 76 10 f0       	push   $0xf0107685$/;"	l
f0102c05	obj/kern/kernel.asm	/^f0102c05:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102c0a	obj/kern/kernel.asm	/^f0102c0a:	68 7d 03 00 00       	push   $0x37d$/;"	l
f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102c14	obj/kern/kernel.asm	/^f0102c14:	e8 27 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	68 96 76 10 f0       	push   $0xf0107696$/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	68 7e 03 00 00       	push   $0x37e$/;"	l
f0102c28	obj/kern/kernel.asm	/^f0102c28:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102c2d	obj/kern/kernel.asm	/^f0102c2d:	e8 0e d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	68 a7 76 10 f0       	push   $0xf01076a7$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	68 80 03 00 00       	push   $0x380$/;"	l
f0102c41	obj/kern/kernel.asm	/^f0102c41:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	e8 f5 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c4e	obj/kern/kernel.asm	/^f0102c4e:	68 38 72 10 f0       	push   $0xf0107238$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	e8 5e 0d 00 00       	call   f01039b6 <cprintf>$/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102c5d	obj/kern/kernel.asm	/^f0102c5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	0f 86 fb 01 00 00    	jbe    f0102e66 <mem_init+0x1a7d>$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102c70	obj/kern/kernel.asm	/^f0102c70:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	e8 63 df ff ff       	call   f0100be0 <check_page_free_list>$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102c83	obj/kern/kernel.asm	/^f0102c83:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c8e	obj/kern/kernel.asm	/^f0102c8e:	6a 00                	push   $0x0$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	e8 16 e3 ff ff       	call   f0100fab <page_alloc>$/;"	l
f0102c95	obj/kern/kernel.asm	/^f0102c95:	89 c6                	mov    %eax,%esi$/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	85 c0                	test   %eax,%eax$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	0f 84 d9 01 00 00    	je     f0102e7b <mem_init+0x1a92>$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	6a 00                	push   $0x0$/;"	l
f0102ca7	obj/kern/kernel.asm	/^f0102ca7:	e8 ff e2 ff ff       	call   f0100fab <page_alloc>$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	89 c7                	mov    %eax,%edi$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	85 c0                	test   %eax,%eax$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	0f 84 db 01 00 00    	je     f0102e94 <mem_init+0x1aab>$/;"	l
f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102cbc	obj/kern/kernel.asm	/^f0102cbc:	6a 00                	push   $0x0$/;"	l
f0102cbe	obj/kern/kernel.asm	/^f0102cbe:	e8 e8 e2 ff ff       	call   f0100fab <page_alloc>$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	89 c3                	mov    %eax,%ebx$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	85 c0                	test   %eax,%eax$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	0f 84 dd 01 00 00    	je     f0102ead <mem_init+0x1ac4>$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	56                   	push   %esi$/;"	l
f0102cd4	obj/kern/kernel.asm	/^f0102cd4:	e8 44 e3 ff ff       	call   f010101d <page_free>$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	89 f8                	mov    %edi,%eax$/;"	l
f0102cdb	obj/kern/kernel.asm	/^f0102cdb:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0102ce1	obj/kern/kernel.asm	/^f0102ce1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	89 c2                	mov    %eax,%edx$/;"	l
f0102ce9	obj/kern/kernel.asm	/^f0102ce9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	0f 83 cb 01 00 00    	jae    f0102ec6 <mem_init+0x1add>$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102cfe	obj/kern/kernel.asm	/^f0102cfe:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	6a 01                	push   $0x1$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102d0a	obj/kern/kernel.asm	/^f0102d0a:	50                   	push   %eax$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	e8 8a 2a 00 00       	call   f010579a <memset>$/;"	l
f0102d10	obj/kern/kernel.asm	/^f0102d10:	89 d8                	mov    %ebx,%eax$/;"	l
f0102d12	obj/kern/kernel.asm	/^f0102d12:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0102d18	obj/kern/kernel.asm	/^f0102d18:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102d1e	obj/kern/kernel.asm	/^f0102d1e:	89 c2                	mov    %eax,%edx$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d26	obj/kern/kernel.asm	/^f0102d26:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	0f 83 a6 01 00 00    	jae    f0102ed8 <mem_init+0x1aef>$/;"	l
f0102d32	obj/kern/kernel.asm	/^f0102d32:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	6a 02                	push   $0x2$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	50                   	push   %eax$/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42:	e8 53 2a 00 00       	call   f010579a <memset>$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	6a 02                	push   $0x2$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102d4e	obj/kern/kernel.asm	/^f0102d4e:	57                   	push   %edi$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	e8 a7 e5 ff ff       	call   f0101301 <page_insert>$/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	0f 85 82 01 00 00    	jne    f0102eea <mem_init+0x1b01>$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	01 01 01 $/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	0f 85 8b 01 00 00    	jne    f0102f03 <mem_init+0x1b1a>$/;"	l
f0102d78	obj/kern/kernel.asm	/^f0102d78:	6a 02                	push   $0x2$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	53                   	push   %ebx$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0102d86	obj/kern/kernel.asm	/^f0102d86:	e8 76 e5 ff ff       	call   f0101301 <page_insert>$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102d95	obj/kern/kernel.asm	/^f0102d95:	02 02 02 $/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	0f 85 7e 01 00 00    	jne    f0102f1c <mem_init+0x1b33>$/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	0f 85 8c 01 00 00    	jne    f0102f35 <mem_init+0x1b4c>$/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	0f 85 9a 01 00 00    	jne    f0102f4e <mem_init+0x1b65>$/;"	l
f0102db4	obj/kern/kernel.asm	/^f0102db4:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102dbb	obj/kern/kernel.asm	/^f0102dbb:	03 03 03 $/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	89 d8                	mov    %ebx,%eax$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	89 c2                	mov    %eax,%edx$/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	0f 83 8a 01 00 00    	jae    f0102f67 <mem_init+0x1b7e>$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	03 03 03 $/;"	l
f0102de7	obj/kern/kernel.asm	/^f0102de7:	0f 85 8c 01 00 00    	jne    f0102f79 <mem_init+0x1b90>$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102df0	obj/kern/kernel.asm	/^f0102df0:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	ff 35 8c de 32 f0    	pushl  0xf032de8c$/;"	l
f0102dfb	obj/kern/kernel.asm	/^f0102dfb:	e8 bb e4 ff ff       	call   f01012bb <page_remove>$/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	0f 85 84 01 00 00    	jne    f0102f92 <mem_init+0x1ba9>$/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	8b 0d 8c de 32 f0    	mov    0xf032de8c,%ecx$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	89 f0                	mov    %esi,%eax$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0102e24	obj/kern/kernel.asm	/^f0102e24:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	39 c2                	cmp    %eax,%edx$/;"	l
f0102e2c	obj/kern/kernel.asm	/^f0102e2c:	0f 85 79 01 00 00    	jne    f0102fab <mem_init+0x1bc2>$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102e38	obj/kern/kernel.asm	/^f0102e38:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	0f 85 81 01 00 00    	jne    f0102fc4 <mem_init+0x1bdb>$/;"	l
f0102e43	obj/kern/kernel.asm	/^f0102e43:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	56                   	push   %esi$/;"	l
f0102e4d	obj/kern/kernel.asm	/^f0102e4d:	e8 cb e1 ff ff       	call   f010101d <page_free>$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	c7 04 24 cc 72 10 f0 	movl   $0xf01072cc,(%esp)$/;"	l
f0102e59	obj/kern/kernel.asm	/^f0102e59:	e8 58 0b 00 00       	call   f01039b6 <cprintf>$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	5b                   	pop    %ebx$/;"	l
f0102e62	obj/kern/kernel.asm	/^f0102e62:	5e                   	pop    %esi$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	5f                   	pop    %edi$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	5d                   	pop    %ebp$/;"	l
f0102e65	obj/kern/kernel.asm	/^f0102e65:	c3                   	ret    $/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	50                   	push   %eax$/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	68 fd 00 00 00       	push   $0xfd$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	e8 c5 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	68 91 74 10 f0       	push   $0xf0107491$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	68 58 04 00 00       	push   $0x458$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	e8 ac d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	68 a7 74 10 f0       	push   $0xf01074a7$/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102e9e	obj/kern/kernel.asm	/^f0102e9e:	68 59 04 00 00       	push   $0x459$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	e8 93 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	68 bd 74 10 f0       	push   $0xf01074bd$/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	68 5a 04 00 00       	push   $0x45a$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	e8 7a d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	50                   	push   %eax$/;"	l
f0102ec7	obj/kern/kernel.asm	/^f0102ec7:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	6a 58                	push   $0x58$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0102ed3	obj/kern/kernel.asm	/^f0102ed3:	e8 68 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	50                   	push   %eax$/;"	l
f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	6a 58                	push   $0x58$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	e8 56 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102eea	obj/kern/kernel.asm	/^f0102eea:	68 8e 75 10 f0       	push   $0xf010758e$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102ef4	obj/kern/kernel.asm	/^f0102ef4:	68 5f 04 00 00       	push   $0x45f$/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102efe	obj/kern/kernel.asm	/^f0102efe:	e8 3d d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f03	obj/kern/kernel.asm	/^f0102f03:	68 58 72 10 f0       	push   $0xf0107258$/;"	l
f0102f08	obj/kern/kernel.asm	/^f0102f08:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	68 60 04 00 00       	push   $0x460$/;"	l
f0102f12	obj/kern/kernel.asm	/^f0102f12:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	e8 24 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	68 7c 72 10 f0       	push   $0xf010727c$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	68 62 04 00 00       	push   $0x462$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	e8 0b d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	68 b0 75 10 f0       	push   $0xf01075b0$/;"	l
f0102f3a	obj/kern/kernel.asm	/^f0102f3a:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	68 63 04 00 00       	push   $0x463$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	e8 f2 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	68 1a 76 10 f0       	push   $0xf010761a$/;"	l
f0102f53	obj/kern/kernel.asm	/^f0102f53:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	68 64 04 00 00       	push   $0x464$/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102f62	obj/kern/kernel.asm	/^f0102f62:	e8 d9 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	50                   	push   %eax$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0102f6d	obj/kern/kernel.asm	/^f0102f6d:	6a 58                	push   $0x58$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0102f74	obj/kern/kernel.asm	/^f0102f74:	e8 c7 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	68 a0 72 10 f0       	push   $0xf01072a0$/;"	l
f0102f7e	obj/kern/kernel.asm	/^f0102f7e:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	68 66 04 00 00       	push   $0x466$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	e8 ae d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	68 e8 75 10 f0       	push   $0xf01075e8$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	68 68 04 00 00       	push   $0x468$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	e8 95 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	68 28 6c 10 f0       	push   $0xf0106c28$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	68 6b 04 00 00       	push   $0x46b$/;"	l
f0102fba	obj/kern/kernel.asm	/^f0102fba:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	e8 7c d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	68 9f 75 10 f0       	push   $0xf010759f$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	68 6d 04 00 00       	push   $0x46d$/;"	l
f0102fd3	obj/kern/kernel.asm	/^f0102fd3:	68 2d 73 10 f0       	push   $0xf010732d$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	e8 63 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd <user_mem_check>:$/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	55                   	push   %ebp$/;"	l
f0102fde	obj/kern/kernel.asm	/^f0102fde:	89 e5                	mov    %esp,%ebp$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	57                   	push   %edi$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	56                   	push   %esi$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	53                   	push   %ebx$/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	83 ce 01             	or     $0x1,%esi$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	03 7d 10             	add    0x10(%ebp),%edi$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	77 1c                	ja     f0103016 <user_mem_check+0x39>$/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103000	obj/kern/kernel.asm	/^f0103000:	89 c3                	mov    %eax,%ebx$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103008	obj/kern/kernel.asm	/^f0103008:	81 c7 ff 0f 00 00    	add    $0xfff,%edi$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	eb 15                	jmp    f010302b <user_mem_check+0x4e>$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	a3 3c d2 32 f0       	mov    %eax,0xf032d23c$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	eb 3c                	jmp    f0103061 <user_mem_check+0x84>$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	39 fb                	cmp    %edi,%ebx$/;"	l
f010302d	obj/kern/kernel.asm	/^f010302d:	73 3a                	jae    f0103069 <user_mem_check+0x8c>$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	6a 00                	push   $0x0$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	53                   	push   %ebx$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	e8 41 e0 ff ff       	call   f0101081 <pgdir_walk>$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	85 c0                	test   %eax,%eax$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	74 08                	je     f010304f <user_mem_check+0x72>$/;"	l
f0103047	obj/kern/kernel.asm	/^f0103047:	89 f2                	mov    %esi,%edx$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	23 10                	and    (%eax),%edx$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	39 d6                	cmp    %edx,%esi$/;"	l
f010304d	obj/kern/kernel.asm	/^f010304d:	74 d6                	je     f0103025 <user_mem_check+0x48>$/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	3b 5d 0c             	cmp    0xc(%ebp),%ebx$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	0f 42 5d e4          	cmovb  -0x1c(%ebp),%ebx$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	89 1d 3c d2 32 f0    	mov    %ebx,0xf032d23c$/;"	l
f010305c	obj/kern/kernel.asm	/^f010305c:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103064	obj/kern/kernel.asm	/^f0103064:	5b                   	pop    %ebx$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	5e                   	pop    %esi$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	5f                   	pop    %edi$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	5d                   	pop    %ebp$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	c3                   	ret    $/;"	l
f0103069	obj/kern/kernel.asm	/^f0103069:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	eb f1                	jmp    f0103061 <user_mem_check+0x84>$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070 <user_mem_assert>:$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	55                   	push   %ebp$/;"	l
f0103071	obj/kern/kernel.asm	/^f0103071:	89 e5                	mov    %esp,%ebp$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	53                   	push   %ebx$/;"	l
f0103074	obj/kern/kernel.asm	/^f0103074:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	50                   	push   %eax$/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103084	obj/kern/kernel.asm	/^f0103084:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	53                   	push   %ebx$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	e8 50 ff ff ff       	call   f0102fdd <user_mem_check>$/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	85 c0                	test   %eax,%eax$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	78 05                	js     f0103099 <user_mem_assert+0x29>$/;"	l
f0103094	obj/kern/kernel.asm	/^f0103094:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	c9                   	leave  $/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	c3                   	ret    $/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010309c	obj/kern/kernel.asm	/^f010309c:	ff 35 3c d2 32 f0    	pushl  0xf032d23c$/;"	l
f01030a2	obj/kern/kernel.asm	/^f01030a2:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	68 f8 72 10 f0       	push   $0xf01072f8$/;"	l
f01030aa	obj/kern/kernel.asm	/^f01030aa:	e8 07 09 00 00       	call   f01039b6 <cprintf>$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	e8 38 06 00 00       	call   f01036ef <env_destroy>$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030ba	obj/kern/kernel.asm	/^f01030ba:	eb d8                	jmp    f0103094 <user_mem_assert+0x24>$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc <region_alloc>:$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	55                   	push   %ebp$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	57                   	push   %edi$/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	56                   	push   %esi$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	53                   	push   %ebx$/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	89 c7                	mov    %eax,%edi$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01030da	obj/kern/kernel.asm	/^f01030da:	89 d3                	mov    %edx,%ebx$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	39 f3                	cmp    %esi,%ebx$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	73 3f                	jae    f010311f <region_alloc+0x63>$/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	6a fe                	push   $0xfffffffe$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	e8 c1 de ff ff       	call   f0100fab <page_alloc>$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	85 c0                	test   %eax,%eax$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	74 17                	je     f0103108 <region_alloc+0x4c>$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	6a 06                	push   $0x6$/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	53                   	push   %ebx$/;"	l
f01030f4	obj/kern/kernel.asm	/^f01030f4:	50                   	push   %eax$/;"	l
f01030f5	obj/kern/kernel.asm	/^f01030f5:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	e8 04 e2 ff ff       	call   f0101301 <page_insert>$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103103	obj/kern/kernel.asm	/^f0103103:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103106	obj/kern/kernel.asm	/^f0103106:	eb d4                	jmp    f01030dc <region_alloc+0x20>$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	68 b5 76 10 f0       	push   $0xf01076b5$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	68 2d 01 00 00       	push   $0x12d$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	e8 21 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	5b                   	pop    %ebx$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	5e                   	pop    %esi$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	5f                   	pop    %edi$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	5d                   	pop    %ebp$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	c3                   	ret    $/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127 <envid2env>:$/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127:	55                   	push   %ebp$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	89 e5                	mov    %esp,%ebp$/;"	l
f010312a	obj/kern/kernel.asm	/^f010312a:	56                   	push   %esi$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	53                   	push   %ebx$/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	85 c0                	test   %eax,%eax$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	74 2e                	je     f0103164 <envid2env+0x3d>$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	89 c3                	mov    %eax,%ebx$/;"	l
f0103138	obj/kern/kernel.asm	/^f0103138:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103141	obj/kern/kernel.asm	/^f0103141:	03 1d 48 d2 32 f0    	add    0xf032d248,%ebx$/;"	l
f0103147	obj/kern/kernel.asm	/^f0103147:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	74 31                	je     f010317e <envid2env+0x57>$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	75 2c                	jne    f010317e <envid2env+0x57>$/;"	l
f0103152	obj/kern/kernel.asm	/^f0103152:	84 d2                	test   %dl,%dl$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	75 38                	jne    f010318e <envid2env+0x67>$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	89 18                	mov    %ebx,(%eax)$/;"	l
f010315b	obj/kern/kernel.asm	/^f010315b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	5b                   	pop    %ebx$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	5e                   	pop    %esi$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	5d                   	pop    %ebp$/;"	l
f0103163	obj/kern/kernel.asm	/^f0103163:	c3                   	ret    $/;"	l
f0103164	obj/kern/kernel.asm	/^f0103164:	e8 31 2c 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103169	obj/kern/kernel.asm	/^f0103169:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0103172	obj/kern/kernel.asm	/^f0103172:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	eb e2                	jmp    f0103160 <envid2env+0x39>$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	eb d2                	jmp    f0103160 <envid2env+0x39>$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	e8 07 2c 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	39 98 28 e0 32 f0    	cmp    %ebx,-0xfcd1fd8(%eax)$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	74 b8                	je     f0103156 <envid2env+0x2f>$/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	e8 f4 2b 00 00       	call   f0105d9a <cpunum>$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	74 a2                	je     f0103156 <envid2env+0x2f>$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01031b7	obj/kern/kernel.asm	/^f01031b7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01031bd	obj/kern/kernel.asm	/^f01031bd:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01031c2	obj/kern/kernel.asm	/^f01031c2:	eb 9c                	jmp    f0103160 <envid2env+0x39>$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4 <env_init_percpu>:$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	b8 20 33 12 f0       	mov    $0xf0123320,%eax$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	8e e8                	mov    %eax,%gs$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	8e e0                	mov    %eax,%fs$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	8e c0                	mov    %eax,%es$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	8e d8                	mov    %eax,%ds$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	8e d0                	mov    %eax,%ss$/;"	l
f01031e0	obj/kern/kernel.asm	/^f01031e0:	ea e7 31 10 f0 08 00 	ljmp   $0x8,$0xf01031e7$/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	0f 00 d0             	lldt   %ax$/;"	l
f01031ef	obj/kern/kernel.asm	/^f01031ef:	c3                   	ret    $/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0 <env_init>:$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	55                   	push   %ebp$/;"	l
f01031f1	obj/kern/kernel.asm	/^f01031f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	56                   	push   %esi$/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	53                   	push   %ebx$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	8b 35 48 d2 32 f0    	mov    0xf032d248,%esi$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	8b 15 4c d2 32 f0    	mov    0xf032d24c,%edx$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	89 f3                	mov    %esi,%ebx$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	eb 02                	jmp    f010320d <env_init+0x1d>$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	89 c8                	mov    %ecx,%eax$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f010321b	obj/kern/kernel.asm	/^f010321b:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f010321e	obj/kern/kernel.asm	/^f010321e:	8d 48 84             	lea    -0x7c(%eax),%ecx$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	89 c2                	mov    %eax,%edx$/;"	l
f0103223	obj/kern/kernel.asm	/^f0103223:	39 d8                	cmp    %ebx,%eax$/;"	l
f0103225	obj/kern/kernel.asm	/^f0103225:	75 e4                	jne    f010320b <env_init+0x1b>$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	89 35 4c d2 32 f0    	mov    %esi,0xf032d24c$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	e8 92 ff ff ff       	call   f01031c4 <env_init_percpu>$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	5b                   	pop    %ebx$/;"	l
f0103233	obj/kern/kernel.asm	/^f0103233:	5e                   	pop    %esi$/;"	l
f0103234	obj/kern/kernel.asm	/^f0103234:	5d                   	pop    %ebp$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	c3                   	ret    $/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236 <env_alloc>:$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	55                   	push   %ebp$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	89 e5                	mov    %esp,%ebp$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	56                   	push   %esi$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	53                   	push   %ebx$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	8b 1d 4c d2 32 f0    	mov    0xf032d24c,%ebx$/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	85 db                	test   %ebx,%ebx$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	0f 84 69 01 00 00    	je     f01033b2 <env_alloc+0x17c>$/;"	l
f0103249	obj/kern/kernel.asm	/^f0103249:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010324c	obj/kern/kernel.asm	/^f010324c:	6a 01                	push   $0x1$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	e8 58 dd ff ff       	call   f0100fab <page_alloc>$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	89 c6                	mov    %eax,%esi$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	85 c0                	test   %eax,%eax$/;"	l
f010325a	obj/kern/kernel.asm	/^f010325a:	0f 84 59 01 00 00    	je     f01033b9 <env_alloc+0x183>$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	8b 15 8c de 32 f0    	mov    0xf032de8c,%edx$/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103277	obj/kern/kernel.asm	/^f0103277:	89 c1                	mov    %eax,%ecx$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	3b 0d 88 de 32 f0    	cmp    0xf032de88,%ecx$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	0f 83 f1 00 00 00    	jae    f0103379 <env_alloc+0x143>$/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	52                   	push   %edx$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	50                   	push   %eax$/;"	l
f0103297	obj/kern/kernel.asm	/^f0103297:	e8 a8 25 00 00       	call   f0105844 <memcpy>$/;"	l
f010329c	obj/kern/kernel.asm	/^f010329c:	2b 35 90 de 32 f0    	sub    0xf032de90,%esi$/;"	l
f01032a2	obj/kern/kernel.asm	/^f01032a2:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f01032a8	obj/kern/kernel.asm	/^f01032a8:	89 f0                	mov    %esi,%eax$/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032b0	obj/kern/kernel.asm	/^f01032b0:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	0f 83 cf 00 00 00    	jae    f010338b <env_alloc+0x155>$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	8d 86 00 00 00 f0    	lea    -0x10000000(%esi),%eax$/;"	l
f01032c2	obj/kern/kernel.asm	/^f01032c2:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	0f 86 cd 00 00 00    	jbe    f010339d <env_alloc+0x167>$/;"	l
f01032d0	obj/kern/kernel.asm	/^f01032d0:	83 ce 05             	or     $0x5,%esi$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	89 b0 f4 0e 00 00    	mov    %esi,0xef4(%eax)$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f01032ee	obj/kern/kernel.asm	/^f01032ee:	89 da                	mov    %ebx,%edx$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	2b 15 48 d2 32 f0    	sub    0xf032d248,%edx$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f01032ff	obj/kern/kernel.asm	/^f01032ff:	09 d0                	or     %edx,%eax$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103307	obj/kern/kernel.asm	/^f0103307:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f010330a	obj/kern/kernel.asm	/^f010330a:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103322	obj/kern/kernel.asm	/^f0103322:	6a 44                	push   $0x44$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	6a 00                	push   $0x0$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	53                   	push   %ebx$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	e8 6e 24 00 00       	call   f010579a <memset>$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103359	obj/kern/kernel.asm	/^f0103359:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103360	obj/kern/kernel.asm	/^f0103360:	a3 4c d2 32 f0       	mov    %eax,0xf032d24c$/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103368	obj/kern/kernel.asm	/^f0103368:	89 18                	mov    %ebx,(%eax)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010336d	obj/kern/kernel.asm	/^f010336d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	5b                   	pop    %ebx$/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	5e                   	pop    %esi$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	5d                   	pop    %ebp$/;"	l
f0103378	obj/kern/kernel.asm	/^f0103378:	c3                   	ret    $/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	50                   	push   %eax$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	6a 58                	push   $0x58$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	e8 b5 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	56                   	push   %esi$/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	6a 58                	push   $0x58$/;"	l
f0103393	obj/kern/kernel.asm	/^f0103393:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f0103398	obj/kern/kernel.asm	/^f0103398:	e8 a3 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	50                   	push   %eax$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f01033a3	obj/kern/kernel.asm	/^f01033a3:	68 ca 00 00 00       	push   $0xca$/;"	l
f01033a8	obj/kern/kernel.asm	/^f01033a8:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	e8 8e cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	eb b9                	jmp    f0103372 <env_alloc+0x13c>$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	eb b2                	jmp    f0103372 <env_alloc+0x13c>$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0 <env_create>:$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	55                   	push   %ebp$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01033c3	obj/kern/kernel.asm	/^f01033c3:	57                   	push   %edi$/;"	l
f01033c4	obj/kern/kernel.asm	/^f01033c4:	56                   	push   %esi$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	53                   	push   %ebx$/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	83 ec 34             	sub    $0x34,%esp$/;"	l
f01033c9	obj/kern/kernel.asm	/^f01033c9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	6a 00                	push   $0x0$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	50                   	push   %eax$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	e8 5f fe ff ff       	call   f0103236 <env_alloc>$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	85 c0                	test   %eax,%eax$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	75 49                	jne    f0103427 <env_create+0x67>$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	74 58                	je     f010343c <env_create+0x7c>$/;"	l
f01033e4	obj/kern/kernel.asm	/^f01033e4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033ea	obj/kern/kernel.asm	/^f01033ea:	68 08 77 10 f0       	push   $0xf0107708$/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	e8 c2 05 00 00       	call   f01039b6 <cprintf>$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	81 3e 7f 45 4c 46    	cmpl   $0x464c457f,(%esi)$/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	75 49                	jne    f0103448 <env_create+0x88>$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	89 f3                	mov    %esi,%ebx$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	03 5e 1c             	add    0x1c(%esi),%ebx$/;"	l
f0103404	obj/kern/kernel.asm	/^f0103404:	0f b7 46 2c          	movzwl 0x2c(%esi),%eax$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	01 d8                	add    %ebx,%eax$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103418	obj/kern/kernel.asm	/^f0103418:	76 45                	jbe    f010345f <env_create+0x9f>$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010341f	obj/kern/kernel.asm	/^f010341f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	e9 9e 00 00 00       	jmp    f01034c5 <env_create+0x105>$/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	50                   	push   %eax$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	68 dc 76 10 f0       	push   $0xf01076dc$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	68 98 01 00 00       	push   $0x198$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	e8 04 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010343f	obj/kern/kernel.asm	/^f010343f:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	eb 9c                	jmp    f01033e4 <env_create+0x24>$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	68 28 77 10 f0       	push   $0xf0107728$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	68 6e 01 00 00       	push   $0x16e$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	e8 e1 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	50                   	push   %eax$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	68 77 01 00 00       	push   $0x177$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	e8 cc cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103477	obj/kern/kernel.asm	/^f0103477:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	89 f8                	mov    %edi,%eax$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	e8 3b fc ff ff       	call   f01030bc <region_alloc>$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103487	obj/kern/kernel.asm	/^f0103487:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	68 4c 77 10 f0       	push   $0xf010774c$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	e8 22 05 00 00       	call   f01039b6 <cprintf>$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	89 f0                	mov    %esi,%eax$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	50                   	push   %eax$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01034a3	obj/kern/kernel.asm	/^f01034a3:	e8 9c 23 00 00       	call   f0105844 <memcpy>$/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01034ab	obj/kern/kernel.asm	/^f01034ab:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	29 c2                	sub    %eax,%edx$/;"	l
f01034b3	obj/kern/kernel.asm	/^f01034b3:	52                   	push   %edx$/;"	l
f01034b4	obj/kern/kernel.asm	/^f01034b4:	6a 00                	push   $0x0$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	50                   	push   %eax$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	e8 db 22 00 00       	call   f010579a <memset>$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01034c5	obj/kern/kernel.asm	/^f01034c5:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	76 07                	jbe    f01034d1 <env_create+0x111>$/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f01034cd	obj/kern/kernel.asm	/^f01034cd:	75 f3                	jne    f01034c2 <env_create+0x102>$/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	eb a3                	jmp    f0103474 <env_create+0xb4>$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	76 4f                	jbe    f010352c <env_create+0x16c>$/;"	l
f01034dd	obj/kern/kernel.asm	/^f01034dd:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	89 f8                	mov    %edi,%eax$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	e8 c6 fb ff ff       	call   f01030bc <region_alloc>$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01034ff	obj/kern/kernel.asm	/^f01034ff:	50                   	push   %eax$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	68 84 77 10 f0       	push   $0xf0107784$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	e8 ac 04 00 00       	call   f01039b6 <cprintf>$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	50                   	push   %eax$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	68 eb 76 10 f0       	push   $0xf01076eb$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	e8 95 04 00 00       	call   f01039b6 <cprintf>$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103524	obj/kern/kernel.asm	/^f0103524:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103527	obj/kern/kernel.asm	/^f0103527:	5b                   	pop    %ebx$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	5e                   	pop    %esi$/;"	l
f0103529	obj/kern/kernel.asm	/^f0103529:	5f                   	pop    %edi$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	5d                   	pop    %ebp$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	c3                   	ret    $/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	50                   	push   %eax$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	68 81 01 00 00       	push   $0x181$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	e8 ff ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541 <env_free>:$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	55                   	push   %ebp$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	89 e5                	mov    %esp,%ebp$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	57                   	push   %edi$/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	56                   	push   %esi$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	53                   	push   %ebx$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	e8 48 28 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	39 b8 28 e0 32 f0    	cmp    %edi,-0xfcd1fd8(%eax)$/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	0f 85 b3 00 00 00    	jne    f010361b <env_free+0xda>$/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103572	obj/kern/kernel.asm	/^f0103572:	76 14                	jbe    f0103588 <env_free+0x47>$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	e9 93 00 00 00       	jmp    f010361b <env_free+0xda>$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	50                   	push   %eax$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	68 b3 01 00 00       	push   $0x1b3$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	e8 a3 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	56                   	push   %esi$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	68 c2 01 00 00       	push   $0x1c2$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	e8 8e ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	89 d8                	mov    %ebx,%eax$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01035ba	obj/kern/kernel.asm	/^f01035ba:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	50                   	push   %eax$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	e8 f5 dc ff ff       	call   f01012bb <page_remove>$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	83 c6 04             	add    $0x4,%esi$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	74 07                	je     f01035de <env_free+0x9d>$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	f6 06 01             	testb  $0x1,(%esi)$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	74 ed                	je     f01035c9 <env_free+0x88>$/;"	l
f01035dc	obj/kern/kernel.asm	/^f01035dc:	eb d4                	jmp    f01035b2 <env_free+0x71>$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	73 69                	jae    f010365f <env_free+0x11e>$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	a1 90 de 32 f0       	mov    0xf032de90,%eax$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	50                   	push   %eax$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	e8 4e da ff ff       	call   f0101058 <page_decref>$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	83 45 e0 04          	addl   $0x4,-0x20(%ebp)$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	3d ec 0e 00 00       	cmp    $0xeec,%eax$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	74 58                	je     f0103673 <env_free+0x132>$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	74 e1                	je     f010360d <env_free+0xcc>$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	89 f0                	mov    %esi,%eax$/;"	l
f0103634	obj/kern/kernel.asm	/^f0103634:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010363a	obj/kern/kernel.asm	/^f010363a:	39 05 88 de 32 f0    	cmp    %eax,0xf032de88$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	0f 86 57 ff ff ff    	jbe    f010359d <env_free+0x5c>$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	c1 e0 14             	shl    $0x14,%eax$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	e9 78 ff ff ff       	jmp    f01035d7 <env_free+0x96>$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	68 d0 6a 10 f0       	push   $0xf0106ad0$/;"	l
f0103667	obj/kern/kernel.asm	/^f0103667:	6a 51                	push   $0x51$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	e8 cd c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	76 49                	jbe    f01036c6 <env_free+0x185>$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	73 47                	jae    f01036db <env_free+0x19a>$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	8b 15 90 de 32 f0    	mov    0xf032de90,%edx$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	50                   	push   %eax$/;"	l
f01036a1	obj/kern/kernel.asm	/^f01036a1:	e8 b2 d9 ff ff       	call   f0101058 <page_decref>$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	a1 4c d2 32 f0       	mov    0xf032d24c,%eax$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	89 3d 4c d2 32 f0    	mov    %edi,0xf032d24c$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	5b                   	pop    %ebx$/;"	l
f01036c2	obj/kern/kernel.asm	/^f01036c2:	5e                   	pop    %esi$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	5f                   	pop    %edi$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	5d                   	pop    %ebp$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	c3                   	ret    $/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	50                   	push   %eax$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	68 d0 01 00 00       	push   $0x1d0$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	e8 65 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	68 d0 6a 10 f0       	push   $0xf0106ad0$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	6a 51                	push   $0x51$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	68 54 73 10 f0       	push   $0xf0107354$/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	e8 51 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef <env_destroy>:$/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	55                   	push   %ebp$/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	53                   	push   %ebx$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	74 21                	je     f0103720 <env_destroy+0x31>$/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	53                   	push   %ebx$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	e8 39 fe ff ff       	call   f0103541 <env_free>$/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	e8 8d 26 00 00       	call   f0105d9a <cpunum>$/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103710	obj/kern/kernel.asm	/^f0103710:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	39 98 28 e0 32 f0    	cmp    %ebx,-0xfcd1fd8(%eax)$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	74 1e                	je     f0103739 <env_destroy+0x4a>$/;"	l
f010371b	obj/kern/kernel.asm	/^f010371b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	c9                   	leave  $/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	c3                   	ret    $/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	e8 75 26 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	39 98 28 e0 32 f0    	cmp    %ebx,-0xfcd1fd8(%eax)$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	74 cf                	je     f01036ff <env_destroy+0x10>$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103737	obj/kern/kernel.asm	/^f0103737:	eb e2                	jmp    f010371b <env_destroy+0x2c>$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	e8 5c 26 00 00       	call   f0105d9a <cpunum>$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	c7 80 28 e0 32 f0 00 	movl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	00 00 00 $/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	e8 b3 0e 00 00       	call   f0104603 <sched_yield>$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750 <env_pop_tf>:$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	55                   	push   %ebp$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	89 e5                	mov    %esp,%ebp$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	53                   	push   %ebx$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	e8 3e 26 00 00       	call   f0105d9a <cpunum>$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	8b 98 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%ebx$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	e8 30 26 00 00       	call   f0105d9a <cpunum>$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	61                   	popa   $/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	07                   	pop    %es$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	1f                   	pop    %ds$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	cf                   	iret   $/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	68 fb 76 10 f0       	push   $0xf01076fb$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	68 07 02 00 00       	push   $0x207$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	e8 b2 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e <env_run>:$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	55                   	push   %ebp$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	53                   	push   %ebx$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	e8 fd 25 00 00       	call   f0105d9a <cpunum>$/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	83 b8 28 e0 32 f0 00 	cmpl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	74 14                	je     f01037bd <env_run+0x2f>$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	e8 ec 25 00 00       	call   f0105d9a <cpunum>$/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01037bb	obj/kern/kernel.asm	/^f01037bb:	74 42                	je     f01037ff <env_run+0x71>$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	e8 d8 25 00 00       	call   f0105d9a <cpunum>$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	89 98 28 e0 32 f0    	mov    %ebx,-0xfcd1fd8(%eax)$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	c7 43 54 03 00 00 00 	movl   $0x3,0x54(%ebx)$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	83 43 58 01          	addl   $0x1,0x58(%ebx)$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01037d9	obj/kern/kernel.asm	/^f01037d9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	76 36                	jbe    f0103816 <env_run+0x88>$/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01037e5	obj/kern/kernel.asm	/^f01037e5:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	68 c0 33 12 f0       	push   $0xf01233c0$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	e8 b1 28 00 00       	call   f01060a6 <spin_unlock>$/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	f3 90                	pause  $/;"	l
f01037f7	obj/kern/kernel.asm	/^f01037f7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01037fa	obj/kern/kernel.asm	/^f01037fa:	e8 51 ff ff ff       	call   f0103750 <env_pop_tf>$/;"	l
f01037ff	obj/kern/kernel.asm	/^f01037ff:	e8 96 25 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103814	obj/kern/kernel.asm	/^f0103814:	eb a7                	jmp    f01037bd <env_run+0x2f>$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	50                   	push   %eax$/;"	l
f0103817	obj/kern/kernel.asm	/^f0103817:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	68 2b 02 00 00       	push   $0x22b$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	68 d1 76 10 f0       	push   $0xf01076d1$/;"	l
f0103826	obj/kern/kernel.asm	/^f0103826:	e8 15 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b <mc146818_read>:$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	55                   	push   %ebp$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	89 e5                	mov    %esp,%ebp$/;"	l
f010382e	obj/kern/kernel.asm	/^f010382e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	ee                   	out    %al,(%dx)$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	ec                   	in     (%dx),%al$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	5d                   	pop    %ebp$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	c3                   	ret    $/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842 <mc146818_write>:$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	55                   	push   %ebp$/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	89 e5                	mov    %esp,%ebp$/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	ee                   	out    %al,(%dx)$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	ee                   	out    %al,(%dx)$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	5d                   	pop    %ebp$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	c3                   	ret    $/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859 <irq_setmask_8259A>:$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	55                   	push   %ebp$/;"	l
f010385a	obj/kern/kernel.asm	/^f010385a:	89 e5                	mov    %esp,%ebp$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	56                   	push   %esi$/;"	l
f010385d	obj/kern/kernel.asm	/^f010385d:	53                   	push   %ebx$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	66 a3 a8 33 12 f0    	mov    %ax,0xf01233a8$/;"	l
f0103867	obj/kern/kernel.asm	/^f0103867:	80 3d 50 d2 32 f0 00 	cmpb   $0x0,0xf032d250$/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e:	75 07                	jne    f0103877 <irq_setmask_8259A+0x1e>$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	5b                   	pop    %ebx$/;"	l
f0103874	obj/kern/kernel.asm	/^f0103874:	5e                   	pop    %esi$/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	5d                   	pop    %ebp$/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	c3                   	ret    $/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	89 c6                	mov    %eax,%esi$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	ee                   	out    %al,(%dx)$/;"	l
f010387f	obj/kern/kernel.asm	/^f010387f:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	ee                   	out    %al,(%dx)$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	68 a9 77 10 f0       	push   $0xf01077a9$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	e8 20 01 00 00       	call   f01039b6 <cprintf>$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01038a1	obj/kern/kernel.asm	/^f01038a1:	f7 d6                	not    %esi$/;"	l
f01038a3	obj/kern/kernel.asm	/^f01038a3:	eb 19                	jmp    f01038be <irq_setmask_8259A+0x65>$/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	53                   	push   %ebx$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	68 27 7c 10 f0       	push   $0xf0107c27$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	e8 03 01 00 00       	call   f01039b6 <cprintf>$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01038b9	obj/kern/kernel.asm	/^f01038b9:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	74 07                	je     f01038c5 <irq_setmask_8259A+0x6c>$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	0f a3 de             	bt     %ebx,%esi$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	73 f3                	jae    f01038b6 <irq_setmask_8259A+0x5d>$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	eb e0                	jmp    f01038a5 <irq_setmask_8259A+0x4c>$/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	68 83 76 10 f0       	push   $0xf0107683$/;"	l
f01038cd	obj/kern/kernel.asm	/^f01038cd:	e8 e4 00 00 00       	call   f01039b6 <cprintf>$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	eb 99                	jmp    f0103870 <irq_setmask_8259A+0x17>$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7 <pic_init>:$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	55                   	push   %ebp$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01038da	obj/kern/kernel.asm	/^f01038da:	57                   	push   %edi$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	56                   	push   %esi$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	53                   	push   %ebx$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	c6 05 50 d2 32 f0 01 	movb   $0x1,0xf032d250$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	bb 21 00 00 00       	mov    $0x21,%ebx$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	89 da                	mov    %ebx,%edx$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	ee                   	out    %al,(%dx)$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	b9 a1 00 00 00       	mov    $0xa1,%ecx$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	89 ca                	mov    %ecx,%edx$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	ee                   	out    %al,(%dx)$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	bf 11 00 00 00       	mov    $0x11,%edi$/;"	l
f0103901	obj/kern/kernel.asm	/^f0103901:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	89 f8                	mov    %edi,%eax$/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	89 f2                	mov    %esi,%edx$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	ee                   	out    %al,(%dx)$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	89 da                	mov    %ebx,%edx$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	ee                   	out    %al,(%dx)$/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	ee                   	out    %al,(%dx)$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	ee                   	out    %al,(%dx)$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	bb a0 00 00 00       	mov    $0xa0,%ebx$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	89 f8                	mov    %edi,%eax$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	89 da                	mov    %ebx,%edx$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	ee                   	out    %al,(%dx)$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	89 ca                	mov    %ecx,%edx$/;"	l
f0103930	obj/kern/kernel.asm	/^f0103930:	ee                   	out    %al,(%dx)$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	ee                   	out    %al,(%dx)$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	ee                   	out    %al,(%dx)$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	bf 68 00 00 00       	mov    $0x68,%edi$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	89 f8                	mov    %edi,%eax$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	89 f2                	mov    %esi,%edx$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	ee                   	out    %al,(%dx)$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	89 c8                	mov    %ecx,%eax$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	ee                   	out    %al,(%dx)$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	89 f8                	mov    %edi,%eax$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	89 da                	mov    %ebx,%edx$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	ee                   	out    %al,(%dx)$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	89 c8                	mov    %ecx,%eax$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	ee                   	out    %al,(%dx)$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f010395e	obj/kern/kernel.asm	/^f010395e:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	75 08                	jne    f010396c <pic_init+0x95>$/;"	l
f0103964	obj/kern/kernel.asm	/^f0103964:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103967	obj/kern/kernel.asm	/^f0103967:	5b                   	pop    %ebx$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	5e                   	pop    %esi$/;"	l
f0103969	obj/kern/kernel.asm	/^f0103969:	5f                   	pop    %edi$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	5d                   	pop    %ebp$/;"	l
f010396b	obj/kern/kernel.asm	/^f010396b:	c3                   	ret    $/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	50                   	push   %eax$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	e8 e1 fe ff ff       	call   f0103859 <irq_setmask_8259A>$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	83 c4 10             	add    $0x10,%esp$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	eb e7                	jmp    f0103964 <pic_init+0x8d>$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d <putch>:$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	55                   	push   %ebp$/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103980	obj/kern/kernel.asm	/^f0103980:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103986	obj/kern/kernel.asm	/^f0103986:	e8 33 ce ff ff       	call   f01007be <cputchar>$/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	c9                   	leave  $/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	c3                   	ret    $/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990 <vcprintf>:$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	55                   	push   %ebp$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	89 e5                	mov    %esp,%ebp$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103996	obj/kern/kernel.asm	/^f0103996:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	50                   	push   %eax$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	68 7d 39 10 f0       	push   $0xf010397d$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	e8 d5 16 00 00       	call   f0105086 <vprintfmt>$/;"	l
f01039b1	obj/kern/kernel.asm	/^f01039b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	c9                   	leave  $/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	c3                   	ret    $/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6 <cprintf>:$/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	55                   	push   %ebp$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	50                   	push   %eax$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	e8 c8 ff ff ff       	call   f0103990 <vcprintf>$/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	c9                   	leave  $/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	c3                   	ret    $/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca <trap_init_percpu>:$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	55                   	push   %ebp$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	57                   	push   %edi$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	56                   	push   %esi$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	53                   	push   %ebx$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	e8 c2 23 00 00       	call   f0105d9a <cpunum>$/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	89 c6                	mov    %eax,%esi$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	e8 bb 23 00 00       	call   f0105d9a <cpunum>$/;"	l
f01039df	obj/kern/kernel.asm	/^f01039df:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	89 f1                	mov    %esi,%ecx$/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	29 ca                	sub    %ecx,%edx$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	89 90 30 e0 32 f0    	mov    %edx,-0xfcd1fd0(%eax)$/;"	l
f01039f4	obj/kern/kernel.asm	/^f01039f4:	e8 a1 23 00 00       	call   f0105d9a <cpunum>$/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039fc	obj/kern/kernel.asm	/^f01039fc:	66 c7 80 34 e0 32 f0 	movw   $0x10,-0xfcd1fcc(%eax)$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	10 00 $/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	e8 90 23 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	66 c7 80 92 e0 32 f0 	movw   $0x68,-0xfcd1f6e(%eax)$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	68 00 $/;"	l
f0103a16	obj/kern/kernel.asm	/^f0103a16:	8d 5e 05             	lea    0x5(%esi),%ebx$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	e8 7c 23 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	89 c7                	mov    %eax,%edi$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	e8 75 23 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	e8 6d 23 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	66 c7 04 dd 40 33 12 	movw   $0x67,-0xfedccc0(,%ebx,8)$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	f0 67 00 $/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	81 c7 2c e0 32 f0    	add    $0xf032e02c,%edi$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	66 89 3c dd 42 33 12 	mov    %di,-0xfedccbe(,%ebx,8)$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	f0 $/;"	l
f0103a48	obj/kern/kernel.asm	/^f0103a48:	6b 55 e4 74          	imul   $0x74,-0x1c(%ebp),%edx$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	81 c2 2c e0 32 f0    	add    $0xf032e02c,%edx$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103a55	obj/kern/kernel.asm	/^f0103a55:	88 14 dd 44 33 12 f0 	mov    %dl,-0xfedccbc(,%ebx,8)$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	c6 04 dd 46 33 12 f0 	movb   $0x40,-0xfedccba(,%ebx,8)$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	40 $/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a67	obj/kern/kernel.asm	/^f0103a67:	05 2c e0 32 f0       	add    $0xf032e02c,%eax$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	88 04 dd 47 33 12 f0 	mov    %al,-0xfedccb9(,%ebx,8)$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	c6 04 dd 45 33 12 f0 	movb   $0x89,-0xfedccbb(,%ebx,8)$/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	89 $/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	8d 34 f5 28 00 00 00 	lea    0x28(,%esi,8),%esi$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	0f 00 de             	ltr    %si$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	b8 ac 33 12 f0       	mov    $0xf01233ac,%eax$/;"	l
f0103a8d	obj/kern/kernel.asm	/^f0103a8d:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103a90	obj/kern/kernel.asm	/^f0103a90:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	5b                   	pop    %ebx$/;"	l
f0103a94	obj/kern/kernel.asm	/^f0103a94:	5e                   	pop    %esi$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	5f                   	pop    %edi$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	5d                   	pop    %ebp$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	c3                   	ret    $/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98 <trap_init>:$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	55                   	push   %ebp$/;"	l
f0103a99	obj/kern/kernel.asm	/^f0103a99:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103a9e	obj/kern/kernel.asm	/^f0103a9e:	b8 8a 44 10 f0       	mov    $0xf010448a,%eax$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	66 a3 60 d2 32 f0    	mov    %ax,0xf032d260$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	66 c7 05 62 d2 32 f0 	movw   $0x8,0xf032d262$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	08 00 $/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	c6 05 64 d2 32 f0 00 	movb   $0x0,0xf032d264$/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	c6 05 65 d2 32 f0 8e 	movb   $0x8e,0xf032d265$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	66 a3 66 d2 32 f0    	mov    %ax,0xf032d266$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	b8 94 44 10 f0       	mov    $0xf0104494,%eax$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	66 a3 68 d2 32 f0    	mov    %ax,0xf032d268$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	66 c7 05 6a d2 32 f0 	movw   $0x8,0xf032d26a$/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	08 00 $/;"	l
f0103add	obj/kern/kernel.asm	/^f0103add:	c6 05 6c d2 32 f0 00 	movb   $0x0,0xf032d26c$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	c6 05 6d d2 32 f0 8e 	movb   $0x8e,0xf032d26d$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	66 a3 6e d2 32 f0    	mov    %ax,0xf032d26e$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	b8 9e 44 10 f0       	mov    $0xf010449e,%eax$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	66 a3 70 d2 32 f0    	mov    %ax,0xf032d270$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	66 c7 05 72 d2 32 f0 	movw   $0x8,0xf032d272$/;"	l
f0103b06	obj/kern/kernel.asm	/^f0103b06:	08 00 $/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	c6 05 74 d2 32 f0 00 	movb   $0x0,0xf032d274$/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	c6 05 75 d2 32 f0 8e 	movb   $0x8e,0xf032d275$/;"	l
f0103b16	obj/kern/kernel.asm	/^f0103b16:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	66 a3 76 d2 32 f0    	mov    %ax,0xf032d276$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	b8 a8 44 10 f0       	mov    $0xf01044a8,%eax$/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	66 a3 78 d2 32 f0    	mov    %ax,0xf032d278$/;"	l
f0103b2a	obj/kern/kernel.asm	/^f0103b2a:	66 c7 05 7a d2 32 f0 	movw   $0x8,0xf032d27a$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	08 00 $/;"	l
f0103b33	obj/kern/kernel.asm	/^f0103b33:	c6 05 7c d2 32 f0 00 	movb   $0x0,0xf032d27c$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	c6 05 7d d2 32 f0 ee 	movb   $0xee,0xf032d27d$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b44	obj/kern/kernel.asm	/^f0103b44:	66 a3 7e d2 32 f0    	mov    %ax,0xf032d27e$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	b8 ae 44 10 f0       	mov    $0xf01044ae,%eax$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	66 a3 80 d2 32 f0    	mov    %ax,0xf032d280$/;"	l
f0103b55	obj/kern/kernel.asm	/^f0103b55:	66 c7 05 82 d2 32 f0 	movw   $0x8,0xf032d282$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	08 00 $/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	c6 05 84 d2 32 f0 00 	movb   $0x0,0xf032d284$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	c6 05 85 d2 32 f0 8e 	movb   $0x8e,0xf032d285$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	66 a3 86 d2 32 f0    	mov    %ax,0xf032d286$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	b8 b4 44 10 f0       	mov    $0xf01044b4,%eax$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	66 a3 88 d2 32 f0    	mov    %ax,0xf032d288$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	66 c7 05 8a d2 32 f0 	movw   $0x8,0xf032d28a$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	08 00 $/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	c6 05 8c d2 32 f0 00 	movb   $0x0,0xf032d28c$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	c6 05 8d d2 32 f0 8e 	movb   $0x8e,0xf032d28d$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b9a	obj/kern/kernel.asm	/^f0103b9a:	66 a3 8e d2 32 f0    	mov    %ax,0xf032d28e$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	b8 ba 44 10 f0       	mov    $0xf01044ba,%eax$/;"	l
f0103ba5	obj/kern/kernel.asm	/^f0103ba5:	66 a3 90 d2 32 f0    	mov    %ax,0xf032d290$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	66 c7 05 92 d2 32 f0 	movw   $0x8,0xf032d292$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	08 00 $/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	c6 05 94 d2 32 f0 00 	movb   $0x0,0xf032d294$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	c6 05 95 d2 32 f0 8e 	movb   $0x8e,0xf032d295$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	66 a3 96 d2 32 f0    	mov    %ax,0xf032d296$/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	b8 c0 44 10 f0       	mov    $0xf01044c0,%eax$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	66 a3 98 d2 32 f0    	mov    %ax,0xf032d298$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	66 c7 05 9a d2 32 f0 	movw   $0x8,0xf032d29a$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	08 00 $/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	c6 05 9c d2 32 f0 00 	movb   $0x0,0xf032d29c$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	c6 05 9d d2 32 f0 8e 	movb   $0x8e,0xf032d29d$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bf0	obj/kern/kernel.asm	/^f0103bf0:	66 a3 9e d2 32 f0    	mov    %ax,0xf032d29e$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	b8 c6 44 10 f0       	mov    $0xf01044c6,%eax$/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	66 a3 a0 d2 32 f0    	mov    %ax,0xf032d2a0$/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	66 c7 05 a2 d2 32 f0 	movw   $0x8,0xf032d2a2$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	08 00 $/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	c6 05 a4 d2 32 f0 00 	movb   $0x0,0xf032d2a4$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	c6 05 a5 d2 32 f0 8e 	movb   $0x8e,0xf032d2a5$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	66 a3 a6 d2 32 f0    	mov    %ax,0xf032d2a6$/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	b8 ca 44 10 f0       	mov    $0xf01044ca,%eax$/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	66 a3 b0 d2 32 f0    	mov    %ax,0xf032d2b0$/;"	l
f0103c2c	obj/kern/kernel.asm	/^f0103c2c:	66 c7 05 b2 d2 32 f0 	movw   $0x8,0xf032d2b2$/;"	l
f0103c33	obj/kern/kernel.asm	/^f0103c33:	08 00 $/;"	l
f0103c35	obj/kern/kernel.asm	/^f0103c35:	c6 05 b4 d2 32 f0 00 	movb   $0x0,0xf032d2b4$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	c6 05 b5 d2 32 f0 8e 	movb   $0x8e,0xf032d2b5$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	66 a3 b6 d2 32 f0    	mov    %ax,0xf032d2b6$/;"	l
f0103c4c	obj/kern/kernel.asm	/^f0103c4c:	b8 ce 44 10 f0       	mov    $0xf01044ce,%eax$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	66 a3 b8 d2 32 f0    	mov    %ax,0xf032d2b8$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	66 c7 05 ba d2 32 f0 	movw   $0x8,0xf032d2ba$/;"	l
f0103c5e	obj/kern/kernel.asm	/^f0103c5e:	08 00 $/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	c6 05 bc d2 32 f0 00 	movb   $0x0,0xf032d2bc$/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	c6 05 bd d2 32 f0 8e 	movb   $0x8e,0xf032d2bd$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	66 a3 be d2 32 f0    	mov    %ax,0xf032d2be$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	b8 d2 44 10 f0       	mov    $0xf01044d2,%eax$/;"	l
f0103c7c	obj/kern/kernel.asm	/^f0103c7c:	66 a3 c0 d2 32 f0    	mov    %ax,0xf032d2c0$/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	66 c7 05 c2 d2 32 f0 	movw   $0x8,0xf032d2c2$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	08 00 $/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	c6 05 c4 d2 32 f0 00 	movb   $0x0,0xf032d2c4$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	c6 05 c5 d2 32 f0 8e 	movb   $0x8e,0xf032d2c5$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	66 a3 c6 d2 32 f0    	mov    %ax,0xf032d2c6$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	b8 d6 44 10 f0       	mov    $0xf01044d6,%eax$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	66 a3 c8 d2 32 f0    	mov    %ax,0xf032d2c8$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	66 c7 05 ca d2 32 f0 	movw   $0x8,0xf032d2ca$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	08 00 $/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	c6 05 cc d2 32 f0 00 	movb   $0x0,0xf032d2cc$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	c6 05 cd d2 32 f0 8e 	movb   $0x8e,0xf032d2cd$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	66 a3 ce d2 32 f0    	mov    %ax,0xf032d2ce$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	b8 da 44 10 f0       	mov    $0xf01044da,%eax$/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2:	66 a3 d0 d2 32 f0    	mov    %ax,0xf032d2d0$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	66 c7 05 d2 d2 32 f0 	movw   $0x8,0xf032d2d2$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	08 00 $/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	c6 05 d4 d2 32 f0 00 	movb   $0x0,0xf032d2d4$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	c6 05 d5 d2 32 f0 8e 	movb   $0x8e,0xf032d2d5$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	66 a3 d6 d2 32 f0    	mov    %ax,0xf032d2d6$/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	b8 de 44 10 f0       	mov    $0xf01044de,%eax$/;"	l
f0103cfd	obj/kern/kernel.asm	/^f0103cfd:	66 a3 e0 d2 32 f0    	mov    %ax,0xf032d2e0$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	66 c7 05 e2 d2 32 f0 	movw   $0x8,0xf032d2e2$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	08 00 $/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	c6 05 e4 d2 32 f0 00 	movb   $0x0,0xf032d2e4$/;"	l
f0103d13	obj/kern/kernel.asm	/^f0103d13:	c6 05 e5 d2 32 f0 8e 	movb   $0x8e,0xf032d2e5$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	66 a3 e6 d2 32 f0    	mov    %ax,0xf032d2e6$/;"	l
f0103d23	obj/kern/kernel.asm	/^f0103d23:	b8 e4 44 10 f0       	mov    $0xf01044e4,%eax$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	66 a3 e8 d2 32 f0    	mov    %ax,0xf032d2e8$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	66 c7 05 ea d2 32 f0 	movw   $0x8,0xf032d2ea$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	08 00 $/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	c6 05 ec d2 32 f0 00 	movb   $0x0,0xf032d2ec$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	c6 05 ed d2 32 f0 8e 	movb   $0x8e,0xf032d2ed$/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	66 a3 ee d2 32 f0    	mov    %ax,0xf032d2ee$/;"	l
f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	b8 e8 44 10 f0       	mov    $0xf01044e8,%eax$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	66 a3 f0 d2 32 f0    	mov    %ax,0xf032d2f0$/;"	l
f0103d59	obj/kern/kernel.asm	/^f0103d59:	66 c7 05 f2 d2 32 f0 	movw   $0x8,0xf032d2f2$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	08 00 $/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	c6 05 f4 d2 32 f0 00 	movb   $0x0,0xf032d2f4$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	c6 05 f5 d2 32 f0 8e 	movb   $0x8e,0xf032d2f5$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	66 a3 f6 d2 32 f0    	mov    %ax,0xf032d2f6$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	b8 ee 44 10 f0       	mov    $0xf01044ee,%eax$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	66 a3 f8 d2 32 f0    	mov    %ax,0xf032d2f8$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	66 c7 05 fa d2 32 f0 	movw   $0x8,0xf032d2fa$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	08 00 $/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	c6 05 fc d2 32 f0 00 	movb   $0x0,0xf032d2fc$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	c6 05 fd d2 32 f0 8e 	movb   $0x8e,0xf032d2fd$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	66 a3 fe d2 32 f0    	mov    %ax,0xf032d2fe$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4:	b8 f4 44 10 f0       	mov    $0xf01044f4,%eax$/;"	l
f0103da9	obj/kern/kernel.asm	/^f0103da9:	66 a3 e0 d3 32 f0    	mov    %ax,0xf032d3e0$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	66 c7 05 e2 d3 32 f0 	movw   $0x8,0xf032d3e2$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	08 00 $/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	c6 05 e4 d3 32 f0 00 	movb   $0x0,0xf032d3e4$/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	c6 05 e5 d3 32 f0 ee 	movb   $0xee,0xf032d3e5$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	66 a3 e6 d3 32 f0    	mov    %ax,0xf032d3e6$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	b8 fa 44 10 f0       	mov    $0xf01044fa,%eax$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	66 a3 00 e2 32 f0    	mov    %ax,0xf032e200$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	66 c7 05 02 e2 32 f0 	movw   $0x8,0xf032e202$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	08 00 $/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	c6 05 04 e2 32 f0 00 	movb   $0x0,0xf032e204$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	c6 05 05 e2 32 f0 8e 	movb   $0x8e,0xf032e205$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	66 a3 06 e2 32 f0    	mov    %ax,0xf032e206$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	b8 04 45 10 f0       	mov    $0xf0104504,%eax$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	66 a3 60 d3 32 f0    	mov    %ax,0xf032d360$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	66 c7 05 62 d3 32 f0 	movw   $0x8,0xf032d362$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	08 00 $/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	c6 05 64 d3 32 f0 00 	movb   $0x0,0xf032d364$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	c6 05 65 d3 32 f0 8e 	movb   $0x8e,0xf032d365$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	66 a3 66 d3 32 f0    	mov    %ax,0xf032d366$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	b8 0a 45 10 f0       	mov    $0xf010450a,%eax$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	66 a3 68 d3 32 f0    	mov    %ax,0xf032d368$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	66 c7 05 6a d3 32 f0 	movw   $0x8,0xf032d36a$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	08 00 $/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	c6 05 6c d3 32 f0 00 	movb   $0x0,0xf032d36c$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	c6 05 6d d3 32 f0 8e 	movb   $0x8e,0xf032d36d$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103e4a	obj/kern/kernel.asm	/^f0103e4a:	66 a3 6e d3 32 f0    	mov    %ax,0xf032d36e$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	b8 10 45 10 f0       	mov    $0xf0104510,%eax$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	66 a3 80 d3 32 f0    	mov    %ax,0xf032d380$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	66 c7 05 82 d3 32 f0 	movw   $0x8,0xf032d382$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	08 00 $/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	c6 05 84 d3 32 f0 00 	movb   $0x0,0xf032d384$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	c6 05 85 d3 32 f0 8e 	movb   $0x8e,0xf032d385$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	66 a3 86 d3 32 f0    	mov    %ax,0xf032d386$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	b8 16 45 10 f0       	mov    $0xf0104516,%eax$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	66 a3 98 d3 32 f0    	mov    %ax,0xf032d398$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	66 c7 05 9a d3 32 f0 	movw   $0x8,0xf032d39a$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	08 00 $/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	c6 05 9c d3 32 f0 00 	movb   $0x0,0xf032d39c$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	c6 05 9d d3 32 f0 8e 	movb   $0x8e,0xf032d39d$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	66 a3 9e d3 32 f0    	mov    %ax,0xf032d39e$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6:	b8 1c 45 10 f0       	mov    $0xf010451c,%eax$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	66 a3 d0 d3 32 f0    	mov    %ax,0xf032d3d0$/;"	l
f0103eb1	obj/kern/kernel.asm	/^f0103eb1:	66 c7 05 d2 d3 32 f0 	movw   $0x8,0xf032d3d2$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	08 00 $/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	c6 05 d4 d3 32 f0 00 	movb   $0x0,0xf032d3d4$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	c6 05 d5 d3 32 f0 8e 	movb   $0x8e,0xf032d3d5$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	66 a3 d6 d3 32 f0    	mov    %ax,0xf032d3d6$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	b8 22 45 10 f0       	mov    $0xf0104522,%eax$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	66 a3 f8 d3 32 f0    	mov    %ax,0xf032d3f8$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	66 c7 05 fa d3 32 f0 	movw   $0x8,0xf032d3fa$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	08 00 $/;"	l
f0103ee5	obj/kern/kernel.asm	/^f0103ee5:	c6 05 fc d3 32 f0 00 	movb   $0x0,0xf032d3fc$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec:	c6 05 fd d3 32 f0 8e 	movb   $0x8e,0xf032d3fd$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	66 a3 fe d3 32 f0    	mov    %ax,0xf032d3fe$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	e8 c9 fa ff ff       	call   f01039ca <trap_init_percpu>$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	c9                   	leave  $/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	c3                   	ret    $/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03 <print_regs>:$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	55                   	push   %ebp$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	53                   	push   %ebx$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	ff 33                	pushl  (%ebx)$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	68 bd 77 10 f0       	push   $0xf01077bd$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	e8 9d fa ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	68 cc 77 10 f0       	push   $0xf01077cc$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	e8 8d fa ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	68 db 77 10 f0       	push   $0xf01077db$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	e8 7d fa ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	68 ea 77 10 f0       	push   $0xf01077ea$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	e8 6d fa ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	68 f9 77 10 f0       	push   $0xf01077f9$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	e8 5d fa ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103f59	obj/kern/kernel.asm	/^f0103f59:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	68 08 78 10 f0       	push   $0xf0107808$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	e8 4d fa ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103f69	obj/kern/kernel.asm	/^f0103f69:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	68 17 78 10 f0       	push   $0xf0107817$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	e8 3d fa ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103f79	obj/kern/kernel.asm	/^f0103f79:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f7c	obj/kern/kernel.asm	/^f0103f7c:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	68 26 78 10 f0       	push   $0xf0107826$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	e8 2d fa ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	c9                   	leave  $/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	c3                   	ret    $/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91 <print_trapframe>:$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	55                   	push   %ebp$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	56                   	push   %esi$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	53                   	push   %ebx$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	e8 fc 1d 00 00       	call   f0105d9a <cpunum>$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	50                   	push   %eax$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	53                   	push   %ebx$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	68 8a 78 10 f0       	push   $0xf010788a$/;"	l
f0103fa8	obj/kern/kernel.asm	/^f0103fa8:	e8 09 fa ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103fad	obj/kern/kernel.asm	/^f0103fad:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	e8 4e ff ff ff       	call   f0103f03 <print_regs>$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103fbc	obj/kern/kernel.asm	/^f0103fbc:	50                   	push   %eax$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	68 a8 78 10 f0       	push   $0xf01078a8$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	e8 ef f9 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	50                   	push   %eax$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	68 bb 78 10 f0       	push   $0xf01078bb$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	e8 dd f9 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	0f 86 e1 00 00 00    	jbe    f01040c9 <print_trapframe+0x138>$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	ba 35 78 10 f0       	mov    $0xf0107835,%edx$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	74 13                	je     f0104005 <print_trapframe+0x74>$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	ba 41 78 10 f0       	mov    $0xf0107841,%edx$/;"	l
f0103ffd	obj/kern/kernel.asm	/^f0103ffd:	b9 50 78 10 f0       	mov    $0xf0107850,%ecx$/;"	l
f0104002	obj/kern/kernel.asm	/^f0104002:	0f 46 d1             	cmovbe %ecx,%edx$/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	52                   	push   %edx$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	50                   	push   %eax$/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	68 ce 78 10 f0       	push   $0xf01078ce$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	e8 a2 f9 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	39 1d 60 da 32 f0    	cmp    %ebx,0xf032da60$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	0f 84 b2 00 00 00    	je     f01040d5 <print_trapframe+0x144>$/;"	l
f0104023	obj/kern/kernel.asm	/^f0104023:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104026	obj/kern/kernel.asm	/^f0104026:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	68 ef 78 10 f0       	push   $0xf01078ef$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	e8 83 f9 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f010403a	obj/kern/kernel.asm	/^f010403a:	0f 85 b8 00 00 00    	jne    f01040f8 <print_trapframe+0x167>$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104043	obj/kern/kernel.asm	/^f0104043:	89 c2                	mov    %eax,%edx$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	83 e2 01             	and    $0x1,%edx$/;"	l
f0104048	obj/kern/kernel.asm	/^f0104048:	b9 63 78 10 f0       	mov    $0xf0107863,%ecx$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	ba 6e 78 10 f0       	mov    $0xf010786e,%edx$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	89 c2                	mov    %eax,%edx$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	83 e2 02             	and    $0x2,%edx$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	be 7a 78 10 f0       	mov    $0xf010787a,%esi$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	ba 80 78 10 f0       	mov    $0xf0107880,%edx$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	83 e0 04             	and    $0x4,%eax$/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	b8 85 78 10 f0       	mov    $0xf0107885,%eax$/;"	l
f010406f	obj/kern/kernel.asm	/^f010406f:	be d1 79 10 f0       	mov    $0xf01079d1,%esi$/;"	l
f0104074	obj/kern/kernel.asm	/^f0104074:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	51                   	push   %ecx$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	52                   	push   %edx$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	50                   	push   %eax$/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	68 fd 78 10 f0       	push   $0xf01078fd$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	e8 32 f9 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	68 0c 79 10 f0       	push   $0xf010790c$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	e8 1f f9 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0104097	obj/kern/kernel.asm	/^f0104097:	83 c4 08             	add    $0x8,%esp$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	50                   	push   %eax$/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	68 1b 79 10 f0       	push   $0xf010791b$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	e8 0d f9 ff ff       	call   f01039b6 <cprintf>$/;"	l
f01040a9	obj/kern/kernel.asm	/^f01040a9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040ac	obj/kern/kernel.asm	/^f01040ac:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	68 2e 79 10 f0       	push   $0xf010792e$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	e8 fd f8 ff ff       	call   f01039b6 <cprintf>$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	75 4b                	jne    f010410d <print_trapframe+0x17c>$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01040c5	obj/kern/kernel.asm	/^f01040c5:	5b                   	pop    %ebx$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	5e                   	pop    %esi$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	5d                   	pop    %ebp$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	c3                   	ret    $/;"	l
f01040c9	obj/kern/kernel.asm	/^f01040c9:	8b 14 85 40 7b 10 f0 	mov    -0xfef84c0(,%eax,4),%edx$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	e9 30 ff ff ff       	jmp    f0104005 <print_trapframe+0x74>$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01040d9	obj/kern/kernel.asm	/^f01040d9:	0f 85 44 ff ff ff    	jne    f0104023 <print_trapframe+0x92>$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	50                   	push   %eax$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	68 e0 78 10 f0       	push   $0xf01078e0$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	e8 c6 f8 ff ff       	call   f01039b6 <cprintf>$/;"	l
f01040f0	obj/kern/kernel.asm	/^f01040f0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	e9 2b ff ff ff       	jmp    f0104023 <print_trapframe+0x92>$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01040fb	obj/kern/kernel.asm	/^f01040fb:	68 83 76 10 f0       	push   $0xf0107683$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	e8 b1 f8 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	e9 7a ff ff ff       	jmp    f0104087 <print_trapframe+0xf6>$/;"	l
f010410d	obj/kern/kernel.asm	/^f010410d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104110	obj/kern/kernel.asm	/^f0104110:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0104113	obj/kern/kernel.asm	/^f0104113:	68 3d 79 10 f0       	push   $0xf010793d$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	e8 99 f8 ff ff       	call   f01039b6 <cprintf>$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	50                   	push   %eax$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	68 4c 79 10 f0       	push   $0xf010794c$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	e8 87 f8 ff ff       	call   f01039b6 <cprintf>$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	eb 8e                	jmp    f01040c2 <print_trapframe+0x131>$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134 <page_fault_handler>:$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	55                   	push   %ebp$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	89 e5                	mov    %esp,%ebp$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	57                   	push   %edi$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	56                   	push   %esi$/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	53                   	push   %ebx$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	74 5d                	je     f01041a6 <page_fault_handler+0x72>$/;"	l
f0104149	obj/kern/kernel.asm	/^f0104149:	e8 4c 1c 00 00       	call   f0105d9a <cpunum>$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	75 60                	jne    f01041bd <page_fault_handler+0x89>$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	e8 35 1c 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	57                   	push   %edi$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	56                   	push   %esi$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	68 1c 7b 10 f0       	push   $0xf0107b1c$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	e8 39 f8 ff ff       	call   f01039b6 <cprintf>$/;"	l
f010417d	obj/kern/kernel.asm	/^f010417d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	e8 0c fe ff ff       	call   f0103f91 <print_trapframe>$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	e8 10 1c 00 00       	call   f0105d9a <cpunum>$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	e8 54 f5 ff ff       	call   f01036ef <env_destroy>$/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	5b                   	pop    %ebx$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	5e                   	pop    %esi$/;"	l
f01041a3	obj/kern/kernel.asm	/^f01041a3:	5f                   	pop    %edi$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	5d                   	pop    %ebp$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	c3                   	ret    $/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	68 5f 79 10 f0       	push   $0xf010795f$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	68 6a 01 00 00       	push   $0x16a$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	68 76 79 10 f0       	push   $0xf0107976$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	e8 83 be ff ff       	call   f0100040 <_panic>$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f01041c6	obj/kern/kernel.asm	/^f01041c6:	bf cc ff bf ee       	mov    $0xeebfffcc,%edi$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	77 05                	ja     f01041d8 <page_fault_handler+0xa4>$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	83 e8 38             	sub    $0x38,%eax$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	89 c7                	mov    %eax,%edi$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	e8 bd 1b 00 00       	call   f0105d9a <cpunum>$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	6a 07                	push   $0x7$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	6a 34                	push   $0x34$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	57                   	push   %edi$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041e5	obj/kern/kernel.asm	/^f01041e5:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	e8 80 ee ff ff       	call   f0103070 <user_mem_assert>$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	89 fa                	mov    %edi,%edx$/;"	l
f01041f2	obj/kern/kernel.asm	/^f01041f2:	89 37                	mov    %esi,(%edi)$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01041f7	obj/kern/kernel.asm	/^f01041f7:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f01041fa	obj/kern/kernel.asm	/^f01041fa:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	89 de                	mov    %ebx,%esi$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	89 d7                	mov    %edx,%edi$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	e8 7b 1b 00 00       	call   f0105d9a <cpunum>$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f010422b	obj/kern/kernel.asm	/^f010422b:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	89 7b 3c             	mov    %edi,0x3c(%ebx)$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	e8 64 1b 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	e8 47 f5 ff ff       	call   f010378e <env_run>$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247 <trap>:$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	55                   	push   %ebp$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	89 e5                	mov    %esp,%ebp$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	57                   	push   %edi$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	56                   	push   %esi$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	fc                   	cld    $/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	83 3d 80 de 32 f0 00 	cmpl   $0x0,0xf032de80$/;"	l
f0104257	obj/kern/kernel.asm	/^f0104257:	74 01                	je     f010425a <trap+0x13>$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	f4                   	hlt    $/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	e8 3b 1b 00 00       	call   f0105d9a <cpunum>$/;"	l
f010425f	obj/kern/kernel.asm	/^f010425f:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	83 c2 04             	add    $0x4,%edx$/;"	l
f0104265	obj/kern/kernel.asm	/^f0104265:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	f0 87 82 20 e0 32 f0 	lock xchg %eax,-0xfcd1fe0(%edx)$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	0f 84 87 00 00 00    	je     f0104301 <trap+0xba>$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	9c                   	pushf  $/;"	l
f010427b	obj/kern/kernel.asm	/^f010427b:	58                   	pop    %eax$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	f6 c4 02             	test   $0x2,%ah$/;"	l
f010427f	obj/kern/kernel.asm	/^f010427f:	0f 85 91 00 00 00    	jne    f0104316 <trap+0xcf>$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	83 e0 03             	and    $0x3,%eax$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	0f 84 99 00 00 00    	je     f010432f <trap+0xe8>$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	89 35 60 da 32 f0    	mov    %esi,0xf032da60$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	0f 84 2c 01 00 00    	je     f01043d4 <trap+0x18d>$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	0f 84 3d 01 00 00    	je     f01043ee <trap+0x1a7>$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	0f 84 3e 01 00 00    	je     f01043f8 <trap+0x1b1>$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01042bd	obj/kern/kernel.asm	/^f01042bd:	0f 84 79 01 00 00    	je     f010443c <trap+0x1f5>$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	0f 84 62 01 00 00    	je     f010442e <trap+0x1e7>$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	56                   	push   %esi$/;"	l
f01042d0	obj/kern/kernel.asm	/^f01042d0:	e8 bc fc ff ff       	call   f0103f91 <print_trapframe>$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	0f 84 7a 01 00 00    	je     f010445d <trap+0x216>$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	e8 b2 1a 00 00       	call   f0105d9a <cpunum>$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	e8 f6 f3 ff ff       	call   f01036ef <env_destroy>$/;"	l
f01042f9	obj/kern/kernel.asm	/^f01042f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	e9 03 01 00 00       	jmp    f0104404 <trap+0x1bd>$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	68 c0 33 12 f0       	push   $0xf01233c0$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	e8 fc 1c 00 00       	call   f010600a <spin_lock>$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	e9 64 ff ff ff       	jmp    f010427a <trap+0x33>$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	68 82 79 10 f0       	push   $0xf0107982$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	68 33 01 00 00       	push   $0x133$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	68 76 79 10 f0       	push   $0xf0107976$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	e8 11 bd ff ff       	call   f0100040 <_panic>$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	68 c0 33 12 f0       	push   $0xf01233c0$/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	e8 ce 1c 00 00       	call   f010600a <spin_lock>$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	e8 59 1a 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	83 b8 28 e0 32 f0 00 	cmpl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	74 3e                	je     f010438e <trap+0x147>$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	e8 45 1a 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104358	obj/kern/kernel.asm	/^f0104358:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	74 43                	je     f01043a7 <trap+0x160>$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	e8 31 1a 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010436c	obj/kern/kernel.asm	/^f010436c:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	89 c7                	mov    %eax,%edi$/;"	l
f0104379	obj/kern/kernel.asm	/^f0104379:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	e8 1a 1a 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	8b b0 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%esi$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	e9 08 ff ff ff       	jmp    f0104296 <trap+0x4f>$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	68 9b 79 10 f0       	push   $0xf010799b$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	68 6e 73 10 f0       	push   $0xf010736e$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	68 3b 01 00 00       	push   $0x13b$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	68 76 79 10 f0       	push   $0xf0107976$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	e8 99 bc ff ff       	call   f0100040 <_panic>$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	e8 ee 19 00 00       	call   f0105d9a <cpunum>$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	e8 84 f1 ff ff       	call   f0103541 <env_free>$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	e8 d8 19 00 00       	call   f0105d9a <cpunum>$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	c7 80 28 e0 32 f0 00 	movl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	00 00 00 $/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	e8 2f 02 00 00       	call   f0104603 <sched_yield>$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	68 a2 79 10 f0       	push   $0xf01079a2$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	e8 d5 f5 ff ff       	call   f01039b6 <cprintf>$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	e8 a8 fb ff ff       	call   f0103f91 <print_trapframe>$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	eb 16                	jmp    f0104404 <trap+0x1bd>$/;"	l
f01043ee	obj/kern/kernel.asm	/^f01043ee:	e8 ee 1a 00 00       	call   f0105ee1 <lapic_eoi>$/;"	l
f01043f3	obj/kern/kernel.asm	/^f01043f3:	e8 0b 02 00 00       	call   f0104603 <sched_yield>$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043fb	obj/kern/kernel.asm	/^f01043fb:	56                   	push   %esi$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	e8 33 fd ff ff       	call   f0104134 <page_fault_handler>$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104404	obj/kern/kernel.asm	/^f0104404:	e8 91 19 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	83 b8 28 e0 32 f0 00 	cmpl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	74 14                	je     f0104429 <trap+0x1e2>$/;"	l
f0104415	obj/kern/kernel.asm	/^f0104415:	e8 80 19 00 00       	call   f0105d9a <cpunum>$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010441d	obj/kern/kernel.asm	/^f010441d:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104423	obj/kern/kernel.asm	/^f0104423:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	74 4b                	je     f0104474 <trap+0x22d>$/;"	l
f0104429	obj/kern/kernel.asm	/^f0104429:	e8 d5 01 00 00       	call   f0104603 <sched_yield>$/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	56                   	push   %esi$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	e8 4a c5 ff ff       	call   f0100981 <monitor>$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	83 c4 10             	add    $0x10,%esp$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	eb c8                	jmp    f0104404 <trap+0x1bd>$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010443f	obj/kern/kernel.asm	/^f010443f:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	ff 36                	pushl  (%esi)$/;"	l
f0104444	obj/kern/kernel.asm	/^f0104444:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f010444a	obj/kern/kernel.asm	/^f010444a:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	e8 1a 02 00 00       	call   f010466f <syscall>$/;"	l
f0104455	obj/kern/kernel.asm	/^f0104455:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104458	obj/kern/kernel.asm	/^f0104458:	83 c4 20             	add    $0x20,%esp$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	eb a7                	jmp    f0104404 <trap+0x1bd>$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	68 bf 79 10 f0       	push   $0xf01079bf$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	68 19 01 00 00       	push   $0x119$/;"	l
f010446a	obj/kern/kernel.asm	/^f010446a:	68 76 79 10 f0       	push   $0xf0107976$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	e8 cc bb ff ff       	call   f0100040 <_panic>$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	e8 21 19 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	e8 04 f3 ff ff       	call   f010378e <env_run>$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a <traphandler0>:$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	6a 00                	push   $0x0$/;"	l
f010448c	obj/kern/kernel.asm	/^f010448c:	6a 00                	push   $0x0$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	e9 95 00 00 00       	jmp    f0104528 <_alltraps>$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	90                   	nop$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494 <traphandler1>:$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	6a 00                	push   $0x0$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	6a 01                	push   $0x1$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	e9 8b 00 00 00       	jmp    f0104528 <_alltraps>$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	90                   	nop$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e <traphandler2>:$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	6a 00                	push   $0x0$/;"	l
f01044a0	obj/kern/kernel.asm	/^f01044a0:	6a 02                	push   $0x2$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	e9 81 00 00 00       	jmp    f0104528 <_alltraps>$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	90                   	nop$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8 <traphandler3>:$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	6a 00                	push   $0x0$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	6a 03                	push   $0x3$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	eb 7a                	jmp    f0104528 <_alltraps>$/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae <traphandler4>:$/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae:	6a 00                	push   $0x0$/;"	l
f01044b0	obj/kern/kernel.asm	/^f01044b0:	6a 04                	push   $0x4$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	eb 74                	jmp    f0104528 <_alltraps>$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4 <traphandler5>:$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	6a 00                	push   $0x0$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	6a 05                	push   $0x5$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	eb 6e                	jmp    f0104528 <_alltraps>$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba <traphandler6>:$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	6a 00                	push   $0x0$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	6a 06                	push   $0x6$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	eb 68                	jmp    f0104528 <_alltraps>$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0 <traphandler7>:$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	6a 00                	push   $0x0$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	6a 07                	push   $0x7$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	eb 62                	jmp    f0104528 <_alltraps>$/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6 <traphandler8>:$/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6:	6a 08                	push   $0x8$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	eb 5e                	jmp    f0104528 <_alltraps>$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca <traphandler10>:$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	6a 0a                	push   $0xa$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	eb 5a                	jmp    f0104528 <_alltraps>$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce <traphandler11>:$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	6a 0b                	push   $0xb$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	eb 56                	jmp    f0104528 <_alltraps>$/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2 <traphandler12>:$/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2:	6a 0c                	push   $0xc$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	eb 52                	jmp    f0104528 <_alltraps>$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6 <traphandler13>:$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	6a 0d                	push   $0xd$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	eb 4e                	jmp    f0104528 <_alltraps>$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da <traphandler14>:$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	6a 0e                	push   $0xe$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	eb 4a                	jmp    f0104528 <_alltraps>$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de <traphandler16>:$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	6a 00                	push   $0x0$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	6a 10                	push   $0x10$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	eb 44                	jmp    f0104528 <_alltraps>$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4 <traphandler17>:$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	6a 11                	push   $0x11$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	eb 40                	jmp    f0104528 <_alltraps>$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8 <traphandler18>:$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	6a 00                	push   $0x0$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	6a 12                	push   $0x12$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	eb 3a                	jmp    f0104528 <_alltraps>$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee <traphandler19>:$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	6a 00                	push   $0x0$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	6a 13                	push   $0x13$/;"	l
f01044f2	obj/kern/kernel.asm	/^f01044f2:	eb 34                	jmp    f0104528 <_alltraps>$/;"	l
f01044f4	obj/kern/kernel.asm	/^f01044f4 <traphandler48>:$/;"	l
f01044f4	obj/kern/kernel.asm	/^f01044f4:	6a 00                	push   $0x0$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	6a 30                	push   $0x30$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	eb 2e                	jmp    f0104528 <_alltraps>$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa <traphandler500>:$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	6a 00                	push   $0x0$/;"	l
f01044fc	obj/kern/kernel.asm	/^f01044fc:	68 f4 01 00 00       	push   $0x1f4$/;"	l
f0104501	obj/kern/kernel.asm	/^f0104501:	eb 25                	jmp    f0104528 <_alltraps>$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	90                   	nop$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504 <traphandler32>:$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	6a 00                	push   $0x0$/;"	l
f0104506	obj/kern/kernel.asm	/^f0104506:	6a 20                	push   $0x20$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	eb 1e                	jmp    f0104528 <_alltraps>$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a <traphandler33>:$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	6a 00                	push   $0x0$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	6a 21                	push   $0x21$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	eb 18                	jmp    f0104528 <_alltraps>$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510 <traphandler36>:$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	6a 00                	push   $0x0$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	6a 24                	push   $0x24$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	eb 12                	jmp    f0104528 <_alltraps>$/;"	l
f0104516	obj/kern/kernel.asm	/^f0104516 <traphandler39>:$/;"	l
f0104516	obj/kern/kernel.asm	/^f0104516:	6a 00                	push   $0x0$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	6a 27                	push   $0x27$/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	eb 0c                	jmp    f0104528 <_alltraps>$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c <traphandler46>:$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	6a 00                	push   $0x0$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	6a 2e                	push   $0x2e$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	eb 06                	jmp    f0104528 <_alltraps>$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522 <traphandler51>:$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	6a 00                	push   $0x0$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	6a 33                	push   $0x33$/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	eb 00                	jmp    f0104528 <_alltraps>$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528 <_alltraps>:$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	1e                   	push   %ds$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	06                   	push   %es$/;"	l
f010452a	obj/kern/kernel.asm	/^f010452a:	60                   	pusha  $/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010452f	obj/kern/kernel.asm	/^f010452f:	8e d8                	mov    %eax,%ds$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	8e c0                	mov    %eax,%es$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	54                   	push   %esp$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	e8 0e fd ff ff       	call   f0104247 <trap>$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539 <sched_halt>:$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	55                   	push   %ebp$/;"	l
f010453a	obj/kern/kernel.asm	/^f010453a:	89 e5                	mov    %esp,%ebp$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010453f	obj/kern/kernel.asm	/^f010453f:	a1 48 d2 32 f0       	mov    0xf032d248,%eax$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	8b 02                	mov    (%edx),%eax$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	76 2d                	jbe    f0104583 <sched_halt+0x4a>$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	75 e8                	jne    f010454c <sched_halt+0x13>$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	68 90 7b 10 f0       	push   $0xf0107b90$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	e8 45 f4 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	6a 00                	push   $0x0$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	e8 03 c4 ff ff       	call   f0100981 <monitor>$/;"	l
f010457e	obj/kern/kernel.asm	/^f010457e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	eb f1                	jmp    f0104574 <sched_halt+0x3b>$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	e8 12 18 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104588	obj/kern/kernel.asm	/^f0104588:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010458b	obj/kern/kernel.asm	/^f010458b:	c7 80 28 e0 32 f0 00 	movl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	00 00 00 $/;"	l
f0104595	obj/kern/kernel.asm	/^f0104595:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	76 50                	jbe    f01045f1 <sched_halt+0xb8>$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	e8 ec 17 00 00       	call   f0105d9a <cpunum>$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	83 c2 04             	add    $0x4,%edx$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	f0 87 82 20 e0 32 f0 	lock xchg %eax,-0xfcd1fe0(%edx)$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	68 c0 33 12 f0       	push   $0xf01233c0$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	e8 d9 1a 00 00       	call   f01060a6 <spin_unlock>$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	f3 90                	pause  $/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	e8 c6 17 00 00       	call   f0105d9a <cpunum>$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	8b 80 30 e0 32 f0    	mov    -0xfcd1fd0(%eax),%eax$/;"	l
f01045dd	obj/kern/kernel.asm	/^f01045dd:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	89 c4                	mov    %eax,%esp$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	6a 00                	push   $0x0$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	6a 00                	push   $0x0$/;"	l
f01045e8	obj/kern/kernel.asm	/^f01045e8:	fb                   	sti    $/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	f4                   	hlt    $/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	eb fd                	jmp    f01045e9 <sched_halt+0xb0>$/;"	l
f01045ec	obj/kern/kernel.asm	/^f01045ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	c9                   	leave  $/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	c3                   	ret    $/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	50                   	push   %eax$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	68 28 64 10 f0       	push   $0xf0106428$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	6a 60                	push   $0x60$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	68 b9 7b 10 f0       	push   $0xf0107bb9$/;"	l
f01045fe	obj/kern/kernel.asm	/^f01045fe:	e8 3d ba ff ff       	call   f0100040 <_panic>$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603 <sched_yield>:$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	55                   	push   %ebp$/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	89 e5                	mov    %esp,%ebp$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	56                   	push   %esi$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	53                   	push   %ebx$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	e8 8d 17 00 00       	call   f0105d9a <cpunum>$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	8b b0 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%esi$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	85 f6                	test   %esi,%esi$/;"	l
f010461d	obj/kern/kernel.asm	/^f010461d:	74 09                	je     f0104628 <sched_yield+0x25>$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	8b 4e 48             	mov    0x48(%esi),%ecx$/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx$/;"	l
f0104628	obj/kern/kernel.asm	/^f0104628:	8b 1d 48 d2 32 f0    	mov    0xf032d248,%ebx$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	89 c8                	mov    %ecx,%eax$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	6b d0 7c             	imul   $0x7c,%eax,%edx$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	01 da                	add    %ebx,%edx$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	83 7a 54 02          	cmpl   $0x2,0x54(%edx)$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	74 22                	je     f010465d <sched_yield+0x5a>$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	39 c1                	cmp    %eax,%ecx$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	75 e9                	jne    f0104630 <sched_yield+0x2d>$/;"	l
f0104647	obj/kern/kernel.asm	/^f0104647:	85 f6                	test   %esi,%esi$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	74 06                	je     f0104651 <sched_yield+0x4e>$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	83 7e 54 03          	cmpl   $0x3,0x54(%esi)$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	74 15                	je     f0104666 <sched_yield+0x63>$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	e8 e3 fe ff ff       	call   f0104539 <sched_halt>$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	5b                   	pop    %ebx$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	5e                   	pop    %esi$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	5d                   	pop    %ebp$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	c3                   	ret    $/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	52                   	push   %edx$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	e8 28 f1 ff ff       	call   f010378e <env_run>$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	56                   	push   %esi$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	e8 1f f1 ff ff       	call   f010378e <env_run>$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f <syscall>:$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	55                   	push   %ebp$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	89 e5                	mov    %esp,%ebp$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	57                   	push   %edi$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	56                   	push   %esi$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	53                   	push   %ebx$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010467e	obj/kern/kernel.asm	/^f010467e:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	0f 87 2d 05 00 00    	ja     f0104bb4 <syscall+0x545>$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	ff 24 85 c8 7b 10 f0 	jmp    *-0xfef8438(,%eax,4)$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	e8 07 17 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	6a 04                	push   $0x4$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	56                   	push   %esi$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	e8 c9 e9 ff ff       	call   f0103070 <user_mem_assert>$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	56                   	push   %esi$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	68 79 67 10 f0       	push   $0xf0106779$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	e8 fe f2 ff ff       	call   f01039b6 <cprintf>$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	89 d8                	mov    %ebx,%eax$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	5b                   	pop    %ebx$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	5e                   	pop    %esi$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	5f                   	pop    %edi$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	5d                   	pop    %ebp$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	c3                   	ret    $/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	e8 60 bf ff ff       	call   f010062f <cons_getc>$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	89 c3                	mov    %eax,%ebx$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	eb ed                	jmp    f01046c0 <syscall+0x51>$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	e8 c2 16 00 00       	call   f0105d9a <cpunum>$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	eb da                	jmp    f01046c0 <syscall+0x51>$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9:	6a 01                	push   $0x1$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	50                   	push   %eax$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	e8 30 ea ff ff       	call   f0103127 <envid2env>$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	89 c3                	mov    %eax,%ebx$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	85 c0                	test   %eax,%eax$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	78 c0                	js     f01046c0 <syscall+0x51>$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	e8 e4 ef ff ff       	call   f01036ef <env_destroy>$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	eb ab                	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104715	obj/kern/kernel.asm	/^f0104715:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	6a 01                	push   $0x1$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	e8 8c c8 ff ff       	call   f0100fab <page_alloc>$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	89 c7                	mov    %eax,%edi$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	85 c0                	test   %eax,%eax$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	74 78                	je     f01047a0 <syscall+0x131>$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	6a 01                	push   $0x1$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	50                   	push   %eax$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	e8 ee e9 ff ff       	call   f0103127 <envid2env>$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	83 c4 10             	add    $0x10,%esp$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	85 c0                	test   %eax,%eax$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	75 6a                	jne    f01047aa <syscall+0x13b>$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	81 fe ff ff bf ee    	cmp    $0xeebfffff,%esi$/;"	l
f0104746	obj/kern/kernel.asm	/^f0104746:	77 6c                	ja     f01047b4 <syscall+0x145>$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	81 e2 f8 f1 ff ff    	and    $0xfffff1f8,%edx$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	89 f0                	mov    %esi,%eax$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	09 c2                	or     %eax,%edx$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	75 62                	jne    f01047be <syscall+0x14f>$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	83 e0 05             	and    $0x5,%eax$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	75 61                	jne    f01047c8 <syscall+0x159>$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	56                   	push   %esi$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	57                   	push   %edi$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	e8 8a cb ff ff       	call   f0101301 <page_insert>$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	89 c3                	mov    %eax,%ebx$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	83 c4 10             	add    $0x10,%esp$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	85 c0                	test   %eax,%eax$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	0f 84 3c ff ff ff    	je     f01046c0 <syscall+0x51>$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	57                   	push   %edi$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	e8 8a c8 ff ff       	call   f010101d <page_free>$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f010479b	obj/kern/kernel.asm	/^f010479b:	e9 20 ff ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	e9 16 ff ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	e9 0c ff ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	e9 02 ff ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01047c3	obj/kern/kernel.asm	/^f01047c3:	e9 f8 fe ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	e9 ee fe ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	25 f8 f1 ff ff       	and    $0xfffff1f8,%eax$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	8b 55 1c             	mov    0x1c(%ebp),%edx$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	83 e2 05             	and    $0x5,%edx$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	83 fa 05             	cmp    $0x5,%edx$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	0f 85 b9 00 00 00    	jne    f01048a2 <syscall+0x233>$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	81 fe ff ff bf ee    	cmp    $0xeebfffff,%esi$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	0f 87 ad 00 00 00    	ja     f01048a2 <syscall+0x233>$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	89 f2                	mov    %esi,%edx$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	0f 87 a2 00 00 00    	ja     f01048ac <syscall+0x23d>$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	09 d0                	or     %edx,%eax$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	09 d0                	or     %edx,%eax$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	0f 85 99 00 00 00    	jne    f01048b6 <syscall+0x247>$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	6a 01                	push   $0x1$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	50                   	push   %eax$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	e8 f9 e8 ff ff       	call   f0103127 <envid2env>$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	85 c0                	test   %eax,%eax$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	0f 85 87 00 00 00    	jne    f01048c0 <syscall+0x251>$/;"	l
f0104839	obj/kern/kernel.asm	/^f0104839:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	6a 01                	push   $0x1$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	50                   	push   %eax$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	e8 dd e8 ff ff       	call   f0103127 <envid2env>$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010484d	obj/kern/kernel.asm	/^f010484d:	85 c0                	test   %eax,%eax$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	75 79                	jne    f01048ca <syscall+0x25b>$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104857	obj/kern/kernel.asm	/^f0104857:	50                   	push   %eax$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	56                   	push   %esi$/;"	l
f0104859	obj/kern/kernel.asm	/^f0104859:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	e8 b9 c9 ff ff       	call   f010121d <page_lookup>$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	85 c0                	test   %eax,%eax$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	74 69                	je     f01048d4 <syscall+0x265>$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	74 08                	je     f0104879 <syscall+0x20a>$/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104874	obj/kern/kernel.asm	/^f0104874:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	74 65                	je     f01048de <syscall+0x26f>$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	50                   	push   %eax$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	e8 76 ca ff ff       	call   f0101301 <page_insert>$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	89 c3                	mov    %eax,%ebx$/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	85 c0                	test   %eax,%eax$/;"	l
f0104892	obj/kern/kernel.asm	/^f0104892:	0f 84 28 fe ff ff    	je     f01046c0 <syscall+0x51>$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f010489d	obj/kern/kernel.asm	/^f010489d:	e9 1e fe ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	e9 14 fe ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	e9 0a fe ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	e9 00 fe ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	e9 f6 fd ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	e9 ec fd ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	e9 e2 fd ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01048de	obj/kern/kernel.asm	/^f01048de:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01048e3	obj/kern/kernel.asm	/^f01048e3:	e9 d8 fd ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	6a 01                	push   $0x1$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	50                   	push   %eax$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	e8 2e e8 ff ff       	call   f0103127 <envid2env>$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	89 c3                	mov    %eax,%ebx$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	85 c0                	test   %eax,%eax$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	75 27                	jne    f0104929 <syscall+0x2ba>$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	81 fe ff ff bf ee    	cmp    $0xeebfffff,%esi$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	77 29                	ja     f0104933 <syscall+0x2c4>$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	75 2b                	jne    f010493d <syscall+0x2ce>$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	56                   	push   %esi$/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	e8 9a c9 ff ff       	call   f01012bb <page_remove>$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	e9 97 fd ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	e9 8d fd ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	e9 83 fd ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	e9 79 fd ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104947	obj/kern/kernel.asm	/^f0104947:	e8 4e 14 00 00       	call   f0105d9a <cpunum>$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104952	obj/kern/kernel.asm	/^f0104952:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010495b	obj/kern/kernel.asm	/^f010495b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	50                   	push   %eax$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	e8 d2 e8 ff ff       	call   f0103236 <env_alloc>$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	89 c3                	mov    %eax,%ebx$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	85 c0                	test   %eax,%eax$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	0f 88 4f fd ff ff    	js     f01046c0 <syscall+0x51>$/;"	l
f0104971	obj/kern/kernel.asm	/^f0104971:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	e8 1a 14 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	8b b0 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%esi$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104991	obj/kern/kernel.asm	/^f0104991:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	e9 1b fd ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	8d 46 fe             	lea    -0x2(%esi),%eax$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	75 25                	jne    f01049d4 <syscall+0x365>$/;"	l
f01049af	obj/kern/kernel.asm	/^f01049af:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	6a 01                	push   $0x1$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	50                   	push   %eax$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	e8 67 e7 ff ff       	call   f0103127 <envid2env>$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	89 c3                	mov    %eax,%ebx$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	85 c0                	test   %eax,%eax$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	75 15                	jne    f01049de <syscall+0x36f>$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	89 70 54             	mov    %esi,0x54(%eax)$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	e9 ec fc ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	e9 e2 fc ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	e9 d8 fc ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	6a 01                	push   $0x1$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	50                   	push   %eax$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	e8 2e e7 ff ff       	call   f0103127 <envid2env>$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	89 c3                	mov    %eax,%ebx$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	85 c0                	test   %eax,%eax$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	75 0b                	jne    f0104a0d <syscall+0x39e>$/;"	l
f0104a02	obj/kern/kernel.asm	/^f0104a02:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	89 70 64             	mov    %esi,0x64(%eax)$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	e9 b3 fc ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	e9 a9 fc ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	e8 e7 fb ff ff       	call   f0104603 <sched_yield>$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	6a 00                	push   $0x0$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	50                   	push   %eax$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	e8 f3 e6 ff ff       	call   f0103127 <envid2env>$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	89 c3                	mov    %eax,%ebx$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	85 c0                	test   %eax,%eax$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	0f 88 7f fc ff ff    	js     f01046c0 <syscall+0x51>$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	0f 84 00 01 00 00    	je     f0104b4e <syscall+0x4df>$/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	e8 40 13 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	89 42 74             	mov    %eax,0x74(%edx)$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	89 72 70             	mov    %esi,0x70(%edx)$/;"	l
f0104a6f	obj/kern/kernel.asm	/^f0104a6f:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0104a76	obj/kern/kernel.asm	/^f0104a76:	0f 87 9f 00 00 00    	ja     f0104b1b <syscall+0x4ac>$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	81 7a 6c ff ff bf ee 	cmpl   $0xeebfffff,0x6c(%edx)$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	0f 87 92 00 00 00    	ja     f0104b1b <syscall+0x4ac>$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	0f 85 25 fc ff ff    	jne    f01046c0 <syscall+0x51>$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	83 e0 05             	and    $0x5,%eax$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	0f 85 16 fc ff ff    	jne    f01046c0 <syscall+0x51>$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	0f 85 09 fc ff ff    	jne    f01046c0 <syscall+0x51>$/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	e8 d7 12 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	52                   	push   %edx$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	e8 3f c7 ff ff       	call   f010121d <page_lookup>$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	85 c0                	test   %eax,%eax$/;"	l
f0104ae3	obj/kern/kernel.asm	/^f0104ae3:	74 55                	je     f0104b3a <syscall+0x4cb>$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	74 08                	je     f0104af3 <syscall+0x484>$/;"	l
f0104aeb	obj/kern/kernel.asm	/^f0104aeb:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104af1	obj/kern/kernel.asm	/^f0104af1:	74 51                	je     f0104b44 <syscall+0x4d5>$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104af6	obj/kern/kernel.asm	/^f0104af6:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	ff 72 6c             	pushl  0x6c(%edx)$/;"	l
f0104afc	obj/kern/kernel.asm	/^f0104afc:	50                   	push   %eax$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	ff 72 60             	pushl  0x60(%edx)$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	e8 fc c7 ff ff       	call   f0101301 <page_insert>$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	89 c3                	mov    %eax,%ebx$/;"	l
f0104b07	obj/kern/kernel.asm	/^f0104b07:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	85 c0                	test   %eax,%eax$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	0f 88 ae fb ff ff    	js     f01046c0 <syscall+0x51>$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0104b18	obj/kern/kernel.asm	/^f0104b18:	89 48 78             	mov    %ecx,0x78(%eax)$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	c6 40 68 00          	movb   $0x0,0x68(%eax)$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	e9 86 fb ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	e9 7c fb ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	e9 72 fb ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	e9 68 fb ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0104b5f	obj/kern/kernel.asm	/^f0104b5f:	77 27                	ja     f0104b88 <syscall+0x519>$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	74 0a                	je     f0104b74 <syscall+0x505>$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	e9 4c fb ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	e8 21 12 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	89 48 6c             	mov    %ecx,0x6c(%eax)$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	e8 0d 12 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f0104b9a	obj/kern/kernel.asm	/^f0104b9a:	e8 fb 11 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	e8 4f fa ff ff       	call   f0104603 <sched_yield>$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	e9 02 fb ff ff       	jmp    f01046c0 <syscall+0x51>$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe <stab_binsearch>:$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	55                   	push   %ebp$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	57                   	push   %edi$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	56                   	push   %esi$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	53                   	push   %ebx$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	eb 23                	jmp    f0104c06 <stab_binsearch+0x48>$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	eb 1e                	jmp    f0104c06 <stab_binsearch+0x48>$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	73 41                	jae    f0104c38 <stab_binsearch+0x7a>$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104bfa	obj/kern/kernel.asm	/^f0104bfa:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0104bff	obj/kern/kernel.asm	/^f0104bff:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	7f 5a                	jg     f0104c65 <stab_binsearch+0xa7>$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	01 d8                	add    %ebx,%eax$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	89 c7                	mov    %eax,%edi$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	01 c7                	add    %eax,%edi$/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	d1 ff                	sar    %edi$/;"	d
f0104c19	obj/kern/kernel.asm	/^f0104c19:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104c1f	obj/kern/kernel.asm	/^f0104c1f:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	89 f8                	mov    %edi,%eax$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	7f ba                	jg     f0104be3 <stab_binsearch+0x25>$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	39 f1                	cmp    %esi,%ecx$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	74 b5                	je     f0104be8 <stab_binsearch+0x2a>$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	eb ed                	jmp    f0104c25 <stab_binsearch+0x67>$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	76 14                	jbe    f0104c51 <stab_binsearch+0x93>$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104c43	obj/kern/kernel.asm	/^f0104c43:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46:	89 07                	mov    %eax,(%edi)$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	eb b5                	jmp    f0104c06 <stab_binsearch+0x48>$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	89 07                	mov    %eax,(%edi)$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	89 c3                	mov    %eax,%ebx$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	eb a1                	jmp    f0104c06 <stab_binsearch+0x48>$/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	75 15                	jne    f0104c80 <stab_binsearch+0xc2>$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	8b 00                	mov    (%eax),%eax$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104c73	obj/kern/kernel.asm	/^f0104c73:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	89 06                	mov    %eax,(%esi)$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	5b                   	pop    %ebx$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	5e                   	pop    %esi$/;"	l
f0104c7d	obj/kern/kernel.asm	/^f0104c7d:	5f                   	pop    %edi$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	5d                   	pop    %ebp$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	c3                   	ret    $/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	8b 00                	mov    (%eax),%eax$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	8d 54 97 04          	lea    0x4(%edi,%edx,4),%edx$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	eb 03                	jmp    f0104c99 <stab_binsearch+0xdb>$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	39 c1                	cmp    %eax,%ecx$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	7d 0a                	jge    f0104ca7 <stab_binsearch+0xe9>$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	75 ef                	jne    f0104c96 <stab_binsearch+0xd8>$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	89 06                	mov    %eax,(%esi)$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	eb ca                	jmp    f0104c78 <stab_binsearch+0xba>$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae <debuginfo_eip>:$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	55                   	push   %ebp$/;"	l
f0104caf	obj/kern/kernel.asm	/^f0104caf:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	57                   	push   %edi$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	56                   	push   %esi$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	53                   	push   %ebx$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	c7 03 00 7c 10 f0    	movl   $0xf0107c00,(%ebx)$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	c7 43 08 00 7c 10 f0 	movl   $0xf0107c00,0x8(%ebx)$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	0f 86 22 01 00 00    	jbe    f0104e10 <debuginfo_eip+0x162>$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	c7 45 b8 81 84 11 f0 	movl   $0xf0118481,-0x48(%ebp)$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	c7 45 b4 29 4c 11 f0 	movl   $0xf0114c29,-0x4c(%ebp)$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	be 28 4c 11 f0       	mov    $0xf0114c28,%esi$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	c7 45 bc 90 81 10 f0 	movl   $0xf0108190,-0x44(%ebp)$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	39 4d b4             	cmp    %ecx,-0x4c(%ebp)$/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	0f 83 61 02 00 00    	jae    f0104f75 <debuginfo_eip+0x2c7>$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	80 79 ff 00          	cmpb   $0x0,-0x1(%ecx)$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	0f 85 5e 02 00 00    	jne    f0104f7c <debuginfo_eip+0x2ce>$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	2b 75 bc             	sub    -0x44(%ebp),%esi$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	c1 fe 02             	sar    $0x2,%esi$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	69 c6 ab aa aa aa    	imul   $0xaaaaaaab,%esi,%eax$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	57                   	push   %edi$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	6a 64                	push   $0x64$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	89 d1                	mov    %edx,%ecx$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	8b 75 bc             	mov    -0x44(%ebp),%esi$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	89 f0                	mov    %esi,%eax$/;"	l
f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	e8 6f fe ff ff       	call   f0104bbe <stab_binsearch>$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	85 c0                	test   %eax,%eax$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	0f 84 26 02 00 00    	je     f0104f83 <debuginfo_eip+0x2d5>$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	57                   	push   %edi$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	6a 24                	push   $0x24$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	89 d1                	mov    %edx,%ecx$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	89 f0                	mov    %esi,%eax$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	e8 43 fe ff ff       	call   f0104bbe <stab_binsearch>$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	39 d0                	cmp    %edx,%eax$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	0f 8f 31 01 00 00    	jg     f0104ebd <debuginfo_eip+0x20f>$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0104d8f	obj/kern/kernel.asm	/^f0104d8f:	8d 34 8e             	lea    (%esi,%ecx,4),%esi$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	89 75 c4             	mov    %esi,-0x3c(%ebp)$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	8b 36                	mov    (%esi),%esi$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	2b 4d b4             	sub    -0x4c(%ebp),%ecx$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	39 ce                	cmp    %ecx,%esi$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	73 06                	jae    f0104da7 <debuginfo_eip+0xf9>$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	03 75 b4             	add    -0x4c(%ebp),%esi$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	89 73 08             	mov    %esi,0x8(%ebx)$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	8b 4e 08             	mov    0x8(%esi),%ecx$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	29 cf                	sub    %ecx,%edi$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	6a 3a                	push   $0x3a$/;"	l
f0104dbd	obj/kern/kernel.asm	/^f0104dbd:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	e8 b9 09 00 00       	call   f010577e <strfind>$/;"	l
f0104dc5	obj/kern/kernel.asm	/^f0104dc5:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	57                   	push   %edi$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	6a 44                	push   $0x44$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	8b 75 bc             	mov    -0x44(%ebp),%esi$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	89 f0                	mov    %esi,%eax$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	e8 dd fd ff ff       	call   f0104bbe <stab_binsearch>$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104de7	obj/kern/kernel.asm	/^f0104de7:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	0f 8f 9a 01 00 00    	jg     f0104f8a <debuginfo_eip+0x2dc>$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	89 d0                	mov    %edx,%eax$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0104df5	obj/kern/kernel.asm	/^f0104df5:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	0f b7 4c 16 06       	movzwl 0x6(%esi,%edx,1),%ecx$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	8d 54 16 04          	lea    0x4(%esi,%edx,1),%edx$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	e9 cb 00 00 00       	jmp    f0104edb <debuginfo_eip+0x22d>$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	e8 85 0f 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	6a 00                	push   $0x0$/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	6a 10                	push   $0x10$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	68 00 00 20 00       	push   $0x200000$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	e8 b1 e1 ff ff       	call   f0102fdd <user_mem_check>$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e2f	obj/kern/kernel.asm	/^f0104e2f:	85 c0                	test   %eax,%eax$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	0f 85 30 01 00 00    	jne    f0104f67 <debuginfo_eip+0x2b9>$/;"	l
f0104e37	obj/kern/kernel.asm	/^f0104e37:	8b 0d 00 00 20 00    	mov    0x200000,%ecx$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	89 4d bc             	mov    %ecx,-0x44(%ebp)$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	8b 35 04 00 20 00    	mov    0x200004,%esi$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	e8 3e 0f 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	6a 00                	push   $0x0$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	89 f2                	mov    %esi,%edx$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	29 ca                	sub    %ecx,%edx$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0104e6e	obj/kern/kernel.asm	/^f0104e6e:	52                   	push   %edx$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	51                   	push   %ecx$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	e8 5f e1 ff ff       	call   f0102fdd <user_mem_check>$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	85 c0                	test   %eax,%eax$/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	0f 85 e5 00 00 00    	jne    f0104f6e <debuginfo_eip+0x2c0>$/;"	l
f0104e89	obj/kern/kernel.asm	/^f0104e89:	e8 0c 0f 00 00       	call   f0105d9a <cpunum>$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	6a 00                	push   $0x0$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	8b 4d b4             	mov    -0x4c(%ebp),%ecx$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	29 ca                	sub    %ecx,%edx$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	52                   	push   %edx$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	51                   	push   %ecx$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	ff b0 28 e0 32 f0    	pushl  -0xfcd1fd8(%eax)$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	e8 35 e1 ff ff       	call   f0102fdd <user_mem_check>$/;"	l
f0104ea8	obj/kern/kernel.asm	/^f0104ea8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	85 c0                	test   %eax,%eax$/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	0f 84 55 fe ff ff    	je     f0104d08 <debuginfo_eip+0x5a>$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	e9 d9 00 00 00       	jmp    f0104f96 <debuginfo_eip+0x2e8>$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104ec9	obj/kern/kernel.asm	/^f0104ec9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	e9 e7 fe ff ff       	jmp    f0104db8 <debuginfo_eip+0x10a>$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104ed7	obj/kern/kernel.asm	/^f0104ed7:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	39 c7                	cmp    %eax,%edi$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	7f 45                	jg     f0104f27 <debuginfo_eip+0x279>$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	74 19                	je     f0104f03 <debuginfo_eip+0x255>$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	75 e2                	jne    f0104ed1 <debuginfo_eip+0x223>$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	83 7a 04 00          	cmpl   $0x0,0x4(%edx)$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	74 dc                	je     f0104ed1 <debuginfo_eip+0x223>$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	74 11                	je     f0104f0c <debuginfo_eip+0x25e>$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0104f01	obj/kern/kernel.asm	/^f0104f01:	eb 09                	jmp    f0104f0c <debuginfo_eip+0x25e>$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	74 03                	je     f0104f0c <debuginfo_eip+0x25e>$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	8b 7d b4             	mov    -0x4c(%ebp),%edi$/;"	l
f0104f1b	obj/kern/kernel.asm	/^f0104f1b:	29 f8                	sub    %edi,%eax$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	39 c2                	cmp    %eax,%edx$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	73 06                	jae    f0104f27 <debuginfo_eip+0x279>$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	89 f8                	mov    %edi,%eax$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	01 d0                	add    %edx,%eax$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	39 f2                	cmp    %esi,%edx$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	7d 60                	jge    f0104f96 <debuginfo_eip+0x2e8>$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	89 d0                	mov    %edx,%eax$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	8d 54 97 04          	lea    0x4(%edi,%edx,4),%edx$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	eb 04                	jmp    f0104f4e <debuginfo_eip+0x2a0>$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	39 c6                	cmp    %eax,%esi$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	7e 3f                	jle    f0104f91 <debuginfo_eip+0x2e3>$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	74 ea                	je     f0104f4a <debuginfo_eip+0x29c>$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f65	obj/kern/kernel.asm	/^f0104f65:	eb 2f                	jmp    f0104f96 <debuginfo_eip+0x2e8>$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	eb 28                	jmp    f0104f96 <debuginfo_eip+0x2e8>$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	eb 21                	jmp    f0104f96 <debuginfo_eip+0x2e8>$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	eb 1a                	jmp    f0104f96 <debuginfo_eip+0x2e8>$/;"	l
f0104f7c	obj/kern/kernel.asm	/^f0104f7c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	eb 13                	jmp    f0104f96 <debuginfo_eip+0x2e8>$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	eb 0c                	jmp    f0104f96 <debuginfo_eip+0x2e8>$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	eb 05                	jmp    f0104f96 <debuginfo_eip+0x2e8>$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	5b                   	pop    %ebx$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	5e                   	pop    %esi$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	5f                   	pop    %edi$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	5d                   	pop    %ebp$/;"	l
f0104f9d	obj/kern/kernel.asm	/^f0104f9d:	c3                   	ret    $/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e <printnum>:$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	55                   	push   %ebp$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	57                   	push   %edi$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	56                   	push   %esi$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	53                   	push   %ebx$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	89 c7                	mov    %eax,%edi$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	89 d6                	mov    %edx,%esi$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104fae	obj/kern/kernel.asm	/^f0104fae:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104fb1	obj/kern/kernel.asm	/^f0104fb1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	89 d0                	mov    %edx,%eax$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	1b 45 e4             	sbb    -0x1c(%ebp),%eax$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	73 15                	jae    f0104fe7 <printnum+0x49>$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	85 db                	test   %ebx,%ebx$/;"	l
f0104fd7	obj/kern/kernel.asm	/^f0104fd7:	7e 43                	jle    f010501c <printnum+0x7e>$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	56                   	push   %esi$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	ff d7                	call   *%edi$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	eb eb                	jmp    f0104fd2 <printnum+0x34>$/;"	l
f0104fe7	obj/kern/kernel.asm	/^f0104fe7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	53                   	push   %ebx$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104ff7	obj/kern/kernel.asm	/^f0104ff7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104ffd	obj/kern/kernel.asm	/^f0104ffd:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	e8 85 11 00 00       	call   f0106190 <__udivdi3>$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	83 c4 18             	add    $0x18,%esp$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	52                   	push   %edx$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	50                   	push   %eax$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	89 f2                	mov    %esi,%edx$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	89 f8                	mov    %edi,%eax$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	e8 85 ff ff ff       	call   f0104f9e <printnum>$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	83 c4 20             	add    $0x20,%esp$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	56                   	push   %esi$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	e8 6c 12 00 00       	call   f01062a0 <__umoddi3>$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	0f be 80 0a 7c 10 f0 	movsbl -0xfef83f6(%eax),%eax$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	50                   	push   %eax$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	ff d7                	call   *%edi$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	5b                   	pop    %ebx$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	5e                   	pop    %esi$/;"	l
f0105049	obj/kern/kernel.asm	/^f0105049:	5f                   	pop    %edi$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	5d                   	pop    %ebp$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	c3                   	ret    $/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c <sprintputch>:$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	55                   	push   %ebp$/;"	l
f010504d	obj/kern/kernel.asm	/^f010504d:	89 e5                	mov    %esp,%ebp$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105052	obj/kern/kernel.asm	/^f0105052:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	8b 10                	mov    (%eax),%edx$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	73 0a                	jae    f0105067 <sprintputch+0x1b>$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	88 02                	mov    %al,(%edx)$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	5d                   	pop    %ebp$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	c3                   	ret    $/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069 <printfmt>:$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	55                   	push   %ebp$/;"	l
f010506a	obj/kern/kernel.asm	/^f010506a:	89 e5                	mov    %esp,%ebp$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010506f	obj/kern/kernel.asm	/^f010506f:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	50                   	push   %eax$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010507c	obj/kern/kernel.asm	/^f010507c:	e8 05 00 00 00       	call   f0105086 <vprintfmt>$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105084	obj/kern/kernel.asm	/^f0105084:	c9                   	leave  $/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	c3                   	ret    $/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086 <vprintfmt>:$/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086:	55                   	push   %ebp$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	89 e5                	mov    %esp,%ebp$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	57                   	push   %edi$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	56                   	push   %esi$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	53                   	push   %ebx$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	eb 0a                	jmp    f01050a4 <vprintfmt+0x1e>$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	53                   	push   %ebx$/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	50                   	push   %eax$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	ff d6                	call   *%esi$/;"	l
f01050a1	obj/kern/kernel.asm	/^f01050a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	83 c7 01             	add    $0x1,%edi$/;"	l
f01050a7	obj/kern/kernel.asm	/^f01050a7:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	74 0c                	je     f01050bc <vprintfmt+0x36>$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	85 c0                	test   %eax,%eax$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	75 e6                	jne    f010509a <vprintfmt+0x14>$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	5b                   	pop    %ebx$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	5e                   	pop    %esi$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	5f                   	pop    %edi$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	5d                   	pop    %ebp$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	c3                   	ret    $/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	c6 45 d3 20          	movb   $0x20,-0x2d(%ebp)$/;"	l
f01050c0	obj/kern/kernel.asm	/^f01050c0:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f01050c7	obj/kern/kernel.asm	/^f01050c7:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%ebp)$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	0f b6 17             	movzbl (%edi),%edx$/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	3c 55                	cmp    $0x55,%al$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	0f 87 ba 03 00 00    	ja     f01054a8 <vprintfmt+0x422>$/;"	l
f01050ee	obj/kern/kernel.asm	/^f01050ee:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	ff 24 85 40 7d 10 f0 	jmp    *-0xfef82c0(,%eax,4)$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	c6 45 d3 2d          	movb   $0x2d,-0x2d(%ebp)$/;"	l
f01050ff	obj/kern/kernel.asm	/^f01050ff:	eb d9                	jmp    f01050da <vprintfmt+0x54>$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	c6 45 d3 30          	movb   $0x30,-0x2d(%ebp)$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	eb d0                	jmp    f01050da <vprintfmt+0x54>$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010511b	obj/kern/kernel.asm	/^f010511b:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0105122	obj/kern/kernel.asm	/^f0105122:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	77 55                	ja     f010517f <vprintfmt+0xf9>$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	83 c7 01             	add    $0x1,%edi$/;"	l
f010512d	obj/kern/kernel.asm	/^f010512d:	eb e9                	jmp    f0105118 <vprintfmt+0x92>$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	8b 00                	mov    (%eax),%eax$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105137	obj/kern/kernel.asm	/^f0105137:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	79 91                	jns    f01050da <vprintfmt+0x54>$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010514f	obj/kern/kernel.asm	/^f010514f:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%ebp)$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	eb 82                	jmp    f01050da <vprintfmt+0x54>$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	85 c0                	test   %eax,%eax$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	e9 6a ff ff ff       	jmp    f01050da <vprintfmt+0x54>$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	e9 5b ff ff ff       	jmp    f01050da <vprintfmt+0x54>$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	eb bc                	jmp    f0105143 <vprintfmt+0xbd>$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	e9 48 ff ff ff       	jmp    f01050da <vprintfmt+0x54>$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010519b	obj/kern/kernel.asm	/^f010519b:	53                   	push   %ebx$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	ff 30                	pushl  (%eax)$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	ff d6                	call   *%esi$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	e9 9c 02 00 00       	jmp    f0105447 <vprintfmt+0x3c1>$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	8b 00                	mov    (%eax),%eax$/;"	l
f01051b3	obj/kern/kernel.asm	/^f01051b3:	99                   	cltd   $/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	31 d0                	xor    %edx,%eax$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	29 d0                	sub    %edx,%eax$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	7f 23                	jg     f01051e0 <vprintfmt+0x15a>$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	8b 14 85 a0 7e 10 f0 	mov    -0xfef8160(,%eax,4),%edx$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	85 d2                	test   %edx,%edx$/;"	l
f01051c6	obj/kern/kernel.asm	/^f01051c6:	74 18                	je     f01051e0 <vprintfmt+0x15a>$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	52                   	push   %edx$/;"	l
f01051c9	obj/kern/kernel.asm	/^f01051c9:	68 80 73 10 f0       	push   $0xf0107380$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	53                   	push   %ebx$/;"	l
f01051cf	obj/kern/kernel.asm	/^f01051cf:	56                   	push   %esi$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	e8 94 fe ff ff       	call   f0105069 <printfmt>$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	e9 67 02 00 00       	jmp    f0105447 <vprintfmt+0x3c1>$/;"	l
f01051e0	obj/kern/kernel.asm	/^f01051e0:	50                   	push   %eax$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	68 22 7c 10 f0       	push   $0xf0107c22$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	53                   	push   %ebx$/;"	l
f01051e7	obj/kern/kernel.asm	/^f01051e7:	56                   	push   %esi$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	e8 7c fe ff ff       	call   f0105069 <printfmt>$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	e9 4f 02 00 00       	jmp    f0105447 <vprintfmt+0x3c1>$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	83 c0 04             	add    $0x4,%eax$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	8b 10                	mov    (%eax),%edx$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	85 d2                	test   %edx,%edx$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	b8 1b 7c 10 f0       	mov    $0xf0107c1b,%eax$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	7e 06                	jle    f010521f <vprintfmt+0x199>$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	80 7d d3 2d          	cmpb   $0x2d,-0x2d(%ebp)$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	75 0d                	jne    f010522c <vprintfmt+0x1a6>$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	89 c7                	mov    %eax,%edi$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	03 45 e0             	add    -0x20(%ebp),%eax$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	eb 3f                	jmp    f010526b <vprintfmt+0x1e5>$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	50                   	push   %eax$/;"	l
f0105233	obj/kern/kernel.asm	/^f0105233:	e8 fb 03 00 00       	call   f0105633 <strnlen>$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	29 c2                	sub    %eax,%edx$/;"	l
f010523d	obj/kern/kernel.asm	/^f010523d:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	89 d7                	mov    %edx,%edi$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	0f be 45 d3          	movsbl -0x2d(%ebp),%eax$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	85 ff                	test   %edi,%edi$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	7e 58                	jle    f01052a8 <vprintfmt+0x222>$/;"	l
f0105250	obj/kern/kernel.asm	/^f0105250:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	53                   	push   %ebx$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	ff d6                	call   *%esi$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010525c	obj/kern/kernel.asm	/^f010525c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	eb eb                	jmp    f010524c <vprintfmt+0x1c6>$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	53                   	push   %ebx$/;"	l
f0105265	obj/kern/kernel.asm	/^f0105265:	52                   	push   %edx$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	ff d6                	call   *%esi$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	83 c4 10             	add    $0x10,%esp$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	29 f9                	sub    %edi,%ecx$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	83 c7 01             	add    $0x1,%edi$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0105277	obj/kern/kernel.asm	/^f0105277:	0f be d0             	movsbl %al,%edx$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	85 d2                	test   %edx,%edx$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	74 45                	je     f01052c3 <vprintfmt+0x23d>$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	78 06                	js     f010528a <vprintfmt+0x204>$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	83 6d d8 01          	subl   $0x1,-0x28(%ebp)$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	78 35                	js     f01052bf <vprintfmt+0x239>$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	74 d1                	je     f0105261 <vprintfmt+0x1db>$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	0f be c0             	movsbl %al,%eax$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	76 c6                	jbe    f0105261 <vprintfmt+0x1db>$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	53                   	push   %ebx$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	6a 3f                	push   $0x3f$/;"	l
f01052a1	obj/kern/kernel.asm	/^f01052a1:	ff d6                	call   *%esi$/;"	l
f01052a3	obj/kern/kernel.asm	/^f01052a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	eb c3                	jmp    f010526b <vprintfmt+0x1e5>$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	85 d2                	test   %edx,%edx$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f01052b5	obj/kern/kernel.asm	/^f01052b5:	29 c2                	sub    %eax,%edx$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	e9 60 ff ff ff       	jmp    f010521f <vprintfmt+0x199>$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	89 cf                	mov    %ecx,%edi$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	eb 02                	jmp    f01052c5 <vprintfmt+0x23f>$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	89 cf                	mov    %ecx,%edi$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	85 ff                	test   %edi,%edi$/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7:	7e 10                	jle    f01052d9 <vprintfmt+0x253>$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052cc	obj/kern/kernel.asm	/^f01052cc:	53                   	push   %ebx$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	6a 20                	push   $0x20$/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf:	ff d6                	call   *%esi$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052d7	obj/kern/kernel.asm	/^f01052d7:	eb ec                	jmp    f01052c5 <vprintfmt+0x23f>$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	e9 63 01 00 00       	jmp    f0105447 <vprintfmt+0x3c1>$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01052e7	obj/kern/kernel.asm	/^f01052e7:	7f 1b                	jg     f0105304 <vprintfmt+0x27e>$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	85 c9                	test   %ecx,%ecx$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	74 63                	je     f0105350 <vprintfmt+0x2ca>$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	8b 00                	mov    (%eax),%eax$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	99                   	cltd   $/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01052ff	obj/kern/kernel.asm	/^f01052ff:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	eb 17                	jmp    f010531b <vprintfmt+0x295>$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	8b 00                	mov    (%eax),%eax$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010530f	obj/kern/kernel.asm	/^f010530f:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	85 c9                	test   %ecx,%ecx$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	0f 89 ff 00 00 00    	jns    f010542d <vprintfmt+0x3a7>$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	53                   	push   %ebx$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	6a 2d                	push   $0x2d$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	ff d6                	call   *%esi$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	f7 da                	neg    %edx$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f0105341	obj/kern/kernel.asm	/^f0105341:	f7 d9                	neg    %ecx$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	e9 dd 00 00 00       	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	8b 00                	mov    (%eax),%eax$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	99                   	cltd   $/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	eb b4                	jmp    f010531b <vprintfmt+0x295>$/;"	l
f0105367	obj/kern/kernel.asm	/^f0105367:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010536a	obj/kern/kernel.asm	/^f010536a:	7f 1e                	jg     f010538a <vprintfmt+0x304>$/;"	l
f010536c	obj/kern/kernel.asm	/^f010536c:	85 c9                	test   %ecx,%ecx$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	74 32                	je     f01053a2 <vprintfmt+0x31c>$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	8b 10                	mov    (%eax),%edx$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	e9 a3 00 00 00       	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	8b 10                	mov    (%eax),%edx$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	e9 8b 00 00 00       	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	8b 10                	mov    (%eax),%edx$/;"	l
f01053a7	obj/kern/kernel.asm	/^f01053a7:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01053af	obj/kern/kernel.asm	/^f01053af:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01053b2	obj/kern/kernel.asm	/^f01053b2:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	eb 74                	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f01053b9	obj/kern/kernel.asm	/^f01053b9:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	7f 1b                	jg     f01053d9 <vprintfmt+0x353>$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	85 c9                	test   %ecx,%ecx$/;"	l
f01053c0	obj/kern/kernel.asm	/^f01053c0:	74 2c                	je     f01053ee <vprintfmt+0x368>$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053c5	obj/kern/kernel.asm	/^f01053c5:	8b 10                	mov    (%eax),%edx$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	eb 54                	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	8b 10                	mov    (%eax),%edx$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	eb 3f                	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	8b 10                	mov    (%eax),%edx$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	eb 28                	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	53                   	push   %ebx$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	6a 30                	push   $0x30$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	ff d6                	call   *%esi$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	53                   	push   %ebx$/;"	l
f0105411	obj/kern/kernel.asm	/^f0105411:	6a 78                	push   $0x78$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	ff d6                	call   *%esi$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	8b 10                	mov    (%eax),%edx$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	0f be 7d d3          	movsbl -0x2d(%ebp),%edi$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	57                   	push   %edi$/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	50                   	push   %eax$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	51                   	push   %ecx$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	52                   	push   %edx$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	89 da                	mov    %ebx,%edx$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	89 f0                	mov    %esi,%eax$/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	e8 5a fb ff ff       	call   f0104f9e <printnum>$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	e9 55 fc ff ff       	jmp    f01050a4 <vprintfmt+0x1e>$/;"	l
f010544f	obj/kern/kernel.asm	/^f010544f:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	7f 1b                	jg     f010546f <vprintfmt+0x3e9>$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	85 c9                	test   %ecx,%ecx$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	74 2c                	je     f0105484 <vprintfmt+0x3fe>$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	8b 10                	mov    (%eax),%edx$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105462	obj/kern/kernel.asm	/^f0105462:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010546d	obj/kern/kernel.asm	/^f010546d:	eb be                	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	8b 10                	mov    (%eax),%edx$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010547d	obj/kern/kernel.asm	/^f010547d:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	eb a9                	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105487	obj/kern/kernel.asm	/^f0105487:	8b 10                	mov    (%eax),%edx$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105491	obj/kern/kernel.asm	/^f0105491:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	eb 92                	jmp    f010542d <vprintfmt+0x3a7>$/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	53                   	push   %ebx$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	6a 25                	push   $0x25$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	ff d6                	call   *%esi$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	eb 9f                	jmp    f0105447 <vprintfmt+0x3c1>$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	53                   	push   %ebx$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	6a 25                	push   $0x25$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	ff d6                	call   *%esi$/;"	l
f01054b0	obj/kern/kernel.asm	/^f01054b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054b3	obj/kern/kernel.asm	/^f01054b3:	89 f8                	mov    %edi,%eax$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	eb 03                	jmp    f01054ba <vprintfmt+0x434>$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	75 f7                	jne    f01054b7 <vprintfmt+0x431>$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01054c3	obj/kern/kernel.asm	/^f01054c3:	eb 82                	jmp    f0105447 <vprintfmt+0x3c1>$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5 <vsnprintf>:$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	55                   	push   %ebp$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01054d4	obj/kern/kernel.asm	/^f01054d4:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	85 c0                	test   %eax,%eax$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	74 26                	je     f010550c <vsnprintf+0x47>$/;"	l
f01054e6	obj/kern/kernel.asm	/^f01054e6:	85 d2                	test   %edx,%edx$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	7e 22                	jle    f010550c <vsnprintf+0x47>$/;"	l
f01054ea	obj/kern/kernel.asm	/^f01054ea:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01054ed	obj/kern/kernel.asm	/^f01054ed:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01054f0	obj/kern/kernel.asm	/^f01054f0:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01054f3	obj/kern/kernel.asm	/^f01054f3:	50                   	push   %eax$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	68 4c 50 10 f0       	push   $0xf010504c$/;"	l
f01054f9	obj/kern/kernel.asm	/^f01054f9:	e8 88 fb ff ff       	call   f0105086 <vprintfmt>$/;"	l
f01054fe	obj/kern/kernel.asm	/^f01054fe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	83 c4 10             	add    $0x10,%esp$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	c9                   	leave  $/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	c3                   	ret    $/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	eb f7                	jmp    f010550a <vsnprintf+0x45>$/;"	l
f0105513	obj/kern/kernel.asm	/^f0105513 <snprintf>:$/;"	l
f0105513	obj/kern/kernel.asm	/^f0105513:	55                   	push   %ebp$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	89 e5                	mov    %esp,%ebp$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	50                   	push   %eax$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	e8 9a ff ff ff       	call   f01054c5 <vsnprintf>$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	c9                   	leave  $/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	c3                   	ret    $/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d <readline>:$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	55                   	push   %ebp$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	57                   	push   %edi$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	56                   	push   %esi$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	53                   	push   %ebx$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	85 c0                	test   %eax,%eax$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	74 11                	je     f010554e <readline+0x21>$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	50                   	push   %eax$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	68 80 73 10 f0       	push   $0xf0107380$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	e8 6b e4 ff ff       	call   f01039b6 <cprintf>$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	6a 00                	push   $0x0$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	e8 87 b2 ff ff       	call   f01007df <iscons>$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	89 c7                	mov    %eax,%edi$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010555d	obj/kern/kernel.asm	/^f010555d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	eb 57                	jmp    f01055bb <readline+0x8e>$/;"	l
f0105564	obj/kern/kernel.asm	/^f0105564:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	75 08                	jne    f0105576 <readline+0x49>$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	5b                   	pop    %ebx$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	5e                   	pop    %esi$/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	5f                   	pop    %edi$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	5d                   	pop    %ebp$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	c3                   	ret    $/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	53                   	push   %ebx$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	68 ff 7e 10 f0       	push   $0xf0107eff$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	e8 32 e4 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105584	obj/kern/kernel.asm	/^f0105584:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	eb e0                	jmp    f010556e <readline+0x41>$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e:	85 ff                	test   %edi,%edi$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	75 05                	jne    f0105597 <readline+0x6a>$/;"	l
f0105592	obj/kern/kernel.asm	/^f0105592:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105595	obj/kern/kernel.asm	/^f0105595:	eb 24                	jmp    f01055bb <readline+0x8e>$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	6a 08                	push   $0x8$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	e8 1d b2 ff ff       	call   f01007be <cputchar>$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	eb ec                	jmp    f0105592 <readline+0x65>$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	53                   	push   %ebx$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	e8 0f b2 ff ff       	call   f01007be <cputchar>$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2:	88 9e 80 da 32 f0    	mov    %bl,-0xfcd2580(%esi)$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	e8 0e b2 ff ff       	call   f01007ce <getchar>$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	89 c3                	mov    %eax,%ebx$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	85 c0                	test   %eax,%eax$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	78 9e                	js     f0105564 <readline+0x37>$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	0f 94 c2             	sete   %dl$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	0f 94 c0             	sete   %al$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	08 c2                	or     %al,%dl$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	74 04                	je     f01055da <readline+0xad>$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	85 f6                	test   %esi,%esi$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	7f b4                	jg     f010558e <readline+0x61>$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	7e 0e                	jle    f01055ed <readline+0xc0>$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	7f 06                	jg     f01055ed <readline+0xc0>$/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	85 ff                	test   %edi,%edi$/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	74 c7                	je     f01055b2 <readline+0x85>$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	eb b9                	jmp    f01055a6 <readline+0x79>$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	74 05                	je     f01055f7 <readline+0xca>$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	75 c4                	jne    f01055bb <readline+0x8e>$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	85 ff                	test   %edi,%edi$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	75 11                	jne    f010560c <readline+0xdf>$/;"	l
f01055fb	obj/kern/kernel.asm	/^f01055fb:	c6 86 80 da 32 f0 00 	movb   $0x0,-0xfcd2580(%esi)$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	b8 80 da 32 f0       	mov    $0xf032da80,%eax$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	e9 62 ff ff ff       	jmp    f010556e <readline+0x41>$/;"	l
f010560c	obj/kern/kernel.asm	/^f010560c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	6a 0a                	push   $0xa$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	e8 a8 b1 ff ff       	call   f01007be <cputchar>$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	eb e0                	jmp    f01055fb <readline+0xce>$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b <strlen>:$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	55                   	push   %ebp$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	89 e5                	mov    %esp,%ebp$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	74 05                	je     f0105631 <strlen+0x16>$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f:	eb f5                	jmp    f0105626 <strlen+0xb>$/;"	l
f0105631	obj/kern/kernel.asm	/^f0105631:	5d                   	pop    %ebp$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	c3                   	ret    $/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633 <strnlen>:$/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633:	55                   	push   %ebp$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	89 e5                	mov    %esp,%ebp$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105641	obj/kern/kernel.asm	/^f0105641:	39 c2                	cmp    %eax,%edx$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	74 0d                	je     f0105652 <strnlen+0x1f>$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0105649	obj/kern/kernel.asm	/^f0105649:	74 05                	je     f0105650 <strnlen+0x1d>$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	eb f1                	jmp    f0105641 <strnlen+0xe>$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	89 d0                	mov    %edx,%eax$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	5d                   	pop    %ebp$/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653:	c3                   	ret    $/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654 <strcpy>:$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	55                   	push   %ebp$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	89 e5                	mov    %esp,%ebp$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	53                   	push   %ebx$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010565b	obj/kern/kernel.asm	/^f010565b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010565e	obj/kern/kernel.asm	/^f010565e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	84 c9                	test   %cl,%cl$/;"	l
f010566f	obj/kern/kernel.asm	/^f010566f:	75 f2                	jne    f0105663 <strcpy+0xf>$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	5b                   	pop    %ebx$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	5d                   	pop    %ebp$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	c3                   	ret    $/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674 <strcat>:$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	55                   	push   %ebp$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	89 e5                	mov    %esp,%ebp$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	53                   	push   %ebx$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	53                   	push   %ebx$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	e8 97 ff ff ff       	call   f010561b <strlen>$/;"	l
f0105684	obj/kern/kernel.asm	/^f0105684:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	01 d8                	add    %ebx,%eax$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	50                   	push   %eax$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	e8 c2 ff ff ff       	call   f0105654 <strcpy>$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	89 d8                	mov    %ebx,%eax$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	c9                   	leave  $/;"	l
f0105698	obj/kern/kernel.asm	/^f0105698:	c3                   	ret    $/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699 <strncpy>:$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	55                   	push   %ebp$/;"	l
f010569a	obj/kern/kernel.asm	/^f010569a:	89 e5                	mov    %esp,%ebp$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	56                   	push   %esi$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	53                   	push   %ebx$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	89 c6                	mov    %eax,%esi$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	89 c2                	mov    %eax,%edx$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	39 f2                	cmp    %esi,%edx$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	74 11                	je     f01056c0 <strncpy+0x27>$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	83 c2 01             	add    $0x1,%edx$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	80 fb 01             	cmp    $0x1,%bl$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	eb eb                	jmp    f01056ab <strncpy+0x12>$/;"	l
f01056c0	obj/kern/kernel.asm	/^f01056c0:	5b                   	pop    %ebx$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	5e                   	pop    %esi$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	5d                   	pop    %ebp$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	c3                   	ret    $/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4 <strlcpy>:$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	55                   	push   %ebp$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	56                   	push   %esi$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	53                   	push   %ebx$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	89 f0                	mov    %esi,%eax$/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4:	85 d2                	test   %edx,%edx$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	74 21                	je     f01056f9 <strlcpy+0x35>$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f01056dc	obj/kern/kernel.asm	/^f01056dc:	89 f2                	mov    %esi,%edx$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	39 c2                	cmp    %eax,%edx$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	74 14                	je     f01056f6 <strlcpy+0x32>$/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	84 db                	test   %bl,%bl$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	74 0b                	je     f01056f4 <strlcpy+0x30>$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	83 c2 01             	add    $0x1,%edx$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	eb ea                	jmp    f01056de <strlcpy+0x1a>$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	89 d0                	mov    %edx,%eax$/;"	l
f01056f6	obj/kern/kernel.asm	/^f01056f6:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	29 f0                	sub    %esi,%eax$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	5b                   	pop    %ebx$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	5e                   	pop    %esi$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	5d                   	pop    %ebp$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	c3                   	ret    $/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff <strcmp>:$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	55                   	push   %ebp$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	89 e5                	mov    %esp,%ebp$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	84 c0                	test   %al,%al$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	74 0c                	je     f010571b <strcmp+0x1c>$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	3a 02                	cmp    (%edx),%al$/;"	l
f0105711	obj/kern/kernel.asm	/^f0105711:	75 08                	jne    f010571b <strcmp+0x1c>$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	eb ed                	jmp    f0105708 <strcmp+0x9>$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	29 d0                	sub    %edx,%eax$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	5d                   	pop    %ebp$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	c3                   	ret    $/;"	l
f0105725	obj/kern/kernel.asm	/^f0105725 <strncmp>:$/;"	l
f0105725	obj/kern/kernel.asm	/^f0105725:	55                   	push   %ebp$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	89 e5                	mov    %esp,%ebp$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	53                   	push   %ebx$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	89 c3                	mov    %eax,%ebx$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	eb 06                	jmp    f010573c <strncmp+0x17>$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	83 c2 01             	add    $0x1,%edx$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	39 d8                	cmp    %ebx,%eax$/;"	l
f010573e	obj/kern/kernel.asm	/^f010573e:	74 16                	je     f0105756 <strncmp+0x31>$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	84 c9                	test   %cl,%cl$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	74 04                	je     f010574b <strncmp+0x26>$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	74 eb                	je     f0105736 <strncmp+0x11>$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105751	obj/kern/kernel.asm	/^f0105751:	29 d0                	sub    %edx,%eax$/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	5b                   	pop    %ebx$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	5d                   	pop    %ebp$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	c3                   	ret    $/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	eb f6                	jmp    f0105753 <strncmp+0x2e>$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d <strchr>:$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	55                   	push   %ebp$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105763	obj/kern/kernel.asm	/^f0105763:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010576a	obj/kern/kernel.asm	/^f010576a:	84 d2                	test   %dl,%dl$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	74 09                	je     f0105777 <strchr+0x1a>$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	38 ca                	cmp    %cl,%dl$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	74 0a                	je     f010577c <strchr+0x1f>$/;"	l
f0105772	obj/kern/kernel.asm	/^f0105772:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	eb f0                	jmp    f0105767 <strchr+0xa>$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010577c	obj/kern/kernel.asm	/^f010577c:	5d                   	pop    %ebp$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	c3                   	ret    $/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e <strfind>:$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	55                   	push   %ebp$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105784	obj/kern/kernel.asm	/^f0105784:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	38 ca                	cmp    %cl,%dl$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	74 09                	je     f0105798 <strfind+0x1a>$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	84 d2                	test   %dl,%dl$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	74 05                	je     f0105798 <strfind+0x1a>$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	eb f0                	jmp    f0105788 <strfind+0xa>$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	5d                   	pop    %ebp$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	c3                   	ret    $/;"	l
f010579a	obj/kern/kernel.asm	/^f010579a <memset>:$/;"	l
f010579a	obj/kern/kernel.asm	/^f010579a:	55                   	push   %ebp$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	89 e5                	mov    %esp,%ebp$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	57                   	push   %edi$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	56                   	push   %esi$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	53                   	push   %ebx$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	85 c9                	test   %ecx,%ecx$/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8:	74 31                	je     f01057db <memset+0x41>$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	89 f8                	mov    %edi,%eax$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	09 c8                	or     %ecx,%eax$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	a8 03                	test   $0x3,%al$/;"	l
f01057b0	obj/kern/kernel.asm	/^f01057b0:	75 23                	jne    f01057d5 <memset+0x3b>$/;"	l
f01057b2	obj/kern/kernel.asm	/^f01057b2:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01057b6	obj/kern/kernel.asm	/^f01057b6:	89 d3                	mov    %edx,%ebx$/;"	l
f01057b8	obj/kern/kernel.asm	/^f01057b8:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01057bb	obj/kern/kernel.asm	/^f01057bb:	89 d0                	mov    %edx,%eax$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	89 d6                	mov    %edx,%esi$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	09 f0                	or     %esi,%eax$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	09 c2                	or     %eax,%edx$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	09 da                	or     %ebx,%edx$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	89 d0                	mov    %edx,%eax$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	fc                   	cld    $/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	eb 06                	jmp    f01057db <memset+0x41>$/;"	l
f01057d5	obj/kern/kernel.asm	/^f01057d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	fc                   	cld    $/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01057db	obj/kern/kernel.asm	/^f01057db:	89 f8                	mov    %edi,%eax$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	5b                   	pop    %ebx$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	5e                   	pop    %esi$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	5f                   	pop    %edi$/;"	l
f01057e0	obj/kern/kernel.asm	/^f01057e0:	5d                   	pop    %ebp$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	c3                   	ret    $/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2 <memmove>:$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	55                   	push   %ebp$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	57                   	push   %edi$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	56                   	push   %esi$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	39 c6                	cmp    %eax,%esi$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	73 32                	jae    f0105826 <memmove+0x44>$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	39 c2                	cmp    %eax,%edx$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	76 2b                	jbe    f0105826 <memmove+0x44>$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	89 fe                	mov    %edi,%esi$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	09 ce                	or     %ecx,%esi$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	09 d6                	or     %edx,%esi$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	75 0e                	jne    f010581a <memmove+0x38>$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	83 ef 04             	sub    $0x4,%edi$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105812	obj/kern/kernel.asm	/^f0105812:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	fd                   	std    $/;"	l
f0105816	obj/kern/kernel.asm	/^f0105816:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	eb 09                	jmp    f0105823 <memmove+0x41>$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	fd                   	std    $/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	fc                   	cld    $/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	eb 1a                	jmp    f0105840 <memmove+0x5e>$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	89 c2                	mov    %eax,%edx$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	09 ca                	or     %ecx,%edx$/;"	l
f010582a	obj/kern/kernel.asm	/^f010582a:	09 f2                	or     %esi,%edx$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	75 0a                	jne    f010583b <memmove+0x59>$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	89 c7                	mov    %eax,%edi$/;"	l
f0105836	obj/kern/kernel.asm	/^f0105836:	fc                   	cld    $/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	eb 05                	jmp    f0105840 <memmove+0x5e>$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	89 c7                	mov    %eax,%edi$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	fc                   	cld    $/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105840	obj/kern/kernel.asm	/^f0105840:	5e                   	pop    %esi$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	5f                   	pop    %edi$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	5d                   	pop    %ebp$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	c3                   	ret    $/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844 <memcpy>:$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	55                   	push   %ebp$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	89 e5                	mov    %esp,%ebp$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	e8 8a ff ff ff       	call   f01057e2 <memmove>$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	c9                   	leave  $/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	c3                   	ret    $/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a <memcmp>:$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	55                   	push   %ebp$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	89 e5                	mov    %esp,%ebp$/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	56                   	push   %esi$/;"	l
f010585e	obj/kern/kernel.asm	/^f010585e:	53                   	push   %ebx$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	89 c6                	mov    %eax,%esi$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	39 f0                	cmp    %esi,%eax$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	74 1c                	je     f010588a <memcmp+0x30>$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	38 d9                	cmp    %bl,%cl$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	75 08                	jne    f0105880 <memcmp+0x26>$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	83 c0 01             	add    $0x1,%eax$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	eb ea                	jmp    f010586a <memcmp+0x10>$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	29 d8                	sub    %ebx,%eax$/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	eb 05                	jmp    f010588f <memcmp+0x35>$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	5b                   	pop    %ebx$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	5e                   	pop    %esi$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	5d                   	pop    %ebp$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	c3                   	ret    $/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893 <memfind>:$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	55                   	push   %ebp$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	89 e5                	mov    %esp,%ebp$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	89 c2                	mov    %eax,%edx$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	39 d0                	cmp    %edx,%eax$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	73 09                	jae    f01058ae <memfind+0x1b>$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	38 08                	cmp    %cl,(%eax)$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	74 05                	je     f01058ae <memfind+0x1b>$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	83 c0 01             	add    $0x1,%eax$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	eb f3                	jmp    f01058a1 <memfind+0xe>$/;"	l
f01058ae	obj/kern/kernel.asm	/^f01058ae:	5d                   	pop    %ebp$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	c3                   	ret    $/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0 <strtol>:$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	55                   	push   %ebp$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	57                   	push   %edi$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	56                   	push   %esi$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	53                   	push   %ebx$/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	eb 03                	jmp    f01058c1 <strtol+0x11>$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	3c 20                	cmp    $0x20,%al$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	74 f6                	je     f01058be <strtol+0xe>$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	3c 09                	cmp    $0x9,%al$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	74 f2                	je     f01058be <strtol+0xe>$/;"	l
f01058cc	obj/kern/kernel.asm	/^f01058cc:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	74 2a                	je     f01058fa <strtol+0x4a>$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	74 2b                	je     f0105904 <strtol+0x54>$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	75 0f                	jne    f01058f0 <strtol+0x40>$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	74 28                	je     f010590e <strtol+0x5e>$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	85 db                	test   %ebx,%ebx$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01058ed	obj/kern/kernel.asm	/^f01058ed:	0f 44 d8             	cmove  %eax,%ebx$/;"	l
f01058f0	obj/kern/kernel.asm	/^f01058f0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058f5	obj/kern/kernel.asm	/^f01058f5:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	eb 50                	jmp    f010594a <strtol+0x9a>$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01058fd	obj/kern/kernel.asm	/^f01058fd:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	eb d5                	jmp    f01058d9 <strtol+0x29>$/;"	l
f0105904	obj/kern/kernel.asm	/^f0105904:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	eb cb                	jmp    f01058d9 <strtol+0x29>$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0105912	obj/kern/kernel.asm	/^f0105912:	74 0e                	je     f0105922 <strtol+0x72>$/;"	l
f0105914	obj/kern/kernel.asm	/^f0105914:	85 db                	test   %ebx,%ebx$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	75 d8                	jne    f01058f0 <strtol+0x40>$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010591b	obj/kern/kernel.asm	/^f010591b:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	eb ce                	jmp    f01058f0 <strtol+0x40>$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0105925	obj/kern/kernel.asm	/^f0105925:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	eb c4                	jmp    f01058f0 <strtol+0x40>$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	89 f3                	mov    %esi,%ebx$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	77 29                	ja     f010595f <strtol+0xaf>$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105939	obj/kern/kernel.asm	/^f0105939:	83 ea 57             	sub    $0x57,%edx$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	7d 30                	jge    f0105971 <strtol+0xc1>$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	01 d0                	add    %edx,%eax$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	89 f3                	mov    %esi,%ebx$/;"	l
f0105952	obj/kern/kernel.asm	/^f0105952:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	77 d5                	ja     f010592c <strtol+0x7c>$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	0f be d2             	movsbl %dl,%edx$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	83 ea 30             	sub    $0x30,%edx$/;"	l
f010595d	obj/kern/kernel.asm	/^f010595d:	eb dd                	jmp    f010593c <strtol+0x8c>$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	89 f3                	mov    %esi,%ebx$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	77 08                	ja     f0105971 <strtol+0xc1>$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	0f be d2             	movsbl %dl,%edx$/;"	l
f010596c	obj/kern/kernel.asm	/^f010596c:	83 ea 37             	sub    $0x37,%edx$/;"	l
f010596f	obj/kern/kernel.asm	/^f010596f:	eb cb                	jmp    f010593c <strtol+0x8c>$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105975	obj/kern/kernel.asm	/^f0105975:	74 05                	je     f010597c <strtol+0xcc>$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010597a	obj/kern/kernel.asm	/^f010597a:	89 0e                	mov    %ecx,(%esi)$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	89 c2                	mov    %eax,%edx$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	f7 da                	neg    %edx$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	85 ff                	test   %edi,%edi$/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	5b                   	pop    %ebx$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	5e                   	pop    %esi$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	5f                   	pop    %edi$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	5d                   	pop    %ebp$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	c3                   	ret    $/;"	l
f010598a	obj/kern/kernel.asm	/^f010598a:	66 90                	xchg   %ax,%ax$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c <mpentry_start>:$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	fa                   	cli    $/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	31 c0                	xor    %eax,%eax$/;"	l
f010598f	obj/kern/kernel.asm	/^f010598f:	8e d8                	mov    %eax,%ds$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	8e c0                	mov    %eax,%es$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	8e d0                	mov    %eax,%ss$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0105998	obj/kern/kernel.asm	/^f0105998:	74 70                	je     f0105a0a <mpsearch1+0x3>$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010599d	obj/kern/kernel.asm	/^f010599d:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01059a1	obj/kern/kernel.asm	/^f01059a1:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01059aa	obj/kern/kernel.asm	/^f01059aa:	08 00                	or     %al,(%eax)$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac <start32>:$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	8e d8                	mov    %eax,%ds$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	8e c0                	mov    %eax,%es$/;"	l
f01059b4	obj/kern/kernel.asm	/^f01059b4:	8e d0                	mov    %eax,%ss$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	8e e0                	mov    %eax,%fs$/;"	l
f01059bc	obj/kern/kernel.asm	/^f01059bc:	8e e8                	mov    %eax,%gs$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f01059ce	obj/kern/kernel.asm	/^f01059ce:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	8b 25 84 de 32 f0    	mov    0xf032de84,%esp$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	b8 f0 01 10 f0       	mov    $0xf01001f0,%eax$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	ff d0                	call   *%eax$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3 <spin>:$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	eb fe                	jmp    f01059e3 <spin>$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8 <gdt>:$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	ff                   	(bad)  $/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	ff 00                	incl   (%eax)$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	00 00                	add    %al,(%eax)$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f01059fc	obj/kern/kernel.asm	/^f01059fc:	00                   	.byte 0x0$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	92                   	xchg   %eax,%edx$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	cf                   	iret   $/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00 <gdtdesc>:$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	17                   	pop    %ss$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06 <mpentry_end>:$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	90                   	nop$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07 <mpsearch1>:$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	55                   	push   %ebp$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	57                   	push   %edi$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	56                   	push   %esi$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	53                   	push   %ebx$/;"	l
f0105a0d	obj/kern/kernel.asm	/^f0105a0d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	8b 0d 88 de 32 f0    	mov    0xf032de88,%ecx$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a18	obj/kern/kernel.asm	/^f0105a18:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105a1b	obj/kern/kernel.asm	/^f0105a1b:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	73 1a                	jae    f0105a39 <mpsearch1+0x32>$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	8d 3c 02             	lea    (%edx,%eax,1),%edi$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	89 f8                	mov    %edi,%eax$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0105a2d	obj/kern/kernel.asm	/^f0105a2d:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105a2f	obj/kern/kernel.asm	/^f0105a2f:	73 1a                	jae    f0105a4b <mpsearch1+0x44>$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	81 ef 00 00 00 10    	sub    $0x10000000,%edi$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	eb 27                	jmp    f0105a60 <mpsearch1+0x59>$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	50                   	push   %eax$/;"	l
f0105a3a	obj/kern/kernel.asm	/^f0105a3a:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0105a3f	obj/kern/kernel.asm	/^f0105a3f:	6a 57                	push   $0x57$/;"	l
f0105a41	obj/kern/kernel.asm	/^f0105a41:	68 9d 80 10 f0       	push   $0xf010809d$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	e8 f5 a5 ff ff       	call   f0100040 <_panic>$/;"	l
f0105a4b	obj/kern/kernel.asm	/^f0105a4b:	57                   	push   %edi$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	6a 57                	push   $0x57$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	68 9d 80 10 f0       	push   $0xf010809d$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	e8 e3 a5 ff ff       	call   f0100040 <_panic>$/;"	l
f0105a5d	obj/kern/kernel.asm	/^f0105a5d:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	39 fb                	cmp    %edi,%ebx$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	73 30                	jae    f0105a94 <mpsearch1+0x8d>$/;"	l
f0105a64	obj/kern/kernel.asm	/^f0105a64:	89 de                	mov    %ebx,%esi$/;"	l
f0105a66	obj/kern/kernel.asm	/^f0105a66:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	6a 04                	push   $0x4$/;"	l
f0105a6b	obj/kern/kernel.asm	/^f0105a6b:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	53                   	push   %ebx$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	e8 e4 fd ff ff       	call   f010585a <memcmp>$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	85 c0                	test   %eax,%eax$/;"	l
f0105a7b	obj/kern/kernel.asm	/^f0105a7b:	75 e0                	jne    f0105a5d <mpsearch1+0x56>$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	89 da                	mov    %ebx,%edx$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	83 c6 10             	add    $0x10,%esi$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	01 c8                	add    %ecx,%eax$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	39 f2                	cmp    %esi,%edx$/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	75 f4                	jne    f0105a82 <mpsearch1+0x7b>$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	84 c0                	test   %al,%al$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	75 cb                	jne    f0105a5d <mpsearch1+0x56>$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	eb 05                	jmp    f0105a99 <mpsearch1+0x92>$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	89 d8                	mov    %ebx,%eax$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	5b                   	pop    %ebx$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	5e                   	pop    %esi$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	5f                   	pop    %edi$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	5d                   	pop    %ebp$/;"	l
f0105aa2	obj/kern/kernel.asm	/^f0105aa2:	c3                   	ret    $/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3 <mp_init>:$/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	55                   	push   %ebp$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	57                   	push   %edi$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	56                   	push   %esi$/;"	l
f0105aa8	obj/kern/kernel.asm	/^f0105aa8:	53                   	push   %ebx$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	c7 05 c0 e3 32 f0 20 	movl   $0xf032e020,0xf032e3c0$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	e0 32 f0 $/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	83 3d 88 de 32 f0 00 	cmpl   $0x0,0xf032de88$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	0f 84 a3 00 00 00    	je     f0105b66 <mp_init+0xc3>$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	85 c0                	test   %eax,%eax$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	0f 84 aa 00 00 00    	je     f0105b7c <mp_init+0xd9>$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105ada	obj/kern/kernel.asm	/^f0105ada:	e8 28 ff ff ff       	call   f0105a07 <mpsearch1>$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	85 c0                	test   %eax,%eax$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	75 1a                	jne    f0105b00 <mp_init+0x5d>$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	e8 12 ff ff ff       	call   f0105a07 <mpsearch1>$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105af8	obj/kern/kernel.asm	/^f0105af8:	85 c0                	test   %eax,%eax$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	0f 84 31 02 00 00    	je     f0105d31 <mp_init+0x28e>$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105b03	obj/kern/kernel.asm	/^f0105b03:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	85 db                	test   %ebx,%ebx$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	0f 84 97 00 00 00    	je     f0105ba5 <mp_init+0x102>$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0105b12	obj/kern/kernel.asm	/^f0105b12:	0f 85 8d 00 00 00    	jne    f0105ba5 <mp_init+0x102>$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	89 d8                	mov    %ebx,%eax$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	0f 83 91 00 00 00    	jae    f0105bba <mp_init+0x117>$/;"	l
f0105b29	obj/kern/kernel.asm	/^f0105b29:	81 eb 00 00 00 10    	sub    $0x10000000,%ebx$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	89 de                	mov    %ebx,%esi$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	6a 04                	push   $0x4$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	68 b2 80 10 f0       	push   $0xf01080b2$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	53                   	push   %ebx$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	e8 19 fd ff ff       	call   f010585a <memcmp>$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	85 c0                	test   %eax,%eax$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	0f 85 83 00 00 00    	jne    f0105bcf <mp_init+0x12c>$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	0f b7 7b 04          	movzwl 0x4(%ebx),%edi$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	01 df                	add    %ebx,%edi$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	89 c2                	mov    %eax,%edx$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	39 fb                	cmp    %edi,%ebx$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	0f 84 88 00 00 00    	je     f0105be4 <mp_init+0x141>$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	0f b6 0b             	movzbl (%ebx),%ecx$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	01 ca                	add    %ecx,%edx$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	eb ee                	jmp    f0105b54 <mp_init+0xb1>$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	68 00 04 00 00       	push   $0x400$/;"	l
f0105b6b	obj/kern/kernel.asm	/^f0105b6b:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	6a 6f                	push   $0x6f$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	68 9d 80 10 f0       	push   $0xf010809d$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	e8 c4 a4 ff ff       	call   f0100040 <_panic>$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0105b86	obj/kern/kernel.asm	/^f0105b86:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0105b8b	obj/kern/kernel.asm	/^f0105b8b:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	e8 72 fe ff ff       	call   f0105a07 <mpsearch1>$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105b98	obj/kern/kernel.asm	/^f0105b98:	85 c0                	test   %eax,%eax$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a:	0f 85 60 ff ff ff    	jne    f0105b00 <mp_init+0x5d>$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	e9 41 ff ff ff       	jmp    f0105ae6 <mp_init+0x43>$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	68 10 7f 10 f0       	push   $0xf0107f10$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	e8 04 de ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	e9 77 01 00 00       	jmp    f0105d31 <mp_init+0x28e>$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	53                   	push   %ebx$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0105bc0	obj/kern/kernel.asm	/^f0105bc0:	68 90 00 00 00       	push   $0x90$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	68 9d 80 10 f0       	push   $0xf010809d$/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	e8 71 a4 ff ff       	call   f0100040 <_panic>$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	68 40 7f 10 f0       	push   $0xf0107f40$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	e8 da dd ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bdf	obj/kern/kernel.asm	/^f0105bdf:	e9 4d 01 00 00       	jmp    f0105d31 <mp_init+0x28e>$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	84 d2                	test   %dl,%dl$/;"	l
f0105be6	obj/kern/kernel.asm	/^f0105be6:	75 16                	jne    f0105bfe <mp_init+0x15b>$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	0f b6 56 06          	movzbl 0x6(%esi),%edx$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	80 fa 01             	cmp    $0x1,%dl$/;"	l
f0105bef	obj/kern/kernel.asm	/^f0105bef:	74 05                	je     f0105bf6 <mp_init+0x153>$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	80 fa 04             	cmp    $0x4,%dl$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	75 1d                	jne    f0105c13 <mp_init+0x170>$/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	0f b7 4e 28          	movzwl 0x28(%esi),%ecx$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	01 d9                	add    %ebx,%ecx$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	eb 36                	jmp    f0105c34 <mp_init+0x191>$/;"	l
f0105bfe	obj/kern/kernel.asm	/^f0105bfe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c01	obj/kern/kernel.asm	/^f0105c01:	68 74 7f 10 f0       	push   $0xf0107f74$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	e8 ab dd ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	e9 1e 01 00 00       	jmp    f0105d31 <mp_init+0x28e>$/;"	l
f0105c13	obj/kern/kernel.asm	/^f0105c13:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c16	obj/kern/kernel.asm	/^f0105c16:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0105c19	obj/kern/kernel.asm	/^f0105c19:	52                   	push   %edx$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	68 98 7f 10 f0       	push   $0xf0107f98$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	e8 92 dd ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c27	obj/kern/kernel.asm	/^f0105c27:	e9 05 01 00 00       	jmp    f0105d31 <mp_init+0x28e>$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	01 d0                	add    %edx,%eax$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0105c34	obj/kern/kernel.asm	/^f0105c34:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	75 f4                	jne    f0105c2c <mp_init+0x189>$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	02 46 2a             	add    0x2a(%esi),%al$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	75 1c                	jne    f0105c59 <mp_init+0x1b6>$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	c7 05 00 e0 32 f0 01 	movl   $0x1,0xf032e000$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	00 00 00 $/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	8b 46 24             	mov    0x24(%esi),%eax$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	a3 00 f0 36 f0       	mov    %eax,0xf036f000$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	8d 7e 2c             	lea    0x2c(%esi),%edi$/;"	l
f0105c52	obj/kern/kernel.asm	/^f0105c52:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	eb 4d                	jmp    f0105ca6 <mp_init+0x203>$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c5c	obj/kern/kernel.asm	/^f0105c5c:	68 b8 7f 10 f0       	push   $0xf0107fb8$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	e8 50 dd ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	e9 c3 00 00 00       	jmp    f0105d31 <mp_init+0x28e>$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	74 11                	je     f0105c85 <mp_init+0x1e2>$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	6b 05 c4 e3 32 f0 74 	imul   $0x74,0xf032e3c4,%eax$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	05 20 e0 32 f0       	add    $0xf032e020,%eax$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	a3 c0 e3 32 f0       	mov    %eax,0xf032e3c0$/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85:	a1 c4 e3 32 f0       	mov    0xf032e3c4,%eax$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	7f 2f                	jg     f0105cbe <mp_init+0x21b>$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	88 82 20 e0 32 f0    	mov    %al,-0xfcd1fe0(%edx)$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105c9b	obj/kern/kernel.asm	/^f0105c9b:	a3 c4 e3 32 f0       	mov    %eax,0xf032e3c4$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	83 c7 14             	add    $0x14,%edi$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	0f b7 46 22          	movzwl 0x22(%esi),%eax$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105cac	obj/kern/kernel.asm	/^f0105cac:	76 4b                	jbe    f0105cf9 <mp_init+0x256>$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	84 c0                	test   %al,%al$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	74 b9                	je     f0105c6e <mp_init+0x1cb>$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	3c 04                	cmp    $0x4,%al$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	77 1c                	ja     f0105cd5 <mp_init+0x232>$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	83 c7 08             	add    $0x8,%edi$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	eb e5                	jmp    f0105ca3 <mp_init+0x200>$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0105cc5	obj/kern/kernel.asm	/^f0105cc5:	50                   	push   %eax$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	68 e8 7f 10 f0       	push   $0xf0107fe8$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	e8 e6 dc ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105cd3	obj/kern/kernel.asm	/^f0105cd3:	eb cb                	jmp    f0105ca0 <mp_init+0x1fd>$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105cd8	obj/kern/kernel.asm	/^f0105cd8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	50                   	push   %eax$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	68 10 80 10 f0       	push   $0xf0108010$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	e8 d0 dc ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	c7 05 00 e0 32 f0 00 	movl   $0x0,0xf032e000$/;"	l
f0105ced	obj/kern/kernel.asm	/^f0105ced:	00 00 00 $/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	0f b7 5e 22          	movzwl 0x22(%esi),%ebx$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	eb aa                	jmp    f0105ca3 <mp_init+0x200>$/;"	l
f0105cf9	obj/kern/kernel.asm	/^f0105cf9:	a1 c0 e3 32 f0       	mov    0xf032e3c0,%eax$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	83 3d 00 e0 32 f0 00 	cmpl   $0x0,0xf032e000$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	74 2b                	je     f0105d39 <mp_init+0x296>$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	ff 35 c4 e3 32 f0    	pushl  0xf032e3c4$/;"	l
f0105d17	obj/kern/kernel.asm	/^f0105d17:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	50                   	push   %eax$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	68 b7 80 10 f0       	push   $0xf01080b7$/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	e8 91 dc ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105d2b	obj/kern/kernel.asm	/^f0105d2b:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0105d2f	obj/kern/kernel.asm	/^f0105d2f:	75 2e                	jne    f0105d5f <mp_init+0x2bc>$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105d34	obj/kern/kernel.asm	/^f0105d34:	5b                   	pop    %ebx$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	5e                   	pop    %esi$/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	5f                   	pop    %edi$/;"	l
f0105d37	obj/kern/kernel.asm	/^f0105d37:	5d                   	pop    %ebp$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	c3                   	ret    $/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	c7 05 c4 e3 32 f0 01 	movl   $0x1,0xf032e3c4$/;"	l
f0105d40	obj/kern/kernel.asm	/^f0105d40:	00 00 00 $/;"	l
f0105d43	obj/kern/kernel.asm	/^f0105d43:	c7 05 00 f0 36 f0 00 	movl   $0x0,0xf036f000$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	00 00 00 $/;"	l
f0105d4d	obj/kern/kernel.asm	/^f0105d4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	68 30 80 10 f0       	push   $0xf0108030$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	e8 5c dc ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	eb d2                	jmp    f0105d31 <mp_init+0x28e>$/;"	l
f0105d5f	obj/kern/kernel.asm	/^f0105d5f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	68 5c 80 10 f0       	push   $0xf010805c$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	e8 4a dc ff ff       	call   f01039b6 <cprintf>$/;"	l
f0105d6c	obj/kern/kernel.asm	/^f0105d6c:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0105d76	obj/kern/kernel.asm	/^f0105d76:	ee                   	out    %al,(%dx)$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	ec                   	in     (%dx),%al$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	83 c8 01             	or     $0x1,%eax$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	ee                   	out    %al,(%dx)$/;"	l
f0105d81	obj/kern/kernel.asm	/^f0105d81:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	eb ab                	jmp    f0105d31 <mp_init+0x28e>$/;"	l
f0105d86	obj/kern/kernel.asm	/^f0105d86 <lapicw>:$/;"	l
f0105d86	obj/kern/kernel.asm	/^f0105d86:	8b 0d 04 f0 36 f0    	mov    0xf036f004,%ecx$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	89 10                	mov    %edx,(%eax)$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	a1 04 f0 36 f0       	mov    0xf036f004,%eax$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	c3                   	ret    $/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a <cpunum>:$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	8b 15 04 f0 36 f0    	mov    0xf036f004,%edx$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	85 d2                	test   %edx,%edx$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	74 06                	je     f0105daf <cpunum+0x15>$/;"	l
f0105da9	obj/kern/kernel.asm	/^f0105da9:	8b 42 20             	mov    0x20(%edx),%eax$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	c3                   	ret    $/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0 <lapic_init>:$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	a1 00 f0 36 f0       	mov    0xf036f000,%eax$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	85 c0                	test   %eax,%eax$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	75 01                	jne    f0105dba <lapic_init+0xa>$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	c3                   	ret    $/;"	l
f0105dba	obj/kern/kernel.asm	/^f0105dba:	55                   	push   %ebp$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	68 00 10 00 00       	push   $0x1000$/;"	l
f0105dc5	obj/kern/kernel.asm	/^f0105dc5:	50                   	push   %eax$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	e8 9f b5 ff ff       	call   f010136a <mmio_map_region>$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	a3 04 f0 36 f0       	mov    %eax,0xf036f004$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0105dda	obj/kern/kernel.asm	/^f0105dda:	e8 a7 ff ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	e8 98 ff ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0105df8	obj/kern/kernel.asm	/^f0105df8:	e8 89 ff ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105dfd	obj/kern/kernel.asm	/^f0105dfd:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	e8 7a ff ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	e8 89 ff ff ff       	call   f0105d9a <cpunum>$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	05 20 e0 32 f0       	add    $0xf032e020,%eax$/;"	l
f0105e19	obj/kern/kernel.asm	/^f0105e19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	39 05 c0 e3 32 f0    	cmp    %eax,0xf032e3c0$/;"	l
f0105e22	obj/kern/kernel.asm	/^f0105e22:	74 0f                	je     f0105e33 <lapic_init+0x83>$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	e8 53 ff ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0105e3d	obj/kern/kernel.asm	/^f0105e3d:	e8 44 ff ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105e42	obj/kern/kernel.asm	/^f0105e42:	a1 04 f0 36 f0       	mov    0xf036f004,%eax$/;"	l
f0105e47	obj/kern/kernel.asm	/^f0105e47:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0105e4a	obj/kern/kernel.asm	/^f0105e4a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	a8 fc                	test   $0xfc,%al$/;"	l
f0105e4f	obj/kern/kernel.asm	/^f0105e4f:	75 7c                	jne    f0105ecd <lapic_init+0x11d>$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	e8 26 ff ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105e65	obj/kern/kernel.asm	/^f0105e65:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	e8 17 ff ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	e8 08 ff ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105e88	obj/kern/kernel.asm	/^f0105e88:	e8 f9 fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	e8 ea fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	e8 db fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105eab	obj/kern/kernel.asm	/^f0105eab:	8b 15 04 f0 36 f0    	mov    0xf036f004,%edx$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	75 f5                	jne    f0105eb1 <lapic_init+0x101>$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	e8 bb fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	c9                   	leave  $/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	c3                   	ret    $/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	e8 aa fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	e9 70 ff ff ff       	jmp    f0105e51 <lapic_init+0xa1>$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1 <lapic_eoi>:$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	83 3d 04 f0 36 f0 00 	cmpl   $0x0,0xf036f004$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	74 17                	je     f0105f01 <lapic_eoi+0x20>$/;"	l
f0105eea	obj/kern/kernel.asm	/^f0105eea:	55                   	push   %ebp$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	89 e5                	mov    %esp,%ebp$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	e8 87 fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	c9                   	leave  $/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	c3                   	ret    $/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	c3                   	ret    $/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02 <lapic_startap>:$/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02:	55                   	push   %ebp$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	56                   	push   %esi$/;"	l
f0105f06	obj/kern/kernel.asm	/^f0105f06:	53                   	push   %ebx$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	ee                   	out    %al,(%dx)$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	ee                   	out    %al,(%dx)$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	83 3d 88 de 32 f0 00 	cmpl   $0x0,0xf032de88$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	74 7e                	je     f0105faa <lapic_startap+0xa8>$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0105f33	obj/kern/kernel.asm	/^f0105f33:	00 00 $/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	89 f2                	mov    %esi,%edx$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	e8 37 fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	e8 28 fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	e8 19 fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	80 cf 06             	or     $0x6,%bh$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	89 f2                	mov    %esi,%edx$/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	e8 07 fe ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	89 da                	mov    %ebx,%edx$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	e8 fb fd ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	89 f2                	mov    %esi,%edx$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	e8 ef fd ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105f97	obj/kern/kernel.asm	/^f0105f97:	89 da                	mov    %ebx,%edx$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105f9e	obj/kern/kernel.asm	/^f0105f9e:	e8 e3 fd ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	5b                   	pop    %ebx$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	5e                   	pop    %esi$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	5d                   	pop    %ebp$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	c3                   	ret    $/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	68 67 04 00 00       	push   $0x467$/;"	l
f0105faf	obj/kern/kernel.asm	/^f0105faf:	68 04 64 10 f0       	push   $0xf0106404$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	68 98 00 00 00       	push   $0x98$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	68 d4 80 10 f0       	push   $0xf01080d4$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	e8 7d a0 ff ff       	call   f0100040 <_panic>$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3 <lapic_ipi>:$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	55                   	push   %ebp$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105fc9	obj/kern/kernel.asm	/^f0105fc9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105fcc	obj/kern/kernel.asm	/^f0105fcc:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	e8 aa fd ff ff       	call   f0105d86 <lapicw>$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	8b 15 04 f0 36 f0    	mov    0xf036f004,%edx$/;"	l
f0105fe2	obj/kern/kernel.asm	/^f0105fe2:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	75 f5                	jne    f0105fe2 <lapic_ipi+0x1f>$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	c9                   	leave  $/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	c3                   	ret    $/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef <__spin_initlock>:$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	55                   	push   %ebp$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ff2	obj/kern/kernel.asm	/^f0105ff2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106001	obj/kern/kernel.asm	/^f0106001:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106008	obj/kern/kernel.asm	/^f0106008:	5d                   	pop    %ebp$/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	c3                   	ret    $/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a <spin_lock>:$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	55                   	push   %ebp$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	89 e5                	mov    %esp,%ebp$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	56                   	push   %esi$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	53                   	push   %ebx$/;"	l
f010600f	obj/kern/kernel.asm	/^f010600f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	75 12                	jne    f0106029 <spin_lock+0x1f>$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	89 d0                	mov    %edx,%eax$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	85 c0                	test   %eax,%eax$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	74 36                	je     f010605b <spin_lock+0x51>$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	f3 90                	pause  $/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	eb f3                	jmp    f010601c <spin_lock+0x12>$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f010602c	obj/kern/kernel.asm	/^f010602c:	e8 69 fd ff ff       	call   f0105d9a <cpunum>$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034:	05 20 e0 32 f0       	add    $0xf032e020,%eax$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	39 c6                	cmp    %eax,%esi$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	75 da                	jne    f0106017 <spin_lock+0xd>$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	e8 55 fd ff ff       	call   f0105d9a <cpunum>$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	53                   	push   %ebx$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	50                   	push   %eax$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	68 e4 80 10 f0       	push   $0xf01080e4$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	6a 41                	push   $0x41$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	68 48 81 10 f0       	push   $0xf0108148$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	e8 e5 9f ff ff       	call   f0100040 <_panic>$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	e8 3a fd ff ff       	call   f0105d9a <cpunum>$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	05 20 e0 32 f0       	add    $0xf032e020,%eax$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	89 ea                	mov    %ebp,%edx$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106072	obj/kern/kernel.asm	/^f0106072:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	7f 16                	jg     f010608d <spin_lock+0x83>$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	76 0e                	jbe    f010608d <spin_lock+0x83>$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0106082	obj/kern/kernel.asm	/^f0106082:	89 4c 83 0c          	mov    %ecx,0xc(%ebx,%eax,4)$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	8b 12                	mov    (%edx),%edx$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	83 c0 01             	add    $0x1,%eax$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	eb e5                	jmp    f0106072 <spin_lock+0x68>$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	7f 0d                	jg     f010609f <spin_lock+0x95>$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	c7 44 83 0c 00 00 00 	movl   $0x0,0xc(%ebx,%eax,4)$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	00 $/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	eb ee                	jmp    f010608d <spin_lock+0x83>$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	5b                   	pop    %ebx$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	5e                   	pop    %esi$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	5d                   	pop    %ebp$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	c3                   	ret    $/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6 <spin_unlock>:$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	55                   	push   %ebp$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	57                   	push   %edi$/;"	l
f01060aa	obj/kern/kernel.asm	/^f01060aa:	56                   	push   %esi$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	53                   	push   %ebx$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01060af	obj/kern/kernel.asm	/^f01060af:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01060b2	obj/kern/kernel.asm	/^f01060b2:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	75 35                	jne    f01060ec <spin_unlock+0x46>$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	6a 28                	push   $0x28$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f01060bf	obj/kern/kernel.asm	/^f01060bf:	50                   	push   %eax$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	53                   	push   %ebx$/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	e8 19 f7 ff ff       	call   f01057e2 <memmove>$/;"	l
f01060c9	obj/kern/kernel.asm	/^f01060c9:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	e8 c3 fc ff ff       	call   f0105d9a <cpunum>$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	57                   	push   %edi$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	56                   	push   %esi$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	50                   	push   %eax$/;"	l
f01060da	obj/kern/kernel.asm	/^f01060da:	68 10 81 10 f0       	push   $0xf0108110$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	e8 d2 d8 ff ff       	call   f01039b6 <cprintf>$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	83 c4 20             	add    $0x20,%esp$/;"	l
f01060e7	obj/kern/kernel.asm	/^f01060e7:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	eb 4e                	jmp    f010613a <spin_unlock+0x94>$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	e8 a6 fc ff ff       	call   f0105d9a <cpunum>$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01060f7	obj/kern/kernel.asm	/^f01060f7:	05 20 e0 32 f0       	add    $0xf032e020,%eax$/;"	l
f01060fc	obj/kern/kernel.asm	/^f01060fc:	39 c3                	cmp    %eax,%ebx$/;"	l
f01060fe	obj/kern/kernel.asm	/^f01060fe:	75 b7                	jne    f01060b7 <spin_unlock+0x11>$/;"	l
f0106100	obj/kern/kernel.asm	/^f0106100:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	5b                   	pop    %ebx$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	5e                   	pop    %esi$/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	5f                   	pop    %edi$/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	5d                   	pop    %ebp$/;"	l
f010611d	obj/kern/kernel.asm	/^f010611d:	c3                   	ret    $/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106121	obj/kern/kernel.asm	/^f0106121:	ff 36                	pushl  (%esi)$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	68 6f 81 10 f0       	push   $0xf010816f$/;"	l
f0106128	obj/kern/kernel.asm	/^f0106128:	e8 89 d8 ff ff       	call   f01039b6 <cprintf>$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138:	74 40                	je     f010617a <spin_unlock+0xd4>$/;"	l
f010613a	obj/kern/kernel.asm	/^f010613a:	89 de                	mov    %ebx,%esi$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	8b 03                	mov    (%ebx),%eax$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	85 c0                	test   %eax,%eax$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	74 38                	je     f010617a <spin_unlock+0xd4>$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106145	obj/kern/kernel.asm	/^f0106145:	57                   	push   %edi$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	50                   	push   %eax$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	e8 62 eb ff ff       	call   f0104cae <debuginfo_eip>$/;"	l
f010614c	obj/kern/kernel.asm	/^f010614c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	85 c0                	test   %eax,%eax$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	78 cb                	js     f010611e <spin_unlock+0x78>$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	8b 06                	mov    (%esi),%eax$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	89 c2                	mov    %eax,%edx$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	52                   	push   %edx$/;"	l
f010615e	obj/kern/kernel.asm	/^f010615e:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	50                   	push   %eax$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	68 58 81 10 f0       	push   $0xf0108158$/;"	l
f0106170	obj/kern/kernel.asm	/^f0106170:	e8 41 d8 ff ff       	call   f01039b6 <cprintf>$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	eb b6                	jmp    f0106130 <spin_unlock+0x8a>$/;"	l
f010617a	obj/kern/kernel.asm	/^f010617a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	68 77 81 10 f0       	push   $0xf0108177$/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	6a 67                	push   $0x67$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	68 48 81 10 f0       	push   $0xf0108148$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	e8 b2 9e ff ff       	call   f0100040 <_panic>$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	66 90                	xchg   %ax,%ax$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190 <__udivdi3>:$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	f3 0f 1e fb          	endbr32 $/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	55                   	push   %ebp$/;"	l
f0106195	obj/kern/kernel.asm	/^f0106195:	57                   	push   %edi$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	56                   	push   %esi$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	53                   	push   %ebx$/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010619b	obj/kern/kernel.asm	/^f010619b:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	8b 6c 24 30          	mov    0x30(%esp),%ebp$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	8b 5c 24 38          	mov    0x38(%esp),%ebx$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	85 d2                	test   %edx,%edx$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	75 49                	jne    f01061f8 <__udivdi3+0x68>$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	39 f3                	cmp    %esi,%ebx$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	76 15                	jbe    f01061c8 <__udivdi3+0x38>$/;"	l
f01061b3	obj/kern/kernel.asm	/^f01061b3:	31 ff                	xor    %edi,%edi$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	89 e8                	mov    %ebp,%eax$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	89 f2                	mov    %esi,%edx$/;"	l
f01061b9	obj/kern/kernel.asm	/^f01061b9:	f7 f3                	div    %ebx$/;"	l
f01061bb	obj/kern/kernel.asm	/^f01061bb:	89 fa                	mov    %edi,%edx$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01061c0	obj/kern/kernel.asm	/^f01061c0:	5b                   	pop    %ebx$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	5e                   	pop    %esi$/;"	l
f01061c2	obj/kern/kernel.asm	/^f01061c2:	5f                   	pop    %edi$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	5d                   	pop    %ebp$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	c3                   	ret    $/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	89 d9                	mov    %ebx,%ecx$/;"	l
f01061ca	obj/kern/kernel.asm	/^f01061ca:	85 db                	test   %ebx,%ebx$/;"	l
f01061cc	obj/kern/kernel.asm	/^f01061cc:	75 0b                	jne    f01061d9 <__udivdi3+0x49>$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	31 d2                	xor    %edx,%edx$/;"	l
f01061d5	obj/kern/kernel.asm	/^f01061d5:	f7 f3                	div    %ebx$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	89 c1                	mov    %eax,%ecx$/;"	l
f01061d9	obj/kern/kernel.asm	/^f01061d9:	31 d2                	xor    %edx,%edx$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	89 f0                	mov    %esi,%eax$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	f7 f1                	div    %ecx$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	89 c6                	mov    %eax,%esi$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	89 e8                	mov    %ebp,%eax$/;"	l
f01061e3	obj/kern/kernel.asm	/^f01061e3:	89 f7                	mov    %esi,%edi$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	f7 f1                	div    %ecx$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	89 fa                	mov    %edi,%edx$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	5b                   	pop    %ebx$/;"	l
f01061ed	obj/kern/kernel.asm	/^f01061ed:	5e                   	pop    %esi$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	5f                   	pop    %edi$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	5d                   	pop    %ebp$/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0:	c3                   	ret    $/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	39 f2                	cmp    %esi,%edx$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	77 1c                	ja     f0106218 <__udivdi3+0x88>$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	0f bd fa             	bsr    %edx,%edi$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	75 2c                	jne    f0106230 <__udivdi3+0xa0>$/;"	l
f0106204	obj/kern/kernel.asm	/^f0106204:	39 f2                	cmp    %esi,%edx$/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	72 06                	jb     f010620e <__udivdi3+0x7e>$/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	31 c0                	xor    %eax,%eax$/;"	l
f010620a	obj/kern/kernel.asm	/^f010620a:	39 eb                	cmp    %ebp,%ebx$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	77 ad                	ja     f01061bb <__udivdi3+0x2b>$/;"	l
f010620e	obj/kern/kernel.asm	/^f010620e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106213	obj/kern/kernel.asm	/^f0106213:	eb a6                	jmp    f01061bb <__udivdi3+0x2b>$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106218	obj/kern/kernel.asm	/^f0106218:	31 ff                	xor    %edi,%edi$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	31 c0                	xor    %eax,%eax$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	89 fa                	mov    %edi,%edx$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	5b                   	pop    %ebx$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	5e                   	pop    %esi$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	5f                   	pop    %edi$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	5d                   	pop    %ebp$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	c3                   	ret    $/;"	l
f0106226	obj/kern/kernel.asm	/^f0106226:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	89 f9                	mov    %edi,%ecx$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106237	obj/kern/kernel.asm	/^f0106237:	29 f8                	sub    %edi,%eax$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	d3 e2                	shl    %cl,%edx$/;"	d
f010623b	obj/kern/kernel.asm	/^f010623b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010623f	obj/kern/kernel.asm	/^f010623f:	89 c1                	mov    %eax,%ecx$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	89 da                	mov    %ebx,%edx$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	d3 ea                	shr    %cl,%edx$/;"	d
f0106245	obj/kern/kernel.asm	/^f0106245:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	09 d1                	or     %edx,%ecx$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	89 f2                	mov    %esi,%edx$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106251	obj/kern/kernel.asm	/^f0106251:	89 f9                	mov    %edi,%ecx$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106255	obj/kern/kernel.asm	/^f0106255:	89 c1                	mov    %eax,%ecx$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	d3 ea                	shr    %cl,%edx$/;"	d
f0106259	obj/kern/kernel.asm	/^f0106259:	89 f9                	mov    %edi,%ecx$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	89 eb                	mov    %ebp,%ebx$/;"	l
f0106261	obj/kern/kernel.asm	/^f0106261:	d3 e6                	shl    %cl,%esi$/;"	d
f0106263	obj/kern/kernel.asm	/^f0106263:	89 c1                	mov    %eax,%ecx$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	d3 eb                	shr    %cl,%ebx$/;"	d
f0106267	obj/kern/kernel.asm	/^f0106267:	09 de                	or     %ebx,%esi$/;"	l
f0106269	obj/kern/kernel.asm	/^f0106269:	89 f0                	mov    %esi,%eax$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	89 d6                	mov    %edx,%esi$/;"	l
f0106271	obj/kern/kernel.asm	/^f0106271:	89 c3                	mov    %eax,%ebx$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	39 d6                	cmp    %edx,%esi$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	72 15                	jb     f0106290 <__udivdi3+0x100>$/;"	l
f010627b	obj/kern/kernel.asm	/^f010627b:	89 f9                	mov    %edi,%ecx$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	d3 e5                	shl    %cl,%ebp$/;"	d
f010627f	obj/kern/kernel.asm	/^f010627f:	39 c5                	cmp    %eax,%ebp$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	73 04                	jae    f0106287 <__udivdi3+0xf7>$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	39 d6                	cmp    %edx,%esi$/;"	l
f0106285	obj/kern/kernel.asm	/^f0106285:	74 09                	je     f0106290 <__udivdi3+0x100>$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	89 d8                	mov    %ebx,%eax$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	31 ff                	xor    %edi,%edi$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	e9 2b ff ff ff       	jmp    f01061bb <__udivdi3+0x2b>$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	31 ff                	xor    %edi,%edi$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	e9 21 ff ff ff       	jmp    f01061bb <__udivdi3+0x2b>$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	66 90                	xchg   %ax,%ax$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	66 90                	xchg   %ax,%ax$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	66 90                	xchg   %ax,%ax$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0 <__umoddi3>:$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	f3 0f 1e fb          	endbr32 $/;"	l
f01062a4	obj/kern/kernel.asm	/^f01062a4:	55                   	push   %ebp$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	57                   	push   %edi$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	56                   	push   %esi$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	53                   	push   %ebx$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	8b 5c 24 34          	mov    0x34(%esp),%ebx$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	8b 44 24 3c          	mov    0x3c(%esp),%eax$/;"	l
f01062b3	obj/kern/kernel.asm	/^f01062b3:	8b 74 24 30          	mov    0x30(%esp),%esi$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	89 da                	mov    %ebx,%edx$/;"	l
f01062bd	obj/kern/kernel.asm	/^f01062bd:	85 c0                	test   %eax,%eax$/;"	l
f01062bf	obj/kern/kernel.asm	/^f01062bf:	75 3f                	jne    f0106300 <__umoddi3+0x60>$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	39 df                	cmp    %ebx,%edi$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	76 13                	jbe    f01062d8 <__umoddi3+0x38>$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	89 f0                	mov    %esi,%eax$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	f7 f7                	div    %edi$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	89 d0                	mov    %edx,%eax$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	31 d2                	xor    %edx,%edx$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	5b                   	pop    %ebx$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	5e                   	pop    %esi$/;"	l
f01062d2	obj/kern/kernel.asm	/^f01062d2:	5f                   	pop    %edi$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	5d                   	pop    %ebp$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	c3                   	ret    $/;"	l
f01062d5	obj/kern/kernel.asm	/^f01062d5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	89 fd                	mov    %edi,%ebp$/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da:	85 ff                	test   %edi,%edi$/;"	l
f01062dc	obj/kern/kernel.asm	/^f01062dc:	75 0b                	jne    f01062e9 <__umoddi3+0x49>$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	31 d2                	xor    %edx,%edx$/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	f7 f7                	div    %edi$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	89 c5                	mov    %eax,%ebp$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	89 d8                	mov    %ebx,%eax$/;"	l
f01062eb	obj/kern/kernel.asm	/^f01062eb:	31 d2                	xor    %edx,%edx$/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	f7 f5                	div    %ebp$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	89 f0                	mov    %esi,%eax$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	f7 f5                	div    %ebp$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	89 d0                	mov    %edx,%eax$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	eb d4                	jmp    f01062cb <__umoddi3+0x2b>$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	66 90                	xchg   %ax,%ax$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	89 f1                	mov    %esi,%ecx$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	39 d8                	cmp    %ebx,%eax$/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304:	76 0a                	jbe    f0106310 <__umoddi3+0x70>$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	89 f0                	mov    %esi,%eax$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010630b	obj/kern/kernel.asm	/^f010630b:	5b                   	pop    %ebx$/;"	l
f010630c	obj/kern/kernel.asm	/^f010630c:	5e                   	pop    %esi$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	5f                   	pop    %edi$/;"	l
f010630e	obj/kern/kernel.asm	/^f010630e:	5d                   	pop    %ebp$/;"	l
f010630f	obj/kern/kernel.asm	/^f010630f:	c3                   	ret    $/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	75 20                	jne    f0106338 <__umoddi3+0x98>$/;"	l
f0106318	obj/kern/kernel.asm	/^f0106318:	39 d8                	cmp    %ebx,%eax$/;"	l
f010631a	obj/kern/kernel.asm	/^f010631a:	0f 82 b0 00 00 00    	jb     f01063d0 <__umoddi3+0x130>$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	39 f7                	cmp    %esi,%edi$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	0f 86 a8 00 00 00    	jbe    f01063d0 <__umoddi3+0x130>$/;"	l
f0106328	obj/kern/kernel.asm	/^f0106328:	89 c8                	mov    %ecx,%eax$/;"	l
f010632a	obj/kern/kernel.asm	/^f010632a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	5b                   	pop    %ebx$/;"	l
f010632e	obj/kern/kernel.asm	/^f010632e:	5e                   	pop    %esi$/;"	l
f010632f	obj/kern/kernel.asm	/^f010632f:	5f                   	pop    %edi$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	5d                   	pop    %ebp$/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	c3                   	ret    $/;"	l
f0106332	obj/kern/kernel.asm	/^f0106332:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106338	obj/kern/kernel.asm	/^f0106338:	89 e9                	mov    %ebp,%ecx$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	29 ea                	sub    %ebp,%edx$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	d3 e0                	shl    %cl,%eax$/;"	d
f0106343	obj/kern/kernel.asm	/^f0106343:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106347	obj/kern/kernel.asm	/^f0106347:	89 d1                	mov    %edx,%ecx$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	89 f8                	mov    %edi,%eax$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	d3 e8                	shr    %cl,%eax$/;"	d
f010634d	obj/kern/kernel.asm	/^f010634d:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106355	obj/kern/kernel.asm	/^f0106355:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106359	obj/kern/kernel.asm	/^f0106359:	09 c1                	or     %eax,%ecx$/;"	l
f010635b	obj/kern/kernel.asm	/^f010635b:	89 d8                	mov    %ebx,%eax$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	d3 e7                	shl    %cl,%edi$/;"	d
f0106365	obj/kern/kernel.asm	/^f0106365:	89 d1                	mov    %edx,%ecx$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	d3 e8                	shr    %cl,%eax$/;"	d
f0106369	obj/kern/kernel.asm	/^f0106369:	89 e9                	mov    %ebp,%ecx$/;"	l
f010636b	obj/kern/kernel.asm	/^f010636b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010636f	obj/kern/kernel.asm	/^f010636f:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106371	obj/kern/kernel.asm	/^f0106371:	89 c7                	mov    %eax,%edi$/;"	l
f0106373	obj/kern/kernel.asm	/^f0106373:	89 d1                	mov    %edx,%ecx$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	89 f0                	mov    %esi,%eax$/;"	l
f0106377	obj/kern/kernel.asm	/^f0106377:	d3 e8                	shr    %cl,%eax$/;"	d
f0106379	obj/kern/kernel.asm	/^f0106379:	89 e9                	mov    %ebp,%ecx$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	89 fa                	mov    %edi,%edx$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	d3 e6                	shl    %cl,%esi$/;"	d
f010637f	obj/kern/kernel.asm	/^f010637f:	09 d8                	or     %ebx,%eax$/;"	l
f0106381	obj/kern/kernel.asm	/^f0106381:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0106385	obj/kern/kernel.asm	/^f0106385:	89 d1                	mov    %edx,%ecx$/;"	l
f0106387	obj/kern/kernel.asm	/^f0106387:	89 f3                	mov    %esi,%ebx$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	89 c6                	mov    %eax,%esi$/;"	l
f010638f	obj/kern/kernel.asm	/^f010638f:	89 d7                	mov    %edx,%edi$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	72 06                	jb     f010639b <__umoddi3+0xfb>$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	75 10                	jne    f01063a7 <__umoddi3+0x107>$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106399	obj/kern/kernel.asm	/^f0106399:	73 0c                	jae    f01063a7 <__umoddi3+0x107>$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	2b 44 24 0c          	sub    0xc(%esp),%eax$/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f:	1b 54 24 08          	sbb    0x8(%esp),%edx$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	89 d7                	mov    %edx,%edi$/;"	l
f01063a5	obj/kern/kernel.asm	/^f01063a5:	89 c6                	mov    %eax,%esi$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	89 ca                	mov    %ecx,%edx$/;"	l
f01063a9	obj/kern/kernel.asm	/^f01063a9:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f01063ae	obj/kern/kernel.asm	/^f01063ae:	29 f3                	sub    %esi,%ebx$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	19 fa                	sbb    %edi,%edx$/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2:	89 d0                	mov    %edx,%eax$/;"	l
f01063b4	obj/kern/kernel.asm	/^f01063b4:	d3 e0                	shl    %cl,%eax$/;"	d
f01063b6	obj/kern/kernel.asm	/^f01063b6:	89 e9                	mov    %ebp,%ecx$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	d3 eb                	shr    %cl,%ebx$/;"	d
f01063ba	obj/kern/kernel.asm	/^f01063ba:	d3 ea                	shr    %cl,%edx$/;"	d
f01063bc	obj/kern/kernel.asm	/^f01063bc:	09 d8                	or     %ebx,%eax$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	5b                   	pop    %ebx$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	5e                   	pop    %esi$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	5f                   	pop    %edi$/;"	l
f01063c4	obj/kern/kernel.asm	/^f01063c4:	5d                   	pop    %ebp$/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5:	c3                   	ret    $/;"	l
f01063c6	obj/kern/kernel.asm	/^f01063c6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	89 da                	mov    %ebx,%edx$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	29 fe                	sub    %edi,%esi$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	19 c2                	sbb    %eax,%edx$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	89 f1                	mov    %esi,%ecx$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	89 c8                	mov    %ecx,%eax$/;"	l
f01063da	obj/kern/kernel.asm	/^f01063da:	e9 4b ff ff ff       	jmp    f010632a <__umoddi3+0x8a>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File	typeref:typename:uint32_t[]
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File	typeref:typename:uint32_t
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File	typeref:typename:char[]
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File	typeref:typename:uint8_t[]
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File	typeref:typename:off_t
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File	typeref:typename:uint32_t
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	typeref:typename:int	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/fs/fs.asm	/^  fd = of->o_fd;$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/spawnfaultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = r;$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f	typeref:typename:char *
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f	typeref:typename:int
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f	typeref:typename:int
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f	typeref:typename:int
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd	typeref:typename:int
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon60b4898e010a	typeref:struct:FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f	typeref:typename:int
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd	typeref:typename:off_t
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd	typeref:typename:int
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	typeref:typename:uint32_t	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	typeref:typename:int	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f	typeref:typename:int
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f	typeref:typename:void
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	typeref:typename:int	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f	typeref:typename:int
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f	typeref:typename:int
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f	typeref:typename:ssize_t
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f	typeref:typename:int
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	typeref:typename:void	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f	typeref:typename:int
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:QEMU
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f	typeref:typename:void
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f	typeref:typename:void
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f	typeref:typename:void
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v	typeref:typename:int[256]
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f	typeref:typename:void
fork	lib/fork.c	/^fork(void)$/;"	f	typeref:typename:envid_t
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	typeref:typename:void
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	typeref:typename:void
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f	typeref:typename:int
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f	typeref:typename:void
fs_init	fs/fs.c	/^fs_init(void)$/;"	f	typeref:typename:void
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f	typeref:typename:void
fs_test	fs/test.c	/^fs_test(void)$/;"	f	typeref:typename:void
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnfaultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	typeref:typename:int (*)(envid_t envid,union Fsipc * req)	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	typeref:typename:int	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc *
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f	typeref:typename:int
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f	typeref:typename:int
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	typeref:typename:int (*)(int argc,char ** argv,struct Trapframe * tf)	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	typeref:typename:unsigned:5
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	typeref:typename:unsigned:2
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:3
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	typeref:typename:unsigned:4
gdb	GNUmakefile	/^gdb:$/;"	t
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc[]
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	typeref:typename:void	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	m	class:QEMU
getchar	kern/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getchar	lib/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	typeref:typename:long long	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f	typeref:typename:int
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	typeref:typename:unsigned long long	file:
git-handin	GNUmakefile	/^git-handin: handin-check$/;"	t
grade	GNUmakefile	/^grade:$/;"	t
handin	GNUmakefile	/^handin: tarball-pref myapi.key$/;"	t
handin-check	GNUmakefile	/^handin-check:$/;"	t
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	file:
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:QEMU
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	typeref:typename:void
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	typeref:typename:void
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	typeref:typename:void
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v	typeref:typename:fshandler[]
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v	typeref:typename:const char *
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	typeref:typename:int	file:
hook-stop	.gdbinit	/^define hook-stop$/;"	d
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/kern/kernel.asm	/^  i = PADDR(nextfree) \/ PGSIZE;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	typeref:typename:void	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f	typeref:typename:void
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile	typeref:typename:int
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f	typeref:typename:bool
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f	typeref:typename:int
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f	typeref:typename:void
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	typeref:typename:int	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f	typeref:typename:int
idle	obj/kern/kernel.asm	/^	idle = thiscpu->cpu_env;$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc[256]
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	typeref:typename:int	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	typeref:typename:int	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	typeref:typename:uint8_t	file:
inb	inc/x86.h	/^inb(int port)$/;"	f	typeref:typename:uint8_t
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	typeref:typename:int	file:
inl	inc/x86.h	/^inl(int port)$/;"	f	typeref:typename:uint32_t
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultio.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnfaultio.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t	typeref:typename:short
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t	typeref:typename:int
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnfaultio.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t	typeref:typename:long long
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t	typeref:typename:__signed char
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t	typeref:typename:int32_t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	typeref:typename:void
inw	inc/x86.h	/^inw(int port)$/;"	f	typeref:typename:uint16_t
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	typeref:typename:envid_t
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	typeref:typename:int32_t
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	typeref:typename:void
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v	typeref:typename:uint16_t
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	typeref:typename:void
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	typeref:typename:int
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f	typeref:typename:int
ismp	kern/mpconfig.c	/^int ismp;$/;"	v	typeref:typename:int
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	typeref:typename:void	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	typeref:typename:void
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	typeref:typename:int	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v	typeref:typename:pde_t *
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	m	class:QEMU
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v	typeref:typename:volatile uint32_t *
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	typeref:typename:void
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	typeref:typename:void
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	typeref:typename:void
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	typeref:typename:void
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v	typeref:typename:physaddr_t
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	typeref:typename:physaddr_t	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	typeref:typename:void	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe *	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lastcs	.gdbinit	/^set $lastcs = -1$/;"	t
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc	typeref:typename:uint32_t
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc	typeref:typename:uint32_t
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	typeref:typename:void
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	typeref:typename:void
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	typeref:typename:void
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	typeref:typename:uint8_t	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnfaultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	typeref:typename:void
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	typeref:typename:void
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	typeref:typename:void
line	user/num.c	/^int line = 0;$/;"	v	typeref:typename:int
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	typeref:typename:void
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	typeref:typename:void	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	typeref:typename:void
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	typeref:typename:unsigned
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultio.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnfaultio.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	typeref:typename:void	file:
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f	typeref:typename:void
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f	typeref:typename:void
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f	typeref:typename:void
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	typeref:typename:void
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f	typeref:typename:int
make	gradelib.py	/^def make(*target):$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	typeref:typename:int	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	typeref:typename:unsigned
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	typeref:typename:void
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	typeref:typename:void
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	typeref:typename:void	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	typeref:typename:int
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	typeref:typename:void *
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	typeref:typename:void	file:
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	typeref:typename:void *
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	typeref:typename:void
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	typeref:typename:void
mp_main	kern/init.c	/^mp_main(void)$/;"	f	typeref:typename:void
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	typeref:struct:mpconf *	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v	typeref:typename:void *
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	typeref:struct:mp *	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	typeref:struct:mp *	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	typeref:typename:char *	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	typeref:typename:const char *
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v	typeref:typename:char *
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v	typeref:typename:const char *
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v	typeref:typename:const char *
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anonf8d212780108	typeref:typename:char[5000]	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anonf8d212780108	typeref:typename:char[1000]	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v	typeref:typename:const char *
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v	typeref:typename:const char *
myapi.key	GNUmakefile	/^myapi.key:$/;"	t
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	typeref:typename:int	file:
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnfaultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	typeref:typename:uint16_t
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	typeref:typename:uint8_t
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	typeref:typename:uint32_t
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	typeref:typename:uint8_t
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	typeref:typename:uintptr_t
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	typeref:typename:const char *	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	typeref:typename:char *
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v	typeref:typename:uint32_t
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v	typeref:typename:int
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnfaultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnfaultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v	typeref:typename:size_t
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	typeref:typename:size_t	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnfaultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f	typeref:typename:void
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnfaultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	typeref:typename:int	file:
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:Fd *	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:File *	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	typeref:typename:uint32_t	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	typeref:typename:int	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	typeref:typename:physaddr_t	file:
off_t	fs/fsformat.c	/^#define off_t /;"	d	file:
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	typeref:typename:uint32_t	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t	typeref:typename:int32_t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	/^#define offsetof(/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f	typeref:typename:int
opencons	lib/console.c	/^opencons(void)$/;"	f	typeref:typename:int
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f	typeref:typename:void
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f	typeref:typename:int
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f	typeref:typename:int
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile[]
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	typeref:typename:void
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	typeref:typename:void
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	typeref:typename:void
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnfaultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnfaultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	typeref:typename:uint8_t[]	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	typeref:typename:off_t	file:
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	typeref:typename:off_t	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	typeref:struct:PageInfo *
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/fs/fs.asm	/^		padc = ' ';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^		padc = ' ';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^		padc = ' ';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^		padc = ' ';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^		padc = ' ';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^		padc = ' ';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^		padc = ' ';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultio.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^		padc = ' ';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^		padc = ' ';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^		padc = ' ';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^		padc = ' ';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^		padc = ' ';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^		padc = ' ';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^		padc = ' ';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^		padc = ' ';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^		padc = ' ';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^		padc = ' ';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^		padc = ' ';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnfaultio.asm	/^		padc = ' ';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^		padc = ' ';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^		padc = ' ';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^		padc = ' ';$/;"	d
page	obj/kern/kernel.asm	/^		page = page_lookup(curenv->env_pgdir, srcva, &pte_addr);$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	typeref:typename:void *
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	typeref:typename:physaddr_t
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	typeref:struct:PageInfo *
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	typeref:typename:void
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	typeref:typename:void
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	typeref:typename:void
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo *	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i]; \/\/头插法$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^  page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	typeref:typename:void
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	typeref:typename:int
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	typeref:struct:PageInfo *
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f	typeref:typename:int
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo *
pages	lib/entry.S	/^	.set pages, UPAGES$/;"	d
pages	obj/kern/kernel.asm	/^  pages = (struct PageInfo *)boot_alloc(bytes_to_alloc);$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f	typeref:typename:void
panic	inc/assert.h	/^#define panic(/;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v	typeref:typename:const char *
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	typeref:typename:uintptr_t[10]
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	typeref:typename:uint32_t
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	typeref:typename:uint16_t
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t	typeref:typename:uint32_t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v	typeref:typename:unsigned char[][]
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/kern/kernel.asm	/^  perm = perm | PTE_P;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	typeref:typename:pte_t *
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	typeref:typename:void	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	typeref:typename:void	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^  ph = (struct Proghdr *) (binary + elfhdr->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnfaultio.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	typeref:typename:physaddr_t	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	typeref:typename:uint32_t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t	typeref:typename:uint32_t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	typeref:typename:void
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f	typeref:typename:int
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f	typeref:typename:int
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo *
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	typeref:typename:uint16_t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t	typeref:typename:uint32_t
pre-qemu	GNUmakefile	/^pre-qemu: .gdbinit$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnfaultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnfaultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnfaultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prep-%	GNUmakefile	/^prep-%:$/;"	t
primeproc	user/primes.c	/^primeproc(void)$/;"	f	typeref:typename:unsigned
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f	typeref:typename:unsigned
print-gdbport	GNUmakefile	/^print-gdbport:$/;"	t
print-qemu	GNUmakefile	/^print-qemu:$/;"	t
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	typeref:typename:void
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	typeref:typename:void
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f	typeref:typename:int
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	typeref:typename:void
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	typeref:typename:void	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	typeref:typename:uint8_t[20]	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnfaultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t	typeref:typename:uint32_t
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	typeref:typename:void	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	typeref:typename:void	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	typeref:typename:void	file:
qemu	GNUmakefile	/^qemu: $(IMAGES) pre-qemu$/;"	t
qemu-gdb	GNUmakefile	/^qemu-gdb: $(IMAGES) pre-qemu$/;"	t
qemu-nox	GNUmakefile	/^qemu-nox: $(IMAGES) pre-qemu$/;"	t
qemu-nox-gdb	GNUmakefile	/^qemu-nox-gdb: $(IMAGES) pre-qemu$/;"	t
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/fs/fs.asm	/^      r = alloc_block();$/;"	d
r	obj/fs/fs.asm	/^    r = alloc_block();$/;"	d
r	obj/fs/fs.asm	/^    r = ide_write(blockno*8, addr, 8);$/;"	d
r	obj/fs/fs.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/fs/fs.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/fs/fs.asm	/^    r = sys_page_map(0, addr, 0, addr, uvpt[PGNUM(addr)] & PTE_SYSCALL); $/;"	d
r	obj/fs/fs.asm	/^  r = file_block_walk(f, filebno, &pdiskbno, true);$/;"	d
r	obj/fs/fs.asm	/^  r = file_read(f, ret->ret_buf, req->req_n, fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^  r = file_write(f, req->req_buf, req->req_n, fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^  r = ide_read(blockno*8, ROUNDDOWN(addr, PGSIZE), 8);$/;"	d
r	obj/fs/fs.asm	/^  r = openfile_lookup(envid, req->req_fileid, &of);$/;"	d
r	obj/fs/fs.asm	/^  r = sys_page_alloc(0, ROUNDDOWN(addr, PGSIZE), PTE_U|PTE_P|PTE_W);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/faultalloc.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/faultallocbad.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/faultallocbad.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/faultdie.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/faultdie.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/faultnostack.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/faultnostack.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/faultregs.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/faultregs.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/forktree.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/forktree.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/forktree.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/pingpong.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/pingpong.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/pingpongs.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/pingpongs.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/pingpongs.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/primes.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/primes.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/primes.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/primespipe.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/primespipe.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/sendpage.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/sendpage.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/sendpage.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/sh.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/sh.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = 0;$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/spin.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/spin.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/stresssched.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/stresssched.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/stresssched.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/testfdsharing.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/testfdsharing.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/testpipe.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/testpipe.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/testpiperace.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/testpiperace.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/testpiperace2.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/testpiperace2.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/testpteshare.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/testpteshare.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^    r = sys_env_set_pgfault_upcall(sys_getenvid(), _pgfault_upcall);$/;"	d
r	obj/user/testshell.asm	/^    r = sys_page_alloc(thisenv->env_id, (void*)(UXSTACKTOP-PGSIZE), PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/user/testshell.asm	/^  r = sys_env_set_pgfault_upcall(e_id, _pgfault_upcall);$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnfaultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	typeref:typename:uint32_t
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	typeref:typename:uint32_t
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	typeref:typename:uint32_t
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	typeref:typename:uint32_t
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f	typeref:typename:ssize_t
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	typeref:typename:uint32_t
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	typeref:typename:uint32_t
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	typeref:typename:uint32_t
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	typeref:typename:uint64_t
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	typeref:typename:char *
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f	typeref:typename:void
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f	typeref:typename:ssize_t
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	typeref:typename:void
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	typeref:typename:void
realclean	GNUmakefile	/^realclean: clean$/;"	t
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	typeref:typename:uint32_t
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	typeref:typename:void	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	file:
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write	typeref:typename:char[]
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush	typeref:typename:int
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read	typeref:typename:int
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size	typeref:typename:int
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat	typeref:typename:int
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write	typeref:typename:int
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read	typeref:typename:size_t
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write	typeref:typename:size_t
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open	typeref:typename:int
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open	typeref:typename:char[]
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove	typeref:typename:char[]
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size	typeref:typename:off_t
res	obj/kern/kernel.asm	/^    res = (pte_t*)KADDR(PTE_ADDR(cur_pde)) + PTX(va);$/;"	d
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	typeref:typename:uint8_t[3]	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	typeref:typename:uint8_t[8]	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	typeref:typename:ssize_t	file:
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnfaultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnfaultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read	typeref:typename:char[]
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat	typeref:typename:int
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat	typeref:typename:char[]
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat	typeref:typename:off_t
retval	obj/fs/fs.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/cat.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/echo.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/fairness.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/icode.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/init.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/ls.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/lsfd.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/num.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/pingpong.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/pingpongs.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/primes.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/primespipe.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/sendpage.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/sh.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/spawnfaultio.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/spawnhello.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/testfdsharing.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/testfile.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/testkbd.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/testpipe.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/testpiperace.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/testpiperace2.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/testpteshare.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
retval	obj/user/testshell.asm	/^		retval = (pg == NULL) ? sys_ipc_try_send(to_env, val, (void*)UTOP, 0) : sys_ipc_try_send(to_en/;"	d
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
run-%	GNUmakefile	/^run-%: prep-% pre-qemu$/;"	t
run-%-gdb	GNUmakefile	/^run-%-gdb: prep-% pre-qemu$/;"	t
run-%-nox	GNUmakefile	/^run-%-nox: prep-% pre-qemu$/;"	t
run-%-nox-gdb	GNUmakefile	/^run-%-nox-gdb: prep-% pre-qemu$/;"	t
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	member:Runner.run_qemu	file:
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	file:
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	typeref:typename:int	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f	typeref:typename:void
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultio.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnfaultio.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super	typeref:typename:uint32_t
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super	typeref:typename:uint32_t
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:File
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	file:
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	typeref:typename:void
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	typeref:typename:void
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	typeref:typename:unsigned:2
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f	typeref:typename:int
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	typeref:typename:bool	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	typeref:typename:void	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	typeref:typename:void
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	typeref:typename:int	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	typeref:typename:void	file:
serve	fs/serv.c	/^serve(void)$/;"	f	typeref:typename:void
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f	typeref:typename:int
serve_init	fs/serv.c	/^serve_init(void)$/;"	f	typeref:typename:void
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f	typeref:typename:int
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f	typeref:typename:int
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f	typeref:typename:int
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f	typeref:typename:int
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f	typeref:typename:int
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f	typeref:typename:int
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	typeref:typename:void
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	file:
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f	typeref:typename:int
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	typeref:typename:uint8_t[4]	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	typeref:typename:uint8_t[4]	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	typeref:typename:uint8_t[4]	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t	typeref:typename:uint32_t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultio.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnfaultio.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	typeref:typename:const char *	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	typeref:typename:int
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f	typeref:typename:int
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f	typeref:typename:int
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	typeref:typename:uint8_t	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	/^#define spin_initlock(/;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	typeref:typename:void
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	typeref:typename:void
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	typeref:typename:void	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t	typeref:typename:int32_t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnfaultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Dev *
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat	typeref:typename:int
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat	typeref:typename:char[]
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat	typeref:typename:off_t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	typeref:typename:void	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:typename:const struct Stab *	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:typename:const struct Stab *	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	typeref:typename:const char *	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	typeref:typename:const char *	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f	typeref:typename:void
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f	typeref:typename:int
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultio.asm	/^static inline uint32_t$/;"	l
static	obj/user/faultio.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnfaultio.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnfaultio.asm	/^static int$/;"	l
static	obj/user/spawnfaultio.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	/^#define static_assert(/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	file:
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v	typeref:typename:const char *
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v	typeref:typename:const char *
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	typeref:typename:char *
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	typeref:typename:char *
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	typeref:typename:int
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	typeref:typename:char *
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	typeref:typename:char *
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnfaultio.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnfaultio.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	typeref:typename:int
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	typeref:typename:int
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	typeref:typename:char *
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	typeref:typename:int
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	typeref:typename:long
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	typeref:typename:uint8_t	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f	typeref:typename:int
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super *
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super *
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f	typeref:typename:int
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	typeref:typename:int	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	typeref:typename:int
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	typeref:typename:void	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	typeref:typename:void
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	typeref:typename:int	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	typeref:typename:int
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	typeref:typename:int	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	typeref:typename:int
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	typeref:typename:int	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	typeref:typename:int
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	typeref:typename:int	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	typeref:typename:int
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	typeref:typename:envid_t
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	typeref:typename:envid_t	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	typeref:typename:envid_t	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	typeref:typename:envid_t
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	typeref:typename:int	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	typeref:typename:int
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	typeref:typename:int	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	typeref:typename:int
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	typeref:typename:int	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	typeref:typename:int
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	typeref:typename:int	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	typeref:typename:int
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	typeref:typename:int	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	typeref:typename:int
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	typeref:typename:void	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	typeref:typename:void
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	typeref:typename:int32_t
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	typeref:typename:int32_t	file:
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
tarball-pref	GNUmakefile	/^tarball-pref: handin-check$/;"	t
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultio	grade-lab5	/^def test_faultio():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	typeref:typename:uint32_t
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	typeref:typename:uintptr_t
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	typeref:typename:uint32_t
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	typeref:typename:uintptr_t
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	typeref:typename:uint32_t
thiscpu	kern/cpu.h	/^#define thiscpu /;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:typename:const volatile struct Env *
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnfaultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^      thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	typeref:typename:void
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	typeref:typename:void
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	typeref:typename:void	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	typeref:typename:void
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	typeref:typename:void
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	typeref:typename:const char *	file:
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	typeref:typename:physaddr_t
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	typeref:typename:uint16_t
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc	typeref:typename:uint8_t
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	typeref:typename:uint8_t	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t	typeref:typename:uint32_t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultio.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/spawnfaultio.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	typeref:typename:void
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f	typeref:typename:void
usage	user/ls.c	/^usage(void)$/;"	f	typeref:typename:void
usage	user/lsfd.c	/^usage(void)$/;"	f	typeref:typename:void
usage	user/sh.c	/^usage(void)$/;"	f	typeref:typename:void
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	typeref:typename:void
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	typeref:typename:int
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	typeref:typename:uintptr_t	file:
user_mem_check_addr	obj/kern/kernel.asm	/^        user_mem_check_addr = (uintptr_t)(start < va ? va : start);$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^    user_mem_check_addr = (uintptr_t)va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^       utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^       utf = (struct UTrapframe *)(tf->tf_esp - 4 - sizeof(struct UTrapframe));$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	typeref:typename:uint32_t
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	typeref:typename:uintptr_t
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	typeref:typename:uint32_t
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	typeref:typename:uintptr_t
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	typeref:typename:uint32_t
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:PushRegs
uvpd	lib/entry.S	/^	.set uvpd, (UVPT+(UVPT>>12)*4)$/;"	d
uvpt	lib/entry.S	/^	.set uvpt, UVPT$/;"	d
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnfaultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
va_end	inc/stdarg.h	/^#define va_end(/;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f	typeref:typename:bool
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f	typeref:typename:bool
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	inc/stdarg.h	/^#define va_start(/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v	typeref:typename:uint32_t
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultio.asm	/^void *$/;"	l
void	obj/user/faultio.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnfaultio.asm	/^void *$/;"	l
void	obj/user/spawnfaultio.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
wait	gradelib.py	/^    def wait(self):$/;"	m	class:QEMU
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f	typeref:typename:void
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	typeref:typename:void
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	typeref:typename:int	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	/^#define warn(/;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultio.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f	typeref:typename:ssize_t
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	typeref:typename:void
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	typeref:typename:void	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f	typeref:typename:void
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f	typeref:typename:void
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	typeref:typename:uint32_t
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	typeref:typename:int	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v	typeref:typename:int
